using System;
using System.Collections.Generic;
using BansheeGz.BGDatabase;
using Alias_rifegrt_Pin = E_Pin;
using Alias_rifegrt_BiomeGameplayData = E_BiomeGameplayData;
using Alias_rifegrt_BiomeIdentifier = E_BiomeIdentifier;
using Alias_rifegrt_LevelData = E_LevelData;
using Alias_rifegrt_LevelGameplayData = E_LevelGameplayData;
using Alias_rifegrt_MapWalls = E_MapWalls;
using Alias_rifegrt_Segments = E_Segments;
using Alias_rifegrt_Dialogues = E_Dialogues;
using Alias_rifegrt_SegmentsGameplayData = E_SegmentsGameplayData;
using Alias_rifegrt_Objects = E_Objects;
using Alias_rifegrt_QuestDialogues = E_QuestDialogues;
using Alias_rifegrt_ReturnDialogues = E_ReturnDialogues;
using Alias_rifegrt_QuestWaitingDialogues = E_QuestWaitingDialogues;
using Alias_rifegrt_ObjectsGameplayData = E_ObjectsGameplayData;
using Alias_rifegrt_AltReturnDialogues = E_AltReturnDialogues;
using Alias_rifegrt_FluffDialogues = E_FluffDialogues;

//=============================================================
//||                   Generated by BansheeGz Code Generator ||
//=============================================================

#pragma warning disable 414

//=============================================================
//||                   Generated by BansheeGz Code Generator ||
//=============================================================

public partial class E_LevelData : BGEntity
{

	//=============================================================
	//||                   Generated by BansheeGz Code Generator ||
	//=============================================================

	public class Factory : BGEntity.EntityFactory
	{
		public BGEntity NewEntity(BGMetaEntity meta)
		{
			return new E_LevelData(meta);
		}
		public BGEntity NewEntity(BGMetaEntity meta, BGId id)
		{
			return new E_LevelData(meta, id);
		}
	}
	private static BansheeGz.BGDatabase.BGMetaRow _metaDefault;
	public static BansheeGz.BGDatabase.BGMetaRow MetaDefault
	{
		get
		{
			if(_metaDefault==null || _metaDefault.IsDeleted) _metaDefault=BGRepo.I.GetMeta<BansheeGz.BGDatabase.BGMetaRow>(new BGId(4612244309294333557UL,1881374458602735547UL));
			return _metaDefault;
		}
	}
	public static BansheeGz.BGDatabase.BGRepoEvents Events
	{
		get
		{
			return BGRepo.I.Events;
		}
	}
	private static readonly List<BGEntity> _find_Entities_Result = new List<BGEntity>();
	public static int CountEntities
	{
		get
		{
			return MetaDefault.CountEntities;
		}
	}
	public System.String f_name
	{
		get
		{
			return _f_name[Index];
		}
		set
		{
			_f_name[Index] = value;
		}
	}
	public E_Pin f_Pin
	{
		get
		{
			return (E_Pin) _f_Pin[Index];
		}
		set
		{
			_f_Pin[Index] = value;
		}
	}
	public System.String f_Level
	{
		get
		{
			return _f_Level[Index];
		}
		set
		{
			_f_Level[Index] = value;
		}
	}
	public System.Boolean f_InMap
	{
		get
		{
			return _f_InMap[Index];
		}
		set
		{
			_f_InMap[Index] = value;
		}
	}
	public System.Int32 f_LocksAmount
	{
		get
		{
			return _f_LocksAmount[Index];
		}
		set
		{
			_f_LocksAmount[Index] = value;
		}
	}
	public System.Boolean f_SegmentPresent
	{
		get
		{
			return _f_SegmentPresent[Index];
		}
		set
		{
			_f_SegmentPresent[Index] = value;
		}
	}
	public System.Boolean f_ObjectPresent
	{
		get
		{
			return _f_ObjectPresent[Index];
		}
		set
		{
			_f_ObjectPresent[Index] = value;
		}
	}
	public List<E_Pin> f_UnlocksPins
	{
		get
		{
			var val = _f_UnlocksPins[Index];
			if(val==null || val.Count==0) return null;
			var _ufli12jhs_UnlocksPins = new List<E_Pin>();
			for (var i = 0; i < val.Count; i++) _ufli12jhs_UnlocksPins.Add((E_Pin) val[i]);
			return _ufli12jhs_UnlocksPins;
		}
		set
		{
			var val = _f_UnlocksPins[Index];
			if(val==null) val = new List<BGEntity>();
			val.Clear();
			if(value!=null) for (var i = 0; i < value.Count; i++) val.Add(value[i]);
			_f_UnlocksPins[Index] = val;
		}
	}
	public List<E_MapWalls> f_WallsToDest
	{
		get
		{
			var val = _f_WallsToDest[Index];
			if(val==null || val.Count==0) return null;
			var _ufli12jhs_WallsToDest = new List<E_MapWalls>();
			for (var i = 0; i < val.Count; i++) _ufli12jhs_WallsToDest.Add((E_MapWalls) val[i]);
			return _ufli12jhs_WallsToDest;
		}
		set
		{
			var val = _f_WallsToDest[Index];
			if(val==null) val = new List<BGEntity>();
			val.Clear();
			if(value!=null) for (var i = 0; i < value.Count; i++) val.Add(value[i]);
			_f_WallsToDest[Index] = val;
		}
	}
	public List<E_MapWalls> f_WallsFromOrigin
	{
		get
		{
			var val = _f_WallsFromOrigin[Index];
			if(val==null || val.Count==0) return null;
			var _ufli12jhs_WallsFromOrigin = new List<E_MapWalls>();
			for (var i = 0; i < val.Count; i++) _ufli12jhs_WallsFromOrigin.Add((E_MapWalls) val[i]);
			return _ufli12jhs_WallsFromOrigin;
		}
		set
		{
			var val = _f_WallsFromOrigin[Index];
			if(val==null) val = new List<BGEntity>();
			val.Clear();
			if(value!=null) for (var i = 0; i < value.Count; i++) val.Add(value[i]);
			_f_WallsFromOrigin[Index] = val;
		}
	}
	public System.Boolean f_Visuals
	{
		get
		{
			return _f_Visuals[Index];
		}
		set
		{
			_f_Visuals[Index] = value;
		}
	}
	private static BansheeGz.BGDatabase.BGFieldEntityName _ufle12jhs77_f_name;
	public static BansheeGz.BGDatabase.BGFieldEntityName _f_name
	{
		get
		{
			if(_ufle12jhs77_f_name==null || _ufle12jhs77_f_name.IsDeleted) _ufle12jhs77_f_name=(BansheeGz.BGDatabase.BGFieldEntityName) MetaDefault.GetField(new BGId(4740419652275606489UL,16281884087163071164UL));
			return _ufle12jhs77_f_name;
		}
	}
	private static BansheeGz.BGDatabase.BGFieldRelationSingle _ufle12jhs77_f_Pin;
	public static BansheeGz.BGDatabase.BGFieldRelationSingle _f_Pin
	{
		get
		{
			if(_ufle12jhs77_f_Pin==null || _ufle12jhs77_f_Pin.IsDeleted) _ufle12jhs77_f_Pin=(BansheeGz.BGDatabase.BGFieldRelationSingle) MetaDefault.GetField(new BGId(4755775874130559592UL,9555642772104298655UL));
			return _ufle12jhs77_f_Pin;
		}
	}
	private static BansheeGz.BGDatabase.BGFieldString _ufle12jhs77_f_Level;
	public static BansheeGz.BGDatabase.BGFieldString _f_Level
	{
		get
		{
			if(_ufle12jhs77_f_Level==null || _ufle12jhs77_f_Level.IsDeleted) _ufle12jhs77_f_Level=(BansheeGz.BGDatabase.BGFieldString) MetaDefault.GetField(new BGId(4793347658190675977UL,5994557562632312988UL));
			return _ufle12jhs77_f_Level;
		}
	}
	private static BansheeGz.BGDatabase.BGFieldBool _ufle12jhs77_f_InMap;
	public static BansheeGz.BGDatabase.BGFieldBool _f_InMap
	{
		get
		{
			if(_ufle12jhs77_f_InMap==null || _ufle12jhs77_f_InMap.IsDeleted) _ufle12jhs77_f_InMap=(BansheeGz.BGDatabase.BGFieldBool) MetaDefault.GetField(new BGId(4858229157076024160UL,2433292969023106195UL));
			return _ufle12jhs77_f_InMap;
		}
	}
	private static BansheeGz.BGDatabase.BGFieldInt _ufle12jhs77_f_LocksAmount;
	public static BansheeGz.BGDatabase.BGFieldInt _f_LocksAmount
	{
		get
		{
			if(_ufle12jhs77_f_LocksAmount==null || _ufle12jhs77_f_LocksAmount.IsDeleted) _ufle12jhs77_f_LocksAmount=(BansheeGz.BGDatabase.BGFieldInt) MetaDefault.GetField(new BGId(5389772333846653446UL,11461131677490296486UL));
			return _ufle12jhs77_f_LocksAmount;
		}
	}
	private static BansheeGz.BGDatabase.BGFieldBool _ufle12jhs77_f_SegmentPresent;
	public static BansheeGz.BGDatabase.BGFieldBool _f_SegmentPresent
	{
		get
		{
			if(_ufle12jhs77_f_SegmentPresent==null || _ufle12jhs77_f_SegmentPresent.IsDeleted) _ufle12jhs77_f_SegmentPresent=(BansheeGz.BGDatabase.BGFieldBool) MetaDefault.GetField(new BGId(5708768082108931619UL,17251627778783522965UL));
			return _ufle12jhs77_f_SegmentPresent;
		}
	}
	private static BansheeGz.BGDatabase.BGFieldBool _ufle12jhs77_f_ObjectPresent;
	public static BansheeGz.BGDatabase.BGFieldBool _f_ObjectPresent
	{
		get
		{
			if(_ufle12jhs77_f_ObjectPresent==null || _ufle12jhs77_f_ObjectPresent.IsDeleted) _ufle12jhs77_f_ObjectPresent=(BansheeGz.BGDatabase.BGFieldBool) MetaDefault.GetField(new BGId(5035583959570880310UL,15876700667616842681UL));
			return _ufle12jhs77_f_ObjectPresent;
		}
	}
	private static BansheeGz.BGDatabase.BGFieldRelationMultiple _ufle12jhs77_f_UnlocksPins;
	public static BansheeGz.BGDatabase.BGFieldRelationMultiple _f_UnlocksPins
	{
		get
		{
			if(_ufle12jhs77_f_UnlocksPins==null || _ufle12jhs77_f_UnlocksPins.IsDeleted) _ufle12jhs77_f_UnlocksPins=(BansheeGz.BGDatabase.BGFieldRelationMultiple) MetaDefault.GetField(new BGId(5421760005998256390UL,4758386679893286829UL));
			return _ufle12jhs77_f_UnlocksPins;
		}
	}
	private static BansheeGz.BGDatabase.BGFieldRelationMultiple _ufle12jhs77_f_WallsToDest;
	public static BansheeGz.BGDatabase.BGFieldRelationMultiple _f_WallsToDest
	{
		get
		{
			if(_ufle12jhs77_f_WallsToDest==null || _ufle12jhs77_f_WallsToDest.IsDeleted) _ufle12jhs77_f_WallsToDest=(BansheeGz.BGDatabase.BGFieldRelationMultiple) MetaDefault.GetField(new BGId(5242919301705000379UL,3930519681876219828UL));
			return _ufle12jhs77_f_WallsToDest;
		}
	}
	private static BansheeGz.BGDatabase.BGFieldRelationMultiple _ufle12jhs77_f_WallsFromOrigin;
	public static BansheeGz.BGDatabase.BGFieldRelationMultiple _f_WallsFromOrigin
	{
		get
		{
			if(_ufle12jhs77_f_WallsFromOrigin==null || _ufle12jhs77_f_WallsFromOrigin.IsDeleted) _ufle12jhs77_f_WallsFromOrigin=(BansheeGz.BGDatabase.BGFieldRelationMultiple) MetaDefault.GetField(new BGId(5300666196508900259UL,13485411823914233985UL));
			return _ufle12jhs77_f_WallsFromOrigin;
		}
	}
	private static BansheeGz.BGDatabase.BGFieldBool _ufle12jhs77_f_Visuals;
	public static BansheeGz.BGDatabase.BGFieldBool _f_Visuals
	{
		get
		{
			if(_ufle12jhs77_f_Visuals==null || _ufle12jhs77_f_Visuals.IsDeleted) _ufle12jhs77_f_Visuals=(BansheeGz.BGDatabase.BGFieldBool) MetaDefault.GetField(new BGId(5556000267342264102UL,15804675842545476242UL));
			return _ufle12jhs77_f_Visuals;
		}
	}
	private static readonly E_LevelData.Factory _factory0_PFS = new E_LevelData.Factory();
	private static readonly E_Biome.Factory _factory1_PFS = new E_Biome.Factory();
	private static readonly E_Pin.Factory _factory2_PFS = new E_Pin.Factory();
	private static readonly E_LevelGameplayData.Factory _factory3_PFS = new E_LevelGameplayData.Factory();
	private static readonly E_MapWalls.Factory _factory4_PFS = new E_MapWalls.Factory();
	private static readonly E_BiomeGameplayData.Factory _factory5_PFS = new E_BiomeGameplayData.Factory();
	private static readonly E_BiomeIdentifier.Factory _factory6_PFS = new E_BiomeIdentifier.Factory();
	private static readonly E_Dialogues.Factory _factory7_PFS = new E_Dialogues.Factory();
	private static readonly E_Segments.Factory _factory8_PFS = new E_Segments.Factory();
	private static readonly E_QuestDialogues.Factory _factory9_PFS = new E_QuestDialogues.Factory();
	private static readonly E_ReturnDialogues.Factory _factory10_PFS = new E_ReturnDialogues.Factory();
	private static readonly E_QuestWaitingDialogues.Factory _factory11_PFS = new E_QuestWaitingDialogues.Factory();
	private static readonly E_SegmentsGameplayData.Factory _factory12_PFS = new E_SegmentsGameplayData.Factory();
	private static readonly E_Objects.Factory _factory13_PFS = new E_Objects.Factory();
	private static readonly E_ObjectsGameplayData.Factory _factory14_PFS = new E_ObjectsGameplayData.Factory();
	private static readonly E_BiomeMaterials.Factory _factory15_PFS = new E_BiomeMaterials.Factory();
	private static readonly E_AltReturnDialogues.Factory _factory16_PFS = new E_AltReturnDialogues.Factory();
	private static readonly E_FluffDialogues.Factory _factory17_PFS = new E_FluffDialogues.Factory();
	private static readonly E_FluffDialogueGameplayData.Factory _factory18_PFS = new E_FluffDialogueGameplayData.Factory();
	private E_LevelData() : base(MetaDefault)
	{
	}
	private E_LevelData(BGId id) : base(MetaDefault, id)
	{
	}
	private E_LevelData(BGMetaEntity meta) : base(meta)
	{
	}
	private E_LevelData(BGMetaEntity meta, BGId id) : base(meta, id)
	{
	}
	public static E_LevelData FindEntity(Predicate<E_LevelData> filter)
	{
		return MetaDefault.FindEntity(entity => filter==null || filter((E_LevelData) entity)) as E_LevelData;
	}
	public static List<E_LevelData> FindEntities(Predicate<E_LevelData> filter, List<E_LevelData> result=null, Comparison<E_LevelData> sort=null)
	{
		result = result ?? new List<E_LevelData>();
		_find_Entities_Result.Clear();
		MetaDefault.FindEntities(filter == null ? (Predicate<BGEntity>) null: e => filter((E_LevelData) e), _find_Entities_Result, sort == null ? (Comparison<BGEntity>) null : (e1, e2) => sort((E_LevelData) e1, (E_LevelData) e2));
		if (_find_Entities_Result.Count != 0)
		{
			for (var i = 0; i < _find_Entities_Result.Count; i++) result.Add((E_LevelData) _find_Entities_Result[i]);
			_find_Entities_Result.Clear();
		}
		return result;
	}
	public static void ForEachEntity(Action<E_LevelData> action, Predicate<E_LevelData> filter=null, Comparison<E_LevelData> sort=null)
	{
		MetaDefault.ForEachEntity(entity => action((E_LevelData) entity), filter == null ? null : (Predicate<BGEntity>) (entity => filter((E_LevelData) entity)), sort==null?(Comparison<BGEntity>) null:(e1,e2) => sort((E_LevelData)e1,(E_LevelData)e2));
	}
	public static E_LevelData GetEntity(BGId entityId)
	{
		return (E_LevelData) MetaDefault.GetEntity(entityId);
	}
	public static E_LevelData GetEntity(int index)
	{
		return (E_LevelData) MetaDefault[index];
	}
	public static E_LevelData GetEntity(string entityName)
	{
		return (E_LevelData) MetaDefault.GetEntity(entityName);
	}
	public static E_LevelData NewEntity()
	{
		return (E_LevelData) MetaDefault.NewEntity();
	}
	public void f_UnlocksPins_Add(E_Pin related)
	{
		if(related == null) throw new Exception("Can not add a related entity, cause value is null");
		var val = _f_UnlocksPins[Index];
		if(val == null) val = new List<BGEntity>{related};
		else val.Add(related);
		_f_UnlocksPins[Index] = val;
	}
	public void f_UnlocksPins_Remove(E_Pin related)
	{
		if(related == null) throw new Exception("Can not remove a related entity, cause value is null");
		var val = _f_UnlocksPins[Index];
		if(val != null)
		{
			val.RemoveAll(e => Equals(e, related));
			_f_UnlocksPins[Index] = val.Count == 0 ? null : val;
		}
	}
	public void f_WallsToDest_Add(E_MapWalls related)
	{
		if(related == null) throw new Exception("Can not add a related entity, cause value is null");
		var val = _f_WallsToDest[Index];
		if(val == null) val = new List<BGEntity>{related};
		else val.Add(related);
		_f_WallsToDest[Index] = val;
	}
	public void f_WallsToDest_Remove(E_MapWalls related)
	{
		if(related == null) throw new Exception("Can not remove a related entity, cause value is null");
		var val = _f_WallsToDest[Index];
		if(val != null)
		{
			val.RemoveAll(e => Equals(e, related));
			_f_WallsToDest[Index] = val.Count == 0 ? null : val;
		}
	}
	public void f_WallsFromOrigin_Add(E_MapWalls related)
	{
		if(related == null) throw new Exception("Can not add a related entity, cause value is null");
		var val = _f_WallsFromOrigin[Index];
		if(val == null) val = new List<BGEntity>{related};
		else val.Add(related);
		_f_WallsFromOrigin[Index] = val;
	}
	public void f_WallsFromOrigin_Remove(E_MapWalls related)
	{
		if(related == null) throw new Exception("Can not remove a related entity, cause value is null");
		var val = _f_WallsFromOrigin[Index];
		if(val != null)
		{
			val.RemoveAll(e => Equals(e, related));
			_f_WallsFromOrigin[Index] = val.Count == 0 ? null : val;
		}
	}
}

//=============================================================
//||                   Generated by BansheeGz Code Generator ||
//=============================================================

public partial class E_Biome : BGEntity
{

	//=============================================================
	//||                   Generated by BansheeGz Code Generator ||
	//=============================================================

	public class Factory : BGEntity.EntityFactory
	{
		public BGEntity NewEntity(BGMetaEntity meta)
		{
			return new E_Biome(meta);
		}
		public BGEntity NewEntity(BGMetaEntity meta, BGId id)
		{
			return new E_Biome(meta, id);
		}
	}
	private static BansheeGz.BGDatabase.BGMetaRow _metaDefault;
	public static BansheeGz.BGDatabase.BGMetaRow MetaDefault
	{
		get
		{
			if(_metaDefault==null || _metaDefault.IsDeleted) _metaDefault=BGRepo.I.GetMeta<BansheeGz.BGDatabase.BGMetaRow>(new BGId(5318121685371950766UL,2942031341061376408UL));
			return _metaDefault;
		}
	}
	public static BansheeGz.BGDatabase.BGRepoEvents Events
	{
		get
		{
			return BGRepo.I.Events;
		}
	}
	private static readonly List<BGEntity> _find_Entities_Result = new List<BGEntity>();
	public static int CountEntities
	{
		get
		{
			return MetaDefault.CountEntities;
		}
	}
	public System.String f_name
	{
		get
		{
			return _f_name[Index];
		}
		set
		{
			_f_name[Index] = value;
		}
	}
	public UnityEngine.Vector2 f_MinMaxX
	{
		get
		{
			return _f_MinMaxX[Index];
		}
		set
		{
			_f_MinMaxX[Index] = value;
		}
	}
	public UnityEngine.Vector2 f_MinMaxZ
	{
		get
		{
			return _f_MinMaxZ[Index];
		}
		set
		{
			_f_MinMaxZ[Index] = value;
		}
	}
	public Biomes f_BiomeEnum
	{
		get
		{
			return (Biomes) _f_BiomeEnum[Index];
		}
		set
		{
			_f_BiomeEnum[Index] = value;
		}
	}
	private static BansheeGz.BGDatabase.BGFieldEntityName _ufle12jhs77_f_name;
	public static BansheeGz.BGDatabase.BGFieldEntityName _f_name
	{
		get
		{
			if(_ufle12jhs77_f_name==null || _ufle12jhs77_f_name.IsDeleted) _ufle12jhs77_f_name=(BansheeGz.BGDatabase.BGFieldEntityName) MetaDefault.GetField(new BGId(4811910356762317652UL,6316590992709792654UL));
			return _ufle12jhs77_f_name;
		}
	}
	private static BansheeGz.BGDatabase.BGFieldVector2 _ufle12jhs77_f_MinMaxX;
	public static BansheeGz.BGDatabase.BGFieldVector2 _f_MinMaxX
	{
		get
		{
			if(_ufle12jhs77_f_MinMaxX==null || _ufle12jhs77_f_MinMaxX.IsDeleted) _ufle12jhs77_f_MinMaxX=(BansheeGz.BGDatabase.BGFieldVector2) MetaDefault.GetField(new BGId(5540830184506237896UL,8565432699577718708UL));
			return _ufle12jhs77_f_MinMaxX;
		}
	}
	private static BansheeGz.BGDatabase.BGFieldVector2 _ufle12jhs77_f_MinMaxZ;
	public static BansheeGz.BGDatabase.BGFieldVector2 _f_MinMaxZ
	{
		get
		{
			if(_ufle12jhs77_f_MinMaxZ==null || _ufle12jhs77_f_MinMaxZ.IsDeleted) _ufle12jhs77_f_MinMaxZ=(BansheeGz.BGDatabase.BGFieldVector2) MetaDefault.GetField(new BGId(5028550124850018592UL,7548933405663777956UL));
			return _ufle12jhs77_f_MinMaxZ;
		}
	}
	private static BansheeGz.BGDatabase.BGFieldEnum _ufle12jhs77_f_BiomeEnum;
	public static BansheeGz.BGDatabase.BGFieldEnum _f_BiomeEnum
	{
		get
		{
			if(_ufle12jhs77_f_BiomeEnum==null || _ufle12jhs77_f_BiomeEnum.IsDeleted) _ufle12jhs77_f_BiomeEnum=(BansheeGz.BGDatabase.BGFieldEnum) MetaDefault.GetField(new BGId(5459334516898714152UL,14924872184031788952UL));
			return _ufle12jhs77_f_BiomeEnum;
		}
	}
	private static readonly List<BGEntity> _tugjbyuhfv_reusableList = new List<BGEntity>();
	public List<E_Pin> RelatedPinListUsingBiomeRelation
	{
		get
		{
			var _private_related_list = Alias_rifegrt_Pin._f_Biome.GetRelatedIn(Id, _tugjbyuhfv_reusableList);
			if (_private_related_list.Count == 0) return null;
			var _private_result_list = new List<E_Pin>(_private_related_list.Count);
			for (var i = 0; i < _private_related_list.Count; i++) _private_result_list.Add((E_Pin) _private_related_list[i]);
			_tugjbyuhfv_reusableList.Clear();
			return _private_result_list;
		}
	}
	public List<E_BiomeGameplayData> RelatedBiomeGameplayDataListUsingBiomeRelation
	{
		get
		{
			var _private_related_list = Alias_rifegrt_BiomeGameplayData._f_Biome.GetRelatedIn(Id, _tugjbyuhfv_reusableList);
			if (_private_related_list.Count == 0) return null;
			var _private_result_list = new List<E_BiomeGameplayData>(_private_related_list.Count);
			for (var i = 0; i < _private_related_list.Count; i++) _private_result_list.Add((E_BiomeGameplayData) _private_related_list[i]);
			_tugjbyuhfv_reusableList.Clear();
			return _private_result_list;
		}
	}
	public List<E_BiomeIdentifier> RelatedBiomeIdentifierListUsingBiomeRelation
	{
		get
		{
			var _private_related_list = Alias_rifegrt_BiomeIdentifier._f_Biome.GetRelatedIn(Id, _tugjbyuhfv_reusableList);
			if (_private_related_list.Count == 0) return null;
			var _private_result_list = new List<E_BiomeIdentifier>(_private_related_list.Count);
			for (var i = 0; i < _private_related_list.Count; i++) _private_result_list.Add((E_BiomeIdentifier) _private_related_list[i]);
			_tugjbyuhfv_reusableList.Clear();
			return _private_result_list;
		}
	}
	private static readonly E_LevelData.Factory _factory0_PFS = new E_LevelData.Factory();
	private static readonly E_Biome.Factory _factory1_PFS = new E_Biome.Factory();
	private static readonly E_Pin.Factory _factory2_PFS = new E_Pin.Factory();
	private static readonly E_LevelGameplayData.Factory _factory3_PFS = new E_LevelGameplayData.Factory();
	private static readonly E_MapWalls.Factory _factory4_PFS = new E_MapWalls.Factory();
	private static readonly E_BiomeGameplayData.Factory _factory5_PFS = new E_BiomeGameplayData.Factory();
	private static readonly E_BiomeIdentifier.Factory _factory6_PFS = new E_BiomeIdentifier.Factory();
	private static readonly E_Dialogues.Factory _factory7_PFS = new E_Dialogues.Factory();
	private static readonly E_Segments.Factory _factory8_PFS = new E_Segments.Factory();
	private static readonly E_QuestDialogues.Factory _factory9_PFS = new E_QuestDialogues.Factory();
	private static readonly E_ReturnDialogues.Factory _factory10_PFS = new E_ReturnDialogues.Factory();
	private static readonly E_QuestWaitingDialogues.Factory _factory11_PFS = new E_QuestWaitingDialogues.Factory();
	private static readonly E_SegmentsGameplayData.Factory _factory12_PFS = new E_SegmentsGameplayData.Factory();
	private static readonly E_Objects.Factory _factory13_PFS = new E_Objects.Factory();
	private static readonly E_ObjectsGameplayData.Factory _factory14_PFS = new E_ObjectsGameplayData.Factory();
	private static readonly E_BiomeMaterials.Factory _factory15_PFS = new E_BiomeMaterials.Factory();
	private static readonly E_AltReturnDialogues.Factory _factory16_PFS = new E_AltReturnDialogues.Factory();
	private static readonly E_FluffDialogues.Factory _factory17_PFS = new E_FluffDialogues.Factory();
	private static readonly E_FluffDialogueGameplayData.Factory _factory18_PFS = new E_FluffDialogueGameplayData.Factory();
	private E_Biome() : base(MetaDefault)
	{
	}
	private E_Biome(BGId id) : base(MetaDefault, id)
	{
	}
	private E_Biome(BGMetaEntity meta) : base(meta)
	{
	}
	private E_Biome(BGMetaEntity meta, BGId id) : base(meta, id)
	{
	}
	public static E_Biome FindEntity(Predicate<E_Biome> filter)
	{
		return MetaDefault.FindEntity(entity => filter==null || filter((E_Biome) entity)) as E_Biome;
	}
	public static List<E_Biome> FindEntities(Predicate<E_Biome> filter, List<E_Biome> result=null, Comparison<E_Biome> sort=null)
	{
		result = result ?? new List<E_Biome>();
		_find_Entities_Result.Clear();
		MetaDefault.FindEntities(filter == null ? (Predicate<BGEntity>) null: e => filter((E_Biome) e), _find_Entities_Result, sort == null ? (Comparison<BGEntity>) null : (e1, e2) => sort((E_Biome) e1, (E_Biome) e2));
		if (_find_Entities_Result.Count != 0)
		{
			for (var i = 0; i < _find_Entities_Result.Count; i++) result.Add((E_Biome) _find_Entities_Result[i]);
			_find_Entities_Result.Clear();
		}
		return result;
	}
	public static void ForEachEntity(Action<E_Biome> action, Predicate<E_Biome> filter=null, Comparison<E_Biome> sort=null)
	{
		MetaDefault.ForEachEntity(entity => action((E_Biome) entity), filter == null ? null : (Predicate<BGEntity>) (entity => filter((E_Biome) entity)), sort==null?(Comparison<BGEntity>) null:(e1,e2) => sort((E_Biome)e1,(E_Biome)e2));
	}
	public static E_Biome GetEntity(BGId entityId)
	{
		return (E_Biome) MetaDefault.GetEntity(entityId);
	}
	public static E_Biome GetEntity(int index)
	{
		return (E_Biome) MetaDefault[index];
	}
	public static E_Biome GetEntity(string entityName)
	{
		return (E_Biome) MetaDefault.GetEntity(entityName);
	}
	public static E_Biome NewEntity()
	{
		return (E_Biome) MetaDefault.NewEntity();
	}
}

//=============================================================
//||                   Generated by BansheeGz Code Generator ||
//=============================================================

public partial class E_Pin : BGEntity
{

	//=============================================================
	//||                   Generated by BansheeGz Code Generator ||
	//=============================================================

	public class Factory : BGEntity.EntityFactory
	{
		public BGEntity NewEntity(BGMetaEntity meta)
		{
			return new E_Pin(meta);
		}
		public BGEntity NewEntity(BGMetaEntity meta, BGId id)
		{
			return new E_Pin(meta, id);
		}
	}
	private static BansheeGz.BGDatabase.BGMetaRow _metaDefault;
	public static BansheeGz.BGDatabase.BGMetaRow MetaDefault
	{
		get
		{
			if(_metaDefault==null || _metaDefault.IsDeleted) _metaDefault=BGRepo.I.GetMeta<BansheeGz.BGDatabase.BGMetaRow>(new BGId(4954953875072214365UL,15478807282525472406UL));
			return _metaDefault;
		}
	}
	public static BansheeGz.BGDatabase.BGRepoEvents Events
	{
		get
		{
			return BGRepo.I.Events;
		}
	}
	private static readonly List<BGEntity> _find_Entities_Result = new List<BGEntity>();
	public static int CountEntities
	{
		get
		{
			return MetaDefault.CountEntities;
		}
	}
	public System.String f_name
	{
		get
		{
			return _f_name[Index];
		}
		set
		{
			_f_name[Index] = value;
		}
	}
	public E_Biome f_Biome
	{
		get
		{
			return (E_Biome) _f_Biome[Index];
		}
		set
		{
			_f_Biome[Index] = value;
		}
	}
	public System.Int32 f_Index
	{
		get
		{
			return _f_Index[Index];
		}
		set
		{
			_f_Index[Index] = value;
		}
	}
	public System.Int32 f_PinTextUI
	{
		get
		{
			return _f_PinTextUI[Index];
		}
		set
		{
			_f_PinTextUI[Index] = value;
		}
	}
	private static BansheeGz.BGDatabase.BGFieldEntityName _ufle12jhs77_f_name;
	public static BansheeGz.BGDatabase.BGFieldEntityName _f_name
	{
		get
		{
			if(_ufle12jhs77_f_name==null || _ufle12jhs77_f_name.IsDeleted) _ufle12jhs77_f_name=(BansheeGz.BGDatabase.BGFieldEntityName) MetaDefault.GetField(new BGId(5700619351467592780UL,9596716367873031603UL));
			return _ufle12jhs77_f_name;
		}
	}
	private static BansheeGz.BGDatabase.BGFieldRelationSingle _ufle12jhs77_f_Biome;
	public static BansheeGz.BGDatabase.BGFieldRelationSingle _f_Biome
	{
		get
		{
			if(_ufle12jhs77_f_Biome==null || _ufle12jhs77_f_Biome.IsDeleted) _ufle12jhs77_f_Biome=(BansheeGz.BGDatabase.BGFieldRelationSingle) MetaDefault.GetField(new BGId(5355639157912867324UL,1763305154346170539UL));
			return _ufle12jhs77_f_Biome;
		}
	}
	private static BansheeGz.BGDatabase.BGFieldInt _ufle12jhs77_f_Index;
	public static BansheeGz.BGDatabase.BGFieldInt _f_Index
	{
		get
		{
			if(_ufle12jhs77_f_Index==null || _ufle12jhs77_f_Index.IsDeleted) _ufle12jhs77_f_Index=(BansheeGz.BGDatabase.BGFieldInt) MetaDefault.GetField(new BGId(5713392823763091186UL,10906278620831617424UL));
			return _ufle12jhs77_f_Index;
		}
	}
	private static BansheeGz.BGDatabase.BGFieldInt _ufle12jhs77_f_PinTextUI;
	public static BansheeGz.BGDatabase.BGFieldInt _f_PinTextUI
	{
		get
		{
			if(_ufle12jhs77_f_PinTextUI==null || _ufle12jhs77_f_PinTextUI.IsDeleted) _ufle12jhs77_f_PinTextUI=(BansheeGz.BGDatabase.BGFieldInt) MetaDefault.GetField(new BGId(5208647534428573803UL,268406907975443346UL));
			return _ufle12jhs77_f_PinTextUI;
		}
	}
	private static readonly List<BGEntity> _tugjbyuhfv_reusableList = new List<BGEntity>();
	public List<E_LevelData> RelatedLevelDataListUsingPinRelation
	{
		get
		{
			var _private_related_list = Alias_rifegrt_LevelData._f_Pin.GetRelatedIn(Id, _tugjbyuhfv_reusableList);
			if (_private_related_list.Count == 0) return null;
			var _private_result_list = new List<E_LevelData>(_private_related_list.Count);
			for (var i = 0; i < _private_related_list.Count; i++) _private_result_list.Add((E_LevelData) _private_related_list[i]);
			_tugjbyuhfv_reusableList.Clear();
			return _private_result_list;
		}
	}
	public List<E_LevelData> RelatedLevelDataListUsingUnlocksPinsRelation
	{
		get
		{
			var _private_related_list = Alias_rifegrt_LevelData._f_UnlocksPins.GetRelatedIn(Id, _tugjbyuhfv_reusableList);
			if (_private_related_list.Count == 0) return null;
			var _private_result_list = new List<E_LevelData>(_private_related_list.Count);
			for (var i = 0; i < _private_related_list.Count; i++) _private_result_list.Add((E_LevelData) _private_related_list[i]);
			_tugjbyuhfv_reusableList.Clear();
			return _private_result_list;
		}
	}
	public List<E_LevelGameplayData> RelatedLevelGameplayDataListUsingPinRelation
	{
		get
		{
			var _private_related_list = Alias_rifegrt_LevelGameplayData._f_Pin.GetRelatedIn(Id, _tugjbyuhfv_reusableList);
			if (_private_related_list.Count == 0) return null;
			var _private_result_list = new List<E_LevelGameplayData>(_private_related_list.Count);
			for (var i = 0; i < _private_related_list.Count; i++) _private_result_list.Add((E_LevelGameplayData) _private_related_list[i]);
			_tugjbyuhfv_reusableList.Clear();
			return _private_result_list;
		}
	}
	public List<E_MapWalls> RelatedMapWallsListUsingOriginPinRelation
	{
		get
		{
			var _private_related_list = Alias_rifegrt_MapWalls._f_OriginPin.GetRelatedIn(Id, _tugjbyuhfv_reusableList);
			if (_private_related_list.Count == 0) return null;
			var _private_result_list = new List<E_MapWalls>(_private_related_list.Count);
			for (var i = 0; i < _private_related_list.Count; i++) _private_result_list.Add((E_MapWalls) _private_related_list[i]);
			_tugjbyuhfv_reusableList.Clear();
			return _private_result_list;
		}
	}
	public List<E_MapWalls> RelatedMapWallsListUsingDestPinRelation
	{
		get
		{
			var _private_related_list = Alias_rifegrt_MapWalls._f_DestPin.GetRelatedIn(Id, _tugjbyuhfv_reusableList);
			if (_private_related_list.Count == 0) return null;
			var _private_result_list = new List<E_MapWalls>(_private_related_list.Count);
			for (var i = 0; i < _private_related_list.Count; i++) _private_result_list.Add((E_MapWalls) _private_related_list[i]);
			_tugjbyuhfv_reusableList.Clear();
			return _private_result_list;
		}
	}
	private static readonly E_LevelData.Factory _factory0_PFS = new E_LevelData.Factory();
	private static readonly E_Biome.Factory _factory1_PFS = new E_Biome.Factory();
	private static readonly E_Pin.Factory _factory2_PFS = new E_Pin.Factory();
	private static readonly E_LevelGameplayData.Factory _factory3_PFS = new E_LevelGameplayData.Factory();
	private static readonly E_MapWalls.Factory _factory4_PFS = new E_MapWalls.Factory();
	private static readonly E_BiomeGameplayData.Factory _factory5_PFS = new E_BiomeGameplayData.Factory();
	private static readonly E_BiomeIdentifier.Factory _factory6_PFS = new E_BiomeIdentifier.Factory();
	private static readonly E_Dialogues.Factory _factory7_PFS = new E_Dialogues.Factory();
	private static readonly E_Segments.Factory _factory8_PFS = new E_Segments.Factory();
	private static readonly E_QuestDialogues.Factory _factory9_PFS = new E_QuestDialogues.Factory();
	private static readonly E_ReturnDialogues.Factory _factory10_PFS = new E_ReturnDialogues.Factory();
	private static readonly E_QuestWaitingDialogues.Factory _factory11_PFS = new E_QuestWaitingDialogues.Factory();
	private static readonly E_SegmentsGameplayData.Factory _factory12_PFS = new E_SegmentsGameplayData.Factory();
	private static readonly E_Objects.Factory _factory13_PFS = new E_Objects.Factory();
	private static readonly E_ObjectsGameplayData.Factory _factory14_PFS = new E_ObjectsGameplayData.Factory();
	private static readonly E_BiomeMaterials.Factory _factory15_PFS = new E_BiomeMaterials.Factory();
	private static readonly E_AltReturnDialogues.Factory _factory16_PFS = new E_AltReturnDialogues.Factory();
	private static readonly E_FluffDialogues.Factory _factory17_PFS = new E_FluffDialogues.Factory();
	private static readonly E_FluffDialogueGameplayData.Factory _factory18_PFS = new E_FluffDialogueGameplayData.Factory();
	private E_Pin() : base(MetaDefault)
	{
	}
	private E_Pin(BGId id) : base(MetaDefault, id)
	{
	}
	private E_Pin(BGMetaEntity meta) : base(meta)
	{
	}
	private E_Pin(BGMetaEntity meta, BGId id) : base(meta, id)
	{
	}
	public static E_Pin FindEntity(Predicate<E_Pin> filter)
	{
		return MetaDefault.FindEntity(entity => filter==null || filter((E_Pin) entity)) as E_Pin;
	}
	public static List<E_Pin> FindEntities(Predicate<E_Pin> filter, List<E_Pin> result=null, Comparison<E_Pin> sort=null)
	{
		result = result ?? new List<E_Pin>();
		_find_Entities_Result.Clear();
		MetaDefault.FindEntities(filter == null ? (Predicate<BGEntity>) null: e => filter((E_Pin) e), _find_Entities_Result, sort == null ? (Comparison<BGEntity>) null : (e1, e2) => sort((E_Pin) e1, (E_Pin) e2));
		if (_find_Entities_Result.Count != 0)
		{
			for (var i = 0; i < _find_Entities_Result.Count; i++) result.Add((E_Pin) _find_Entities_Result[i]);
			_find_Entities_Result.Clear();
		}
		return result;
	}
	public static void ForEachEntity(Action<E_Pin> action, Predicate<E_Pin> filter=null, Comparison<E_Pin> sort=null)
	{
		MetaDefault.ForEachEntity(entity => action((E_Pin) entity), filter == null ? null : (Predicate<BGEntity>) (entity => filter((E_Pin) entity)), sort==null?(Comparison<BGEntity>) null:(e1,e2) => sort((E_Pin)e1,(E_Pin)e2));
	}
	public static E_Pin GetEntity(BGId entityId)
	{
		return (E_Pin) MetaDefault.GetEntity(entityId);
	}
	public static E_Pin GetEntity(int index)
	{
		return (E_Pin) MetaDefault[index];
	}
	public static E_Pin GetEntity(string entityName)
	{
		return (E_Pin) MetaDefault.GetEntity(entityName);
	}
	public static E_Pin NewEntity()
	{
		return (E_Pin) MetaDefault.NewEntity();
	}
}

//=============================================================
//||                   Generated by BansheeGz Code Generator ||
//=============================================================

public partial class E_LevelGameplayData : BGEntity
{

	//=============================================================
	//||                   Generated by BansheeGz Code Generator ||
	//=============================================================

	public class Factory : BGEntity.EntityFactory
	{
		public BGEntity NewEntity(BGMetaEntity meta)
		{
			return new E_LevelGameplayData(meta);
		}
		public BGEntity NewEntity(BGMetaEntity meta, BGId id)
		{
			return new E_LevelGameplayData(meta, id);
		}
	}
	private static BansheeGz.BGDatabase.BGMetaRow _metaDefault;
	public static BansheeGz.BGDatabase.BGMetaRow MetaDefault
	{
		get
		{
			if(_metaDefault==null || _metaDefault.IsDeleted) _metaDefault=BGRepo.I.GetMeta<BansheeGz.BGDatabase.BGMetaRow>(new BGId(4723279784818553777UL,9330121963571183804UL));
			return _metaDefault;
		}
	}
	public static BansheeGz.BGDatabase.BGRepoEvents Events
	{
		get
		{
			return BGRepo.I.Events;
		}
	}
	private static readonly List<BGEntity> _find_Entities_Result = new List<BGEntity>();
	public static int CountEntities
	{
		get
		{
			return MetaDefault.CountEntities;
		}
	}
	public System.String f_name
	{
		get
		{
			return _f_name[Index];
		}
		set
		{
			_f_name[Index] = value;
		}
	}
	public E_Pin f_Pin
	{
		get
		{
			return (E_Pin) _f_Pin[Index];
		}
		set
		{
			_f_Pin[Index] = value;
		}
	}
	public System.Boolean f_DebugComplete
	{
		get
		{
			return _f_DebugComplete[Index];
		}
		set
		{
			_f_DebugComplete[Index] = value;
		}
	}
	public System.Boolean f_DebugUncomplete
	{
		get
		{
			return _f_DebugUncomplete[Index];
		}
		set
		{
			_f_DebugUncomplete[Index] = value;
		}
	}
	public System.Int32 f_LocksLeft
	{
		get
		{
			return _f_LocksLeft[Index];
		}
		set
		{
			_f_LocksLeft[Index] = value;
		}
	}
	public System.Boolean f_DottedAnimPlayed
	{
		get
		{
			return _f_DottedAnimPlayed[Index];
		}
		set
		{
			_f_DottedAnimPlayed[Index] = value;
		}
	}
	public System.Boolean f_Unlocked
	{
		get
		{
			return _f_Unlocked[Index];
		}
		set
		{
			_f_Unlocked[Index] = value;
		}
	}
	public System.Boolean f_UnlockAnimPlayed
	{
		get
		{
			return _f_UnlockAnimPlayed[Index];
		}
		set
		{
			_f_UnlockAnimPlayed[Index] = value;
		}
	}
	public System.Boolean f_Completed
	{
		get
		{
			return _f_Completed[Index];
		}
		set
		{
			_f_Completed[Index] = value;
		}
	}
	public System.Boolean f_PathDrawn
	{
		get
		{
			return _f_PathDrawn[Index];
		}
		set
		{
			_f_PathDrawn[Index] = value;
		}
	}
	public System.Boolean f_LockIconDisabled
	{
		get
		{
			return _f_LockIconDisabled[Index];
		}
		set
		{
			_f_LockIconDisabled[Index] = value;
		}
	}
	public System.Boolean f_WallDown
	{
		get
		{
			return _f_WallDown[Index];
		}
		set
		{
			_f_WallDown[Index] = value;
		}
	}
	private static BansheeGz.BGDatabase.BGFieldEntityName _ufle12jhs77_f_name;
	public static BansheeGz.BGDatabase.BGFieldEntityName _f_name
	{
		get
		{
			if(_ufle12jhs77_f_name==null || _ufle12jhs77_f_name.IsDeleted) _ufle12jhs77_f_name=(BansheeGz.BGDatabase.BGFieldEntityName) MetaDefault.GetField(new BGId(5598081807989236421UL,1501239811640041904UL));
			return _ufle12jhs77_f_name;
		}
	}
	private static BansheeGz.BGDatabase.BGFieldRelationSingle _ufle12jhs77_f_Pin;
	public static BansheeGz.BGDatabase.BGFieldRelationSingle _f_Pin
	{
		get
		{
			if(_ufle12jhs77_f_Pin==null || _ufle12jhs77_f_Pin.IsDeleted) _ufle12jhs77_f_Pin=(BansheeGz.BGDatabase.BGFieldRelationSingle) MetaDefault.GetField(new BGId(5611101511638644096UL,7289200097385794695UL));
			return _ufle12jhs77_f_Pin;
		}
	}
	private static BansheeGz.BGDatabase.BGFieldBool _ufle12jhs77_f_DebugComplete;
	public static BansheeGz.BGDatabase.BGFieldBool _f_DebugComplete
	{
		get
		{
			if(_ufle12jhs77_f_DebugComplete==null || _ufle12jhs77_f_DebugComplete.IsDeleted) _ufle12jhs77_f_DebugComplete=(BansheeGz.BGDatabase.BGFieldBool) MetaDefault.GetField(new BGId(5260964097523911809UL,9029259795278731182UL));
			return _ufle12jhs77_f_DebugComplete;
		}
	}
	private static BansheeGz.BGDatabase.BGFieldBool _ufle12jhs77_f_DebugUncomplete;
	public static BansheeGz.BGDatabase.BGFieldBool _f_DebugUncomplete
	{
		get
		{
			if(_ufle12jhs77_f_DebugUncomplete==null || _ufle12jhs77_f_DebugUncomplete.IsDeleted) _ufle12jhs77_f_DebugUncomplete=(BansheeGz.BGDatabase.BGFieldBool) MetaDefault.GetField(new BGId(5161727312814850684UL,327734231951520155UL));
			return _ufle12jhs77_f_DebugUncomplete;
		}
	}
	private static BansheeGz.BGDatabase.BGFieldInt _ufle12jhs77_f_LocksLeft;
	public static BansheeGz.BGDatabase.BGFieldInt _f_LocksLeft
	{
		get
		{
			if(_ufle12jhs77_f_LocksLeft==null || _ufle12jhs77_f_LocksLeft.IsDeleted) _ufle12jhs77_f_LocksLeft=(BansheeGz.BGDatabase.BGFieldInt) MetaDefault.GetField(new BGId(5345850841205835300UL,16220438378230291107UL));
			return _ufle12jhs77_f_LocksLeft;
		}
	}
	private static BansheeGz.BGDatabase.BGFieldBool _ufle12jhs77_f_DottedAnimPlayed;
	public static BansheeGz.BGDatabase.BGFieldBool _f_DottedAnimPlayed
	{
		get
		{
			if(_ufle12jhs77_f_DottedAnimPlayed==null || _ufle12jhs77_f_DottedAnimPlayed.IsDeleted) _ufle12jhs77_f_DottedAnimPlayed=(BansheeGz.BGDatabase.BGFieldBool) MetaDefault.GetField(new BGId(5267107265309508871UL,4080065285184299438UL));
			return _ufle12jhs77_f_DottedAnimPlayed;
		}
	}
	private static BansheeGz.BGDatabase.BGFieldBool _ufle12jhs77_f_Unlocked;
	public static BansheeGz.BGDatabase.BGFieldBool _f_Unlocked
	{
		get
		{
			if(_ufle12jhs77_f_Unlocked==null || _ufle12jhs77_f_Unlocked.IsDeleted) _ufle12jhs77_f_Unlocked=(BansheeGz.BGDatabase.BGFieldBool) MetaDefault.GetField(new BGId(4644558649005386762UL,13966429524211724976UL));
			return _ufle12jhs77_f_Unlocked;
		}
	}
	private static BansheeGz.BGDatabase.BGFieldBool _ufle12jhs77_f_UnlockAnimPlayed;
	public static BansheeGz.BGDatabase.BGFieldBool _f_UnlockAnimPlayed
	{
		get
		{
			if(_ufle12jhs77_f_UnlockAnimPlayed==null || _ufle12jhs77_f_UnlockAnimPlayed.IsDeleted) _ufle12jhs77_f_UnlockAnimPlayed=(BansheeGz.BGDatabase.BGFieldBool) MetaDefault.GetField(new BGId(5477728311005227544UL,2327989079783061125UL));
			return _ufle12jhs77_f_UnlockAnimPlayed;
		}
	}
	private static BansheeGz.BGDatabase.BGFieldBool _ufle12jhs77_f_Completed;
	public static BansheeGz.BGDatabase.BGFieldBool _f_Completed
	{
		get
		{
			if(_ufle12jhs77_f_Completed==null || _ufle12jhs77_f_Completed.IsDeleted) _ufle12jhs77_f_Completed=(BansheeGz.BGDatabase.BGFieldBool) MetaDefault.GetField(new BGId(5552126076174291767UL,11347803035636501888UL));
			return _ufle12jhs77_f_Completed;
		}
	}
	private static BansheeGz.BGDatabase.BGFieldBool _ufle12jhs77_f_PathDrawn;
	public static BansheeGz.BGDatabase.BGFieldBool _f_PathDrawn
	{
		get
		{
			if(_ufle12jhs77_f_PathDrawn==null || _ufle12jhs77_f_PathDrawn.IsDeleted) _ufle12jhs77_f_PathDrawn=(BansheeGz.BGDatabase.BGFieldBool) MetaDefault.GetField(new BGId(5562002716607721452UL,9876705488166721464UL));
			return _ufle12jhs77_f_PathDrawn;
		}
	}
	private static BansheeGz.BGDatabase.BGFieldBool _ufle12jhs77_f_LockIconDisabled;
	public static BansheeGz.BGDatabase.BGFieldBool _f_LockIconDisabled
	{
		get
		{
			if(_ufle12jhs77_f_LockIconDisabled==null || _ufle12jhs77_f_LockIconDisabled.IsDeleted) _ufle12jhs77_f_LockIconDisabled=(BansheeGz.BGDatabase.BGFieldBool) MetaDefault.GetField(new BGId(5041402763999311649UL,14533767244693604751UL));
			return _ufle12jhs77_f_LockIconDisabled;
		}
	}
	private static BansheeGz.BGDatabase.BGFieldBool _ufle12jhs77_f_WallDown;
	public static BansheeGz.BGDatabase.BGFieldBool _f_WallDown
	{
		get
		{
			if(_ufle12jhs77_f_WallDown==null || _ufle12jhs77_f_WallDown.IsDeleted) _ufle12jhs77_f_WallDown=(BansheeGz.BGDatabase.BGFieldBool) MetaDefault.GetField(new BGId(5421608937216315096UL,9085621000404421508UL));
			return _ufle12jhs77_f_WallDown;
		}
	}
	private static readonly E_LevelData.Factory _factory0_PFS = new E_LevelData.Factory();
	private static readonly E_Biome.Factory _factory1_PFS = new E_Biome.Factory();
	private static readonly E_Pin.Factory _factory2_PFS = new E_Pin.Factory();
	private static readonly E_LevelGameplayData.Factory _factory3_PFS = new E_LevelGameplayData.Factory();
	private static readonly E_MapWalls.Factory _factory4_PFS = new E_MapWalls.Factory();
	private static readonly E_BiomeGameplayData.Factory _factory5_PFS = new E_BiomeGameplayData.Factory();
	private static readonly E_BiomeIdentifier.Factory _factory6_PFS = new E_BiomeIdentifier.Factory();
	private static readonly E_Dialogues.Factory _factory7_PFS = new E_Dialogues.Factory();
	private static readonly E_Segments.Factory _factory8_PFS = new E_Segments.Factory();
	private static readonly E_QuestDialogues.Factory _factory9_PFS = new E_QuestDialogues.Factory();
	private static readonly E_ReturnDialogues.Factory _factory10_PFS = new E_ReturnDialogues.Factory();
	private static readonly E_QuestWaitingDialogues.Factory _factory11_PFS = new E_QuestWaitingDialogues.Factory();
	private static readonly E_SegmentsGameplayData.Factory _factory12_PFS = new E_SegmentsGameplayData.Factory();
	private static readonly E_Objects.Factory _factory13_PFS = new E_Objects.Factory();
	private static readonly E_ObjectsGameplayData.Factory _factory14_PFS = new E_ObjectsGameplayData.Factory();
	private static readonly E_BiomeMaterials.Factory _factory15_PFS = new E_BiomeMaterials.Factory();
	private static readonly E_AltReturnDialogues.Factory _factory16_PFS = new E_AltReturnDialogues.Factory();
	private static readonly E_FluffDialogues.Factory _factory17_PFS = new E_FluffDialogues.Factory();
	private static readonly E_FluffDialogueGameplayData.Factory _factory18_PFS = new E_FluffDialogueGameplayData.Factory();
	private E_LevelGameplayData() : base(MetaDefault)
	{
	}
	private E_LevelGameplayData(BGId id) : base(MetaDefault, id)
	{
	}
	private E_LevelGameplayData(BGMetaEntity meta) : base(meta)
	{
	}
	private E_LevelGameplayData(BGMetaEntity meta, BGId id) : base(meta, id)
	{
	}
	public static E_LevelGameplayData FindEntity(Predicate<E_LevelGameplayData> filter)
	{
		return MetaDefault.FindEntity(entity => filter==null || filter((E_LevelGameplayData) entity)) as E_LevelGameplayData;
	}
	public static List<E_LevelGameplayData> FindEntities(Predicate<E_LevelGameplayData> filter, List<E_LevelGameplayData> result=null, Comparison<E_LevelGameplayData> sort=null)
	{
		result = result ?? new List<E_LevelGameplayData>();
		_find_Entities_Result.Clear();
		MetaDefault.FindEntities(filter == null ? (Predicate<BGEntity>) null: e => filter((E_LevelGameplayData) e), _find_Entities_Result, sort == null ? (Comparison<BGEntity>) null : (e1, e2) => sort((E_LevelGameplayData) e1, (E_LevelGameplayData) e2));
		if (_find_Entities_Result.Count != 0)
		{
			for (var i = 0; i < _find_Entities_Result.Count; i++) result.Add((E_LevelGameplayData) _find_Entities_Result[i]);
			_find_Entities_Result.Clear();
		}
		return result;
	}
	public static void ForEachEntity(Action<E_LevelGameplayData> action, Predicate<E_LevelGameplayData> filter=null, Comparison<E_LevelGameplayData> sort=null)
	{
		MetaDefault.ForEachEntity(entity => action((E_LevelGameplayData) entity), filter == null ? null : (Predicate<BGEntity>) (entity => filter((E_LevelGameplayData) entity)), sort==null?(Comparison<BGEntity>) null:(e1,e2) => sort((E_LevelGameplayData)e1,(E_LevelGameplayData)e2));
	}
	public static E_LevelGameplayData GetEntity(BGId entityId)
	{
		return (E_LevelGameplayData) MetaDefault.GetEntity(entityId);
	}
	public static E_LevelGameplayData GetEntity(int index)
	{
		return (E_LevelGameplayData) MetaDefault[index];
	}
	public static E_LevelGameplayData GetEntity(string entityName)
	{
		return (E_LevelGameplayData) MetaDefault.GetEntity(entityName);
	}
	public static E_LevelGameplayData NewEntity()
	{
		return (E_LevelGameplayData) MetaDefault.NewEntity();
	}
}

//=============================================================
//||                   Generated by BansheeGz Code Generator ||
//=============================================================

public partial class E_MapWalls : BGEntity
{

	//=============================================================
	//||                   Generated by BansheeGz Code Generator ||
	//=============================================================

	public class Factory : BGEntity.EntityFactory
	{
		public BGEntity NewEntity(BGMetaEntity meta)
		{
			return new E_MapWalls(meta);
		}
		public BGEntity NewEntity(BGMetaEntity meta, BGId id)
		{
			return new E_MapWalls(meta, id);
		}
	}
	private static BansheeGz.BGDatabase.BGMetaRow _metaDefault;
	public static BansheeGz.BGDatabase.BGMetaRow MetaDefault
	{
		get
		{
			if(_metaDefault==null || _metaDefault.IsDeleted) _metaDefault=BGRepo.I.GetMeta<BansheeGz.BGDatabase.BGMetaRow>(new BGId(4959565327689654965UL,2471908366607778707UL));
			return _metaDefault;
		}
	}
	public static BansheeGz.BGDatabase.BGRepoEvents Events
	{
		get
		{
			return BGRepo.I.Events;
		}
	}
	private static readonly List<BGEntity> _find_Entities_Result = new List<BGEntity>();
	public static int CountEntities
	{
		get
		{
			return MetaDefault.CountEntities;
		}
	}
	public System.String f_name
	{
		get
		{
			return _f_name[Index];
		}
		set
		{
			_f_name[Index] = value;
		}
	}
	public E_Pin f_OriginPin
	{
		get
		{
			return (E_Pin) _f_OriginPin[Index];
		}
		set
		{
			_f_OriginPin[Index] = value;
		}
	}
	public E_Pin f_DestPin
	{
		get
		{
			return (E_Pin) _f_DestPin[Index];
		}
		set
		{
			_f_DestPin[Index] = value;
		}
	}
	private static BansheeGz.BGDatabase.BGFieldEntityName _ufle12jhs77_f_name;
	public static BansheeGz.BGDatabase.BGFieldEntityName _f_name
	{
		get
		{
			if(_ufle12jhs77_f_name==null || _ufle12jhs77_f_name.IsDeleted) _ufle12jhs77_f_name=(BansheeGz.BGDatabase.BGFieldEntityName) MetaDefault.GetField(new BGId(5712327967688250671UL,6283100240849974687UL));
			return _ufle12jhs77_f_name;
		}
	}
	private static BansheeGz.BGDatabase.BGFieldRelationSingle _ufle12jhs77_f_OriginPin;
	public static BansheeGz.BGDatabase.BGFieldRelationSingle _f_OriginPin
	{
		get
		{
			if(_ufle12jhs77_f_OriginPin==null || _ufle12jhs77_f_OriginPin.IsDeleted) _ufle12jhs77_f_OriginPin=(BansheeGz.BGDatabase.BGFieldRelationSingle) MetaDefault.GetField(new BGId(4679121713698528948UL,1872479915702842775UL));
			return _ufle12jhs77_f_OriginPin;
		}
	}
	private static BansheeGz.BGDatabase.BGFieldRelationSingle _ufle12jhs77_f_DestPin;
	public static BansheeGz.BGDatabase.BGFieldRelationSingle _f_DestPin
	{
		get
		{
			if(_ufle12jhs77_f_DestPin==null || _ufle12jhs77_f_DestPin.IsDeleted) _ufle12jhs77_f_DestPin=(BansheeGz.BGDatabase.BGFieldRelationSingle) MetaDefault.GetField(new BGId(5682693562927262261UL,886020703537969570UL));
			return _ufle12jhs77_f_DestPin;
		}
	}
	private static readonly List<BGEntity> _tugjbyuhfv_reusableList = new List<BGEntity>();
	public List<E_LevelData> RelatedLevelDataListUsingWallsToDestRelation
	{
		get
		{
			var _private_related_list = Alias_rifegrt_LevelData._f_WallsToDest.GetRelatedIn(Id, _tugjbyuhfv_reusableList);
			if (_private_related_list.Count == 0) return null;
			var _private_result_list = new List<E_LevelData>(_private_related_list.Count);
			for (var i = 0; i < _private_related_list.Count; i++) _private_result_list.Add((E_LevelData) _private_related_list[i]);
			_tugjbyuhfv_reusableList.Clear();
			return _private_result_list;
		}
	}
	public List<E_LevelData> RelatedLevelDataListUsingWallsFromOriginRelation
	{
		get
		{
			var _private_related_list = Alias_rifegrt_LevelData._f_WallsFromOrigin.GetRelatedIn(Id, _tugjbyuhfv_reusableList);
			if (_private_related_list.Count == 0) return null;
			var _private_result_list = new List<E_LevelData>(_private_related_list.Count);
			for (var i = 0; i < _private_related_list.Count; i++) _private_result_list.Add((E_LevelData) _private_related_list[i]);
			_tugjbyuhfv_reusableList.Clear();
			return _private_result_list;
		}
	}
	private static readonly E_LevelData.Factory _factory0_PFS = new E_LevelData.Factory();
	private static readonly E_Biome.Factory _factory1_PFS = new E_Biome.Factory();
	private static readonly E_Pin.Factory _factory2_PFS = new E_Pin.Factory();
	private static readonly E_LevelGameplayData.Factory _factory3_PFS = new E_LevelGameplayData.Factory();
	private static readonly E_MapWalls.Factory _factory4_PFS = new E_MapWalls.Factory();
	private static readonly E_BiomeGameplayData.Factory _factory5_PFS = new E_BiomeGameplayData.Factory();
	private static readonly E_BiomeIdentifier.Factory _factory6_PFS = new E_BiomeIdentifier.Factory();
	private static readonly E_Dialogues.Factory _factory7_PFS = new E_Dialogues.Factory();
	private static readonly E_Segments.Factory _factory8_PFS = new E_Segments.Factory();
	private static readonly E_QuestDialogues.Factory _factory9_PFS = new E_QuestDialogues.Factory();
	private static readonly E_ReturnDialogues.Factory _factory10_PFS = new E_ReturnDialogues.Factory();
	private static readonly E_QuestWaitingDialogues.Factory _factory11_PFS = new E_QuestWaitingDialogues.Factory();
	private static readonly E_SegmentsGameplayData.Factory _factory12_PFS = new E_SegmentsGameplayData.Factory();
	private static readonly E_Objects.Factory _factory13_PFS = new E_Objects.Factory();
	private static readonly E_ObjectsGameplayData.Factory _factory14_PFS = new E_ObjectsGameplayData.Factory();
	private static readonly E_BiomeMaterials.Factory _factory15_PFS = new E_BiomeMaterials.Factory();
	private static readonly E_AltReturnDialogues.Factory _factory16_PFS = new E_AltReturnDialogues.Factory();
	private static readonly E_FluffDialogues.Factory _factory17_PFS = new E_FluffDialogues.Factory();
	private static readonly E_FluffDialogueGameplayData.Factory _factory18_PFS = new E_FluffDialogueGameplayData.Factory();
	private E_MapWalls() : base(MetaDefault)
	{
	}
	private E_MapWalls(BGId id) : base(MetaDefault, id)
	{
	}
	private E_MapWalls(BGMetaEntity meta) : base(meta)
	{
	}
	private E_MapWalls(BGMetaEntity meta, BGId id) : base(meta, id)
	{
	}
	public static E_MapWalls FindEntity(Predicate<E_MapWalls> filter)
	{
		return MetaDefault.FindEntity(entity => filter==null || filter((E_MapWalls) entity)) as E_MapWalls;
	}
	public static List<E_MapWalls> FindEntities(Predicate<E_MapWalls> filter, List<E_MapWalls> result=null, Comparison<E_MapWalls> sort=null)
	{
		result = result ?? new List<E_MapWalls>();
		_find_Entities_Result.Clear();
		MetaDefault.FindEntities(filter == null ? (Predicate<BGEntity>) null: e => filter((E_MapWalls) e), _find_Entities_Result, sort == null ? (Comparison<BGEntity>) null : (e1, e2) => sort((E_MapWalls) e1, (E_MapWalls) e2));
		if (_find_Entities_Result.Count != 0)
		{
			for (var i = 0; i < _find_Entities_Result.Count; i++) result.Add((E_MapWalls) _find_Entities_Result[i]);
			_find_Entities_Result.Clear();
		}
		return result;
	}
	public static void ForEachEntity(Action<E_MapWalls> action, Predicate<E_MapWalls> filter=null, Comparison<E_MapWalls> sort=null)
	{
		MetaDefault.ForEachEntity(entity => action((E_MapWalls) entity), filter == null ? null : (Predicate<BGEntity>) (entity => filter((E_MapWalls) entity)), sort==null?(Comparison<BGEntity>) null:(e1,e2) => sort((E_MapWalls)e1,(E_MapWalls)e2));
	}
	public static E_MapWalls GetEntity(BGId entityId)
	{
		return (E_MapWalls) MetaDefault.GetEntity(entityId);
	}
	public static E_MapWalls GetEntity(int index)
	{
		return (E_MapWalls) MetaDefault[index];
	}
	public static E_MapWalls GetEntity(string entityName)
	{
		return (E_MapWalls) MetaDefault.GetEntity(entityName);
	}
	public static E_MapWalls NewEntity()
	{
		return (E_MapWalls) MetaDefault.NewEntity();
	}
}

//=============================================================
//||                   Generated by BansheeGz Code Generator ||
//=============================================================

public partial class E_BiomeGameplayData : BGEntity
{

	//=============================================================
	//||                   Generated by BansheeGz Code Generator ||
	//=============================================================

	public class Factory : BGEntity.EntityFactory
	{
		public BGEntity NewEntity(BGMetaEntity meta)
		{
			return new E_BiomeGameplayData(meta);
		}
		public BGEntity NewEntity(BGMetaEntity meta, BGId id)
		{
			return new E_BiomeGameplayData(meta, id);
		}
	}
	private static BansheeGz.BGDatabase.BGMetaRow _metaDefault;
	public static BansheeGz.BGDatabase.BGMetaRow MetaDefault
	{
		get
		{
			if(_metaDefault==null || _metaDefault.IsDeleted) _metaDefault=BGRepo.I.GetMeta<BansheeGz.BGDatabase.BGMetaRow>(new BGId(5034592254073446088UL,14588748882179863990UL));
			return _metaDefault;
		}
	}
	public static BansheeGz.BGDatabase.BGRepoEvents Events
	{
		get
		{
			return BGRepo.I.Events;
		}
	}
	private static readonly List<BGEntity> _find_Entities_Result = new List<BGEntity>();
	public static int CountEntities
	{
		get
		{
			return MetaDefault.CountEntities;
		}
	}
	public System.String f_name
	{
		get
		{
			return _f_name[Index];
		}
		set
		{
			_f_name[Index] = value;
		}
	}
	public E_Biome f_Biome
	{
		get
		{
			return (E_Biome) _f_Biome[Index];
		}
		set
		{
			_f_Biome[Index] = value;
		}
	}
	public System.Boolean f_Unlocked
	{
		get
		{
			return _f_Unlocked[Index];
		}
		set
		{
			_f_Unlocked[Index] = value;
		}
	}
	private static BansheeGz.BGDatabase.BGFieldEntityName _ufle12jhs77_f_name;
	public static BansheeGz.BGDatabase.BGFieldEntityName _f_name
	{
		get
		{
			if(_ufle12jhs77_f_name==null || _ufle12jhs77_f_name.IsDeleted) _ufle12jhs77_f_name=(BansheeGz.BGDatabase.BGFieldEntityName) MetaDefault.GetField(new BGId(5375708437064997645UL,9652014909083819964UL));
			return _ufle12jhs77_f_name;
		}
	}
	private static BansheeGz.BGDatabase.BGFieldRelationSingle _ufle12jhs77_f_Biome;
	public static BansheeGz.BGDatabase.BGFieldRelationSingle _f_Biome
	{
		get
		{
			if(_ufle12jhs77_f_Biome==null || _ufle12jhs77_f_Biome.IsDeleted) _ufle12jhs77_f_Biome=(BansheeGz.BGDatabase.BGFieldRelationSingle) MetaDefault.GetField(new BGId(4879000758735367296UL,1226467751643001504UL));
			return _ufle12jhs77_f_Biome;
		}
	}
	private static BansheeGz.BGDatabase.BGFieldBool _ufle12jhs77_f_Unlocked;
	public static BansheeGz.BGDatabase.BGFieldBool _f_Unlocked
	{
		get
		{
			if(_ufle12jhs77_f_Unlocked==null || _ufle12jhs77_f_Unlocked.IsDeleted) _ufle12jhs77_f_Unlocked=(BansheeGz.BGDatabase.BGFieldBool) MetaDefault.GetField(new BGId(5632769683042661348UL,10279484367158860964UL));
			return _ufle12jhs77_f_Unlocked;
		}
	}
	private static readonly E_LevelData.Factory _factory0_PFS = new E_LevelData.Factory();
	private static readonly E_Biome.Factory _factory1_PFS = new E_Biome.Factory();
	private static readonly E_Pin.Factory _factory2_PFS = new E_Pin.Factory();
	private static readonly E_LevelGameplayData.Factory _factory3_PFS = new E_LevelGameplayData.Factory();
	private static readonly E_MapWalls.Factory _factory4_PFS = new E_MapWalls.Factory();
	private static readonly E_BiomeGameplayData.Factory _factory5_PFS = new E_BiomeGameplayData.Factory();
	private static readonly E_BiomeIdentifier.Factory _factory6_PFS = new E_BiomeIdentifier.Factory();
	private static readonly E_Dialogues.Factory _factory7_PFS = new E_Dialogues.Factory();
	private static readonly E_Segments.Factory _factory8_PFS = new E_Segments.Factory();
	private static readonly E_QuestDialogues.Factory _factory9_PFS = new E_QuestDialogues.Factory();
	private static readonly E_ReturnDialogues.Factory _factory10_PFS = new E_ReturnDialogues.Factory();
	private static readonly E_QuestWaitingDialogues.Factory _factory11_PFS = new E_QuestWaitingDialogues.Factory();
	private static readonly E_SegmentsGameplayData.Factory _factory12_PFS = new E_SegmentsGameplayData.Factory();
	private static readonly E_Objects.Factory _factory13_PFS = new E_Objects.Factory();
	private static readonly E_ObjectsGameplayData.Factory _factory14_PFS = new E_ObjectsGameplayData.Factory();
	private static readonly E_BiomeMaterials.Factory _factory15_PFS = new E_BiomeMaterials.Factory();
	private static readonly E_AltReturnDialogues.Factory _factory16_PFS = new E_AltReturnDialogues.Factory();
	private static readonly E_FluffDialogues.Factory _factory17_PFS = new E_FluffDialogues.Factory();
	private static readonly E_FluffDialogueGameplayData.Factory _factory18_PFS = new E_FluffDialogueGameplayData.Factory();
	private E_BiomeGameplayData() : base(MetaDefault)
	{
	}
	private E_BiomeGameplayData(BGId id) : base(MetaDefault, id)
	{
	}
	private E_BiomeGameplayData(BGMetaEntity meta) : base(meta)
	{
	}
	private E_BiomeGameplayData(BGMetaEntity meta, BGId id) : base(meta, id)
	{
	}
	public static E_BiomeGameplayData FindEntity(Predicate<E_BiomeGameplayData> filter)
	{
		return MetaDefault.FindEntity(entity => filter==null || filter((E_BiomeGameplayData) entity)) as E_BiomeGameplayData;
	}
	public static List<E_BiomeGameplayData> FindEntities(Predicate<E_BiomeGameplayData> filter, List<E_BiomeGameplayData> result=null, Comparison<E_BiomeGameplayData> sort=null)
	{
		result = result ?? new List<E_BiomeGameplayData>();
		_find_Entities_Result.Clear();
		MetaDefault.FindEntities(filter == null ? (Predicate<BGEntity>) null: e => filter((E_BiomeGameplayData) e), _find_Entities_Result, sort == null ? (Comparison<BGEntity>) null : (e1, e2) => sort((E_BiomeGameplayData) e1, (E_BiomeGameplayData) e2));
		if (_find_Entities_Result.Count != 0)
		{
			for (var i = 0; i < _find_Entities_Result.Count; i++) result.Add((E_BiomeGameplayData) _find_Entities_Result[i]);
			_find_Entities_Result.Clear();
		}
		return result;
	}
	public static void ForEachEntity(Action<E_BiomeGameplayData> action, Predicate<E_BiomeGameplayData> filter=null, Comparison<E_BiomeGameplayData> sort=null)
	{
		MetaDefault.ForEachEntity(entity => action((E_BiomeGameplayData) entity), filter == null ? null : (Predicate<BGEntity>) (entity => filter((E_BiomeGameplayData) entity)), sort==null?(Comparison<BGEntity>) null:(e1,e2) => sort((E_BiomeGameplayData)e1,(E_BiomeGameplayData)e2));
	}
	public static E_BiomeGameplayData GetEntity(BGId entityId)
	{
		return (E_BiomeGameplayData) MetaDefault.GetEntity(entityId);
	}
	public static E_BiomeGameplayData GetEntity(int index)
	{
		return (E_BiomeGameplayData) MetaDefault[index];
	}
	public static E_BiomeGameplayData GetEntity(string entityName)
	{
		return (E_BiomeGameplayData) MetaDefault.GetEntity(entityName);
	}
	public static E_BiomeGameplayData NewEntity()
	{
		return (E_BiomeGameplayData) MetaDefault.NewEntity();
	}
}

//=============================================================
//||                   Generated by BansheeGz Code Generator ||
//=============================================================

public partial class E_BiomeIdentifier : BGEntity
{

	//=============================================================
	//||                   Generated by BansheeGz Code Generator ||
	//=============================================================

	public class Factory : BGEntity.EntityFactory
	{
		public BGEntity NewEntity(BGMetaEntity meta)
		{
			return new E_BiomeIdentifier(meta);
		}
		public BGEntity NewEntity(BGMetaEntity meta, BGId id)
		{
			return new E_BiomeIdentifier(meta, id);
		}
	}
	private static BansheeGz.BGDatabase.BGMetaRow _metaDefault;
	public static BansheeGz.BGDatabase.BGMetaRow MetaDefault
	{
		get
		{
			if(_metaDefault==null || _metaDefault.IsDeleted) _metaDefault=BGRepo.I.GetMeta<BansheeGz.BGDatabase.BGMetaRow>(new BGId(5247857210012234322UL,17267769619000920731UL));
			return _metaDefault;
		}
	}
	public static BansheeGz.BGDatabase.BGRepoEvents Events
	{
		get
		{
			return BGRepo.I.Events;
		}
	}
	private static readonly List<BGEntity> _find_Entities_Result = new List<BGEntity>();
	public static int CountEntities
	{
		get
		{
			return MetaDefault.CountEntities;
		}
	}
	public System.String f_name
	{
		get
		{
			return _f_name[Index];
		}
		set
		{
			_f_name[Index] = value;
		}
	}
	public E_Biome f_Biome
	{
		get
		{
			return (E_Biome) _f_Biome[Index];
		}
		set
		{
			_f_Biome[Index] = value;
		}
	}
	private static BansheeGz.BGDatabase.BGFieldEntityName _ufle12jhs77_f_name;
	public static BansheeGz.BGDatabase.BGFieldEntityName _f_name
	{
		get
		{
			if(_ufle12jhs77_f_name==null || _ufle12jhs77_f_name.IsDeleted) _ufle12jhs77_f_name=(BansheeGz.BGDatabase.BGFieldEntityName) MetaDefault.GetField(new BGId(5240021398996626780UL,3225667101278422688UL));
			return _ufle12jhs77_f_name;
		}
	}
	private static BansheeGz.BGDatabase.BGFieldRelationSingle _ufle12jhs77_f_Biome;
	public static BansheeGz.BGDatabase.BGFieldRelationSingle _f_Biome
	{
		get
		{
			if(_ufle12jhs77_f_Biome==null || _ufle12jhs77_f_Biome.IsDeleted) _ufle12jhs77_f_Biome=(BansheeGz.BGDatabase.BGFieldRelationSingle) MetaDefault.GetField(new BGId(5674227258199142705UL,10260737940855049626UL));
			return _ufle12jhs77_f_Biome;
		}
	}
	private static readonly E_LevelData.Factory _factory0_PFS = new E_LevelData.Factory();
	private static readonly E_Biome.Factory _factory1_PFS = new E_Biome.Factory();
	private static readonly E_Pin.Factory _factory2_PFS = new E_Pin.Factory();
	private static readonly E_LevelGameplayData.Factory _factory3_PFS = new E_LevelGameplayData.Factory();
	private static readonly E_MapWalls.Factory _factory4_PFS = new E_MapWalls.Factory();
	private static readonly E_BiomeGameplayData.Factory _factory5_PFS = new E_BiomeGameplayData.Factory();
	private static readonly E_BiomeIdentifier.Factory _factory6_PFS = new E_BiomeIdentifier.Factory();
	private static readonly E_Dialogues.Factory _factory7_PFS = new E_Dialogues.Factory();
	private static readonly E_Segments.Factory _factory8_PFS = new E_Segments.Factory();
	private static readonly E_QuestDialogues.Factory _factory9_PFS = new E_QuestDialogues.Factory();
	private static readonly E_ReturnDialogues.Factory _factory10_PFS = new E_ReturnDialogues.Factory();
	private static readonly E_QuestWaitingDialogues.Factory _factory11_PFS = new E_QuestWaitingDialogues.Factory();
	private static readonly E_SegmentsGameplayData.Factory _factory12_PFS = new E_SegmentsGameplayData.Factory();
	private static readonly E_Objects.Factory _factory13_PFS = new E_Objects.Factory();
	private static readonly E_ObjectsGameplayData.Factory _factory14_PFS = new E_ObjectsGameplayData.Factory();
	private static readonly E_BiomeMaterials.Factory _factory15_PFS = new E_BiomeMaterials.Factory();
	private static readonly E_AltReturnDialogues.Factory _factory16_PFS = new E_AltReturnDialogues.Factory();
	private static readonly E_FluffDialogues.Factory _factory17_PFS = new E_FluffDialogues.Factory();
	private static readonly E_FluffDialogueGameplayData.Factory _factory18_PFS = new E_FluffDialogueGameplayData.Factory();
	private E_BiomeIdentifier() : base(MetaDefault)
	{
	}
	private E_BiomeIdentifier(BGId id) : base(MetaDefault, id)
	{
	}
	private E_BiomeIdentifier(BGMetaEntity meta) : base(meta)
	{
	}
	private E_BiomeIdentifier(BGMetaEntity meta, BGId id) : base(meta, id)
	{
	}
	public static E_BiomeIdentifier FindEntity(Predicate<E_BiomeIdentifier> filter)
	{
		return MetaDefault.FindEntity(entity => filter==null || filter((E_BiomeIdentifier) entity)) as E_BiomeIdentifier;
	}
	public static List<E_BiomeIdentifier> FindEntities(Predicate<E_BiomeIdentifier> filter, List<E_BiomeIdentifier> result=null, Comparison<E_BiomeIdentifier> sort=null)
	{
		result = result ?? new List<E_BiomeIdentifier>();
		_find_Entities_Result.Clear();
		MetaDefault.FindEntities(filter == null ? (Predicate<BGEntity>) null: e => filter((E_BiomeIdentifier) e), _find_Entities_Result, sort == null ? (Comparison<BGEntity>) null : (e1, e2) => sort((E_BiomeIdentifier) e1, (E_BiomeIdentifier) e2));
		if (_find_Entities_Result.Count != 0)
		{
			for (var i = 0; i < _find_Entities_Result.Count; i++) result.Add((E_BiomeIdentifier) _find_Entities_Result[i]);
			_find_Entities_Result.Clear();
		}
		return result;
	}
	public static void ForEachEntity(Action<E_BiomeIdentifier> action, Predicate<E_BiomeIdentifier> filter=null, Comparison<E_BiomeIdentifier> sort=null)
	{
		MetaDefault.ForEachEntity(entity => action((E_BiomeIdentifier) entity), filter == null ? null : (Predicate<BGEntity>) (entity => filter((E_BiomeIdentifier) entity)), sort==null?(Comparison<BGEntity>) null:(e1,e2) => sort((E_BiomeIdentifier)e1,(E_BiomeIdentifier)e2));
	}
	public static E_BiomeIdentifier GetEntity(BGId entityId)
	{
		return (E_BiomeIdentifier) MetaDefault.GetEntity(entityId);
	}
	public static E_BiomeIdentifier GetEntity(int index)
	{
		return (E_BiomeIdentifier) MetaDefault[index];
	}
	public static E_BiomeIdentifier GetEntity(string entityName)
	{
		return (E_BiomeIdentifier) MetaDefault.GetEntity(entityName);
	}
	public static E_BiomeIdentifier NewEntity()
	{
		return (E_BiomeIdentifier) MetaDefault.NewEntity();
	}
}

//=============================================================
//||                   Generated by BansheeGz Code Generator ||
//=============================================================

public partial class E_Dialogues : BGEntity
{

	//=============================================================
	//||                   Generated by BansheeGz Code Generator ||
	//=============================================================

	public class Factory : BGEntity.EntityFactory
	{
		public BGEntity NewEntity(BGMetaEntity meta)
		{
			return new E_Dialogues(meta);
		}
		public BGEntity NewEntity(BGMetaEntity meta, BGId id)
		{
			return new E_Dialogues(meta, id);
		}
	}
	private static BansheeGz.BGDatabase.BGMetaRow _metaDefault;
	public static BansheeGz.BGDatabase.BGMetaRow MetaDefault
	{
		get
		{
			if(_metaDefault==null || _metaDefault.IsDeleted) _metaDefault=BGRepo.I.GetMeta<BansheeGz.BGDatabase.BGMetaRow>(new BGId(5691908276886008238UL,14353315125813875389UL));
			return _metaDefault;
		}
	}
	public static BansheeGz.BGDatabase.BGRepoEvents Events
	{
		get
		{
			return BGRepo.I.Events;
		}
	}
	private static readonly List<BGEntity> _find_Entities_Result = new List<BGEntity>();
	public static int CountEntities
	{
		get
		{
			return MetaDefault.CountEntities;
		}
	}
	public System.String f_name
	{
		get
		{
			return _f_name[Index];
		}
		set
		{
			_f_name[Index] = value;
		}
	}
	public E_Segments f_Segment
	{
		get
		{
			return (E_Segments) _f_Segment[Index];
		}
		set
		{
			_f_Segment[Index] = value;
		}
	}
	public UnityEngine.ScriptableObject f_RescueDialogue
	{
		get
		{
			return _f_RescueDialogue[Index];
		}
	}
	public List<E_QuestDialogues> f_QuestDialogues
	{
		get
		{
			var val = _f_QuestDialogues[Index];
			if(val==null || val.Count==0) return null;
			var _ufle12jhs_QuestDialogues = new List<E_QuestDialogues>();
			for (var i = 0; i < val.Count; i++) _ufle12jhs_QuestDialogues.Add((E_QuestDialogues) val[i]);
			return _ufle12jhs_QuestDialogues;
		}
	}
	public List<E_QuestWaitingDialogues> f_QuestWaitingDialogues
	{
		get
		{
			var val = _f_QuestWaitingDialogues[Index];
			if(val==null || val.Count==0) return null;
			var _ufle12jhs_QuestWaitingDialogues = new List<E_QuestWaitingDialogues>();
			for (var i = 0; i < val.Count; i++) _ufle12jhs_QuestWaitingDialogues.Add((E_QuestWaitingDialogues) val[i]);
			return _ufle12jhs_QuestWaitingDialogues;
		}
	}
	public List<E_ReturnDialogues> f_ReturnDialogues
	{
		get
		{
			var val = _f_ReturnDialogues[Index];
			if(val==null || val.Count==0) return null;
			var _ufle12jhs_ReturnDialogues = new List<E_ReturnDialogues>();
			for (var i = 0; i < val.Count; i++) _ufle12jhs_ReturnDialogues.Add((E_ReturnDialogues) val[i]);
			return _ufle12jhs_ReturnDialogues;
		}
	}
	public List<E_AltReturnDialogues> f_AltReturnDialogues
	{
		get
		{
			var val = _f_AltReturnDialogues[Index];
			if(val==null || val.Count==0) return null;
			var _ufle12jhs_AltReturnDialogues = new List<E_AltReturnDialogues>();
			for (var i = 0; i < val.Count; i++) _ufle12jhs_AltReturnDialogues.Add((E_AltReturnDialogues) val[i]);
			return _ufle12jhs_AltReturnDialogues;
		}
	}
	public List<E_FluffDialogues> f_FluffDialogues
	{
		get
		{
			var val = _f_FluffDialogues[Index];
			if(val==null || val.Count==0) return null;
			var _ufle12jhs_FluffDialogues = new List<E_FluffDialogues>();
			for (var i = 0; i < val.Count; i++) _ufle12jhs_FluffDialogues.Add((E_FluffDialogues) val[i]);
			return _ufle12jhs_FluffDialogues;
		}
	}
	private static BansheeGz.BGDatabase.BGFieldEntityName _ufle12jhs77_f_name;
	public static BansheeGz.BGDatabase.BGFieldEntityName _f_name
	{
		get
		{
			if(_ufle12jhs77_f_name==null || _ufle12jhs77_f_name.IsDeleted) _ufle12jhs77_f_name=(BansheeGz.BGDatabase.BGFieldEntityName) MetaDefault.GetField(new BGId(5300970025127205706UL,3063305633938667929UL));
			return _ufle12jhs77_f_name;
		}
	}
	private static BansheeGz.BGDatabase.BGFieldRelationSingle _ufle12jhs77_f_Segment;
	public static BansheeGz.BGDatabase.BGFieldRelationSingle _f_Segment
	{
		get
		{
			if(_ufle12jhs77_f_Segment==null || _ufle12jhs77_f_Segment.IsDeleted) _ufle12jhs77_f_Segment=(BansheeGz.BGDatabase.BGFieldRelationSingle) MetaDefault.GetField(new BGId(5362655967193847021UL,8794766217772961702UL));
			return _ufle12jhs77_f_Segment;
		}
	}
	private static BansheeGz.BGDatabase.BGFieldUnityScriptableObject _ufle12jhs77_f_RescueDialogue;
	public static BansheeGz.BGDatabase.BGFieldUnityScriptableObject _f_RescueDialogue
	{
		get
		{
			if(_ufle12jhs77_f_RescueDialogue==null || _ufle12jhs77_f_RescueDialogue.IsDeleted) _ufle12jhs77_f_RescueDialogue=(BansheeGz.BGDatabase.BGFieldUnityScriptableObject) MetaDefault.GetField(new BGId(5658430206875923811UL,17589914016796226975UL));
			return _ufle12jhs77_f_RescueDialogue;
		}
	}
	private static BansheeGz.BGDatabase.BGFieldNested _ufle12jhs77_f_QuestDialogues;
	public static BansheeGz.BGDatabase.BGFieldNested _f_QuestDialogues
	{
		get
		{
			if(_ufle12jhs77_f_QuestDialogues==null || _ufle12jhs77_f_QuestDialogues.IsDeleted) _ufle12jhs77_f_QuestDialogues=(BansheeGz.BGDatabase.BGFieldNested) MetaDefault.GetField(new BGId(5283433954133549919UL,4931491506496442543UL));
			return _ufle12jhs77_f_QuestDialogues;
		}
	}
	private static BansheeGz.BGDatabase.BGFieldNested _ufle12jhs77_f_QuestWaitingDialogues;
	public static BansheeGz.BGDatabase.BGFieldNested _f_QuestWaitingDialogues
	{
		get
		{
			if(_ufle12jhs77_f_QuestWaitingDialogues==null || _ufle12jhs77_f_QuestWaitingDialogues.IsDeleted) _ufle12jhs77_f_QuestWaitingDialogues=(BansheeGz.BGDatabase.BGFieldNested) MetaDefault.GetField(new BGId(5428041660786546183UL,4300236321036646299UL));
			return _ufle12jhs77_f_QuestWaitingDialogues;
		}
	}
	private static BansheeGz.BGDatabase.BGFieldNested _ufle12jhs77_f_ReturnDialogues;
	public static BansheeGz.BGDatabase.BGFieldNested _f_ReturnDialogues
	{
		get
		{
			if(_ufle12jhs77_f_ReturnDialogues==null || _ufle12jhs77_f_ReturnDialogues.IsDeleted) _ufle12jhs77_f_ReturnDialogues=(BansheeGz.BGDatabase.BGFieldNested) MetaDefault.GetField(new BGId(5510717961828634056UL,9806892908304910006UL));
			return _ufle12jhs77_f_ReturnDialogues;
		}
	}
	private static BansheeGz.BGDatabase.BGFieldNested _ufle12jhs77_f_AltReturnDialogues;
	public static BansheeGz.BGDatabase.BGFieldNested _f_AltReturnDialogues
	{
		get
		{
			if(_ufle12jhs77_f_AltReturnDialogues==null || _ufle12jhs77_f_AltReturnDialogues.IsDeleted) _ufle12jhs77_f_AltReturnDialogues=(BansheeGz.BGDatabase.BGFieldNested) MetaDefault.GetField(new BGId(5070407350080768397UL,9859837574045701809UL));
			return _ufle12jhs77_f_AltReturnDialogues;
		}
	}
	private static BansheeGz.BGDatabase.BGFieldNested _ufle12jhs77_f_FluffDialogues;
	public static BansheeGz.BGDatabase.BGFieldNested _f_FluffDialogues
	{
		get
		{
			if(_ufle12jhs77_f_FluffDialogues==null || _ufle12jhs77_f_FluffDialogues.IsDeleted) _ufle12jhs77_f_FluffDialogues=(BansheeGz.BGDatabase.BGFieldNested) MetaDefault.GetField(new BGId(5478707207032614291UL,13273353822579157894UL));
			return _ufle12jhs77_f_FluffDialogues;
		}
	}
	private static readonly List<BGEntity> _tugjbyuhfv_reusableList = new List<BGEntity>();
	public List<E_Segments> RelatedSegmentsListUsingDialoguesRelation
	{
		get
		{
			var _private_related_list = Alias_rifegrt_Segments._f_Dialogues.GetRelatedIn(Id, _tugjbyuhfv_reusableList);
			if (_private_related_list.Count == 0) return null;
			var _private_result_list = new List<E_Segments>(_private_related_list.Count);
			for (var i = 0; i < _private_related_list.Count; i++) _private_result_list.Add((E_Segments) _private_related_list[i]);
			_tugjbyuhfv_reusableList.Clear();
			return _private_result_list;
		}
	}
	private static readonly E_LevelData.Factory _factory0_PFS = new E_LevelData.Factory();
	private static readonly E_Biome.Factory _factory1_PFS = new E_Biome.Factory();
	private static readonly E_Pin.Factory _factory2_PFS = new E_Pin.Factory();
	private static readonly E_LevelGameplayData.Factory _factory3_PFS = new E_LevelGameplayData.Factory();
	private static readonly E_MapWalls.Factory _factory4_PFS = new E_MapWalls.Factory();
	private static readonly E_BiomeGameplayData.Factory _factory5_PFS = new E_BiomeGameplayData.Factory();
	private static readonly E_BiomeIdentifier.Factory _factory6_PFS = new E_BiomeIdentifier.Factory();
	private static readonly E_Dialogues.Factory _factory7_PFS = new E_Dialogues.Factory();
	private static readonly E_Segments.Factory _factory8_PFS = new E_Segments.Factory();
	private static readonly E_QuestDialogues.Factory _factory9_PFS = new E_QuestDialogues.Factory();
	private static readonly E_ReturnDialogues.Factory _factory10_PFS = new E_ReturnDialogues.Factory();
	private static readonly E_QuestWaitingDialogues.Factory _factory11_PFS = new E_QuestWaitingDialogues.Factory();
	private static readonly E_SegmentsGameplayData.Factory _factory12_PFS = new E_SegmentsGameplayData.Factory();
	private static readonly E_Objects.Factory _factory13_PFS = new E_Objects.Factory();
	private static readonly E_ObjectsGameplayData.Factory _factory14_PFS = new E_ObjectsGameplayData.Factory();
	private static readonly E_BiomeMaterials.Factory _factory15_PFS = new E_BiomeMaterials.Factory();
	private static readonly E_AltReturnDialogues.Factory _factory16_PFS = new E_AltReturnDialogues.Factory();
	private static readonly E_FluffDialogues.Factory _factory17_PFS = new E_FluffDialogues.Factory();
	private static readonly E_FluffDialogueGameplayData.Factory _factory18_PFS = new E_FluffDialogueGameplayData.Factory();
	private E_Dialogues() : base(MetaDefault)
	{
	}
	private E_Dialogues(BGId id) : base(MetaDefault, id)
	{
	}
	private E_Dialogues(BGMetaEntity meta) : base(meta)
	{
	}
	private E_Dialogues(BGMetaEntity meta, BGId id) : base(meta, id)
	{
	}
	public static E_Dialogues FindEntity(Predicate<E_Dialogues> filter)
	{
		return MetaDefault.FindEntity(entity => filter==null || filter((E_Dialogues) entity)) as E_Dialogues;
	}
	public static List<E_Dialogues> FindEntities(Predicate<E_Dialogues> filter, List<E_Dialogues> result=null, Comparison<E_Dialogues> sort=null)
	{
		result = result ?? new List<E_Dialogues>();
		_find_Entities_Result.Clear();
		MetaDefault.FindEntities(filter == null ? (Predicate<BGEntity>) null: e => filter((E_Dialogues) e), _find_Entities_Result, sort == null ? (Comparison<BGEntity>) null : (e1, e2) => sort((E_Dialogues) e1, (E_Dialogues) e2));
		if (_find_Entities_Result.Count != 0)
		{
			for (var i = 0; i < _find_Entities_Result.Count; i++) result.Add((E_Dialogues) _find_Entities_Result[i]);
			_find_Entities_Result.Clear();
		}
		return result;
	}
	public static void ForEachEntity(Action<E_Dialogues> action, Predicate<E_Dialogues> filter=null, Comparison<E_Dialogues> sort=null)
	{
		MetaDefault.ForEachEntity(entity => action((E_Dialogues) entity), filter == null ? null : (Predicate<BGEntity>) (entity => filter((E_Dialogues) entity)), sort==null?(Comparison<BGEntity>) null:(e1,e2) => sort((E_Dialogues)e1,(E_Dialogues)e2));
	}
	public static E_Dialogues GetEntity(BGId entityId)
	{
		return (E_Dialogues) MetaDefault.GetEntity(entityId);
	}
	public static E_Dialogues GetEntity(int index)
	{
		return (E_Dialogues) MetaDefault[index];
	}
	public static E_Dialogues GetEntity(string entityName)
	{
		return (E_Dialogues) MetaDefault.GetEntity(entityName);
	}
	public static E_Dialogues NewEntity()
	{
		return (E_Dialogues) MetaDefault.NewEntity();
	}
}

//=============================================================
//||                   Generated by BansheeGz Code Generator ||
//=============================================================

public partial class E_Segments : BGEntity
{

	//=============================================================
	//||                   Generated by BansheeGz Code Generator ||
	//=============================================================

	public class Factory : BGEntity.EntityFactory
	{
		public BGEntity NewEntity(BGMetaEntity meta)
		{
			return new E_Segments(meta);
		}
		public BGEntity NewEntity(BGMetaEntity meta, BGId id)
		{
			return new E_Segments(meta, id);
		}
	}
	private static BansheeGz.BGDatabase.BGMetaRow _metaDefault;
	public static BansheeGz.BGDatabase.BGMetaRow MetaDefault
	{
		get
		{
			if(_metaDefault==null || _metaDefault.IsDeleted) _metaDefault=BGRepo.I.GetMeta<BansheeGz.BGDatabase.BGMetaRow>(new BGId(5644026291501976503UL,5194951680243965827UL));
			return _metaDefault;
		}
	}
	public static BansheeGz.BGDatabase.BGRepoEvents Events
	{
		get
		{
			return BGRepo.I.Events;
		}
	}
	private static readonly List<BGEntity> _find_Entities_Result = new List<BGEntity>();
	public static int CountEntities
	{
		get
		{
			return MetaDefault.CountEntities;
		}
	}
	public System.String f_name
	{
		get
		{
			return _f_name[Index];
		}
		set
		{
			_f_name[Index] = value;
		}
	}
	public System.String f_SegmentName
	{
		get
		{
			return _f_SegmentName[Index];
		}
		set
		{
			_f_SegmentName[Index] = value;
		}
	}
	public UnityEngine.Object f_Prefab
	{
		get
		{
			return _f_Prefab[Index];
		}
	}
	public List<E_Objects> f_Objects
	{
		get
		{
			var val = _f_Objects[Index];
			if(val==null || val.Count==0) return null;
			var _ufli12jhs_Objects = new List<E_Objects>();
			for (var i = 0; i < val.Count; i++) _ufli12jhs_Objects.Add((E_Objects) val[i]);
			return _ufli12jhs_Objects;
		}
		set
		{
			var val = _f_Objects[Index];
			if(val==null) val = new List<BGEntity>();
			val.Clear();
			if(value!=null) for (var i = 0; i < value.Count; i++) val.Add(value[i]);
			_f_Objects[Index] = val;
		}
	}
	public E_Dialogues f_Dialogues
	{
		get
		{
			return (E_Dialogues) _f_Dialogues[Index];
		}
		set
		{
			_f_Dialogues[Index] = value;
		}
	}
	public UnityEngine.Object f_SpawnPrefab
	{
		get
		{
			return _f_SpawnPrefab[Index];
		}
	}
	public UnityEngine.Vector3 f_DialogueRotation
	{
		get
		{
			return _f_DialogueRotation[Index];
		}
		set
		{
			_f_DialogueRotation[Index] = value;
		}
	}
	public UnityEngine.Vector2 f_DialogueLightPitchYaw
	{
		get
		{
			return _f_DialogueLightPitchYaw[Index];
		}
		set
		{
			_f_DialogueLightPitchYaw[Index] = value;
		}
	}
	public E_SegmentsGameplayData f_GameplayData
	{
		get
		{
			return (E_SegmentsGameplayData) _f_GameplayData[Index];
		}
		set
		{
			_f_GameplayData[Index] = value;
		}
	}
	private static BansheeGz.BGDatabase.BGFieldEntityName _ufle12jhs77_f_name;
	public static BansheeGz.BGDatabase.BGFieldEntityName _f_name
	{
		get
		{
			if(_ufle12jhs77_f_name==null || _ufle12jhs77_f_name.IsDeleted) _ufle12jhs77_f_name=(BansheeGz.BGDatabase.BGFieldEntityName) MetaDefault.GetField(new BGId(5670569073695034891UL,14796031301428454317UL));
			return _ufle12jhs77_f_name;
		}
	}
	private static BansheeGz.BGDatabase.BGFieldString _ufle12jhs77_f_SegmentName;
	public static BansheeGz.BGDatabase.BGFieldString _f_SegmentName
	{
		get
		{
			if(_ufle12jhs77_f_SegmentName==null || _ufle12jhs77_f_SegmentName.IsDeleted) _ufle12jhs77_f_SegmentName=(BansheeGz.BGDatabase.BGFieldString) MetaDefault.GetField(new BGId(4705691430409051370UL,10398669542945010076UL));
			return _ufle12jhs77_f_SegmentName;
		}
	}
	private static BansheeGz.BGDatabase.BGFieldUnityObject _ufle12jhs77_f_Prefab;
	public static BansheeGz.BGDatabase.BGFieldUnityObject _f_Prefab
	{
		get
		{
			if(_ufle12jhs77_f_Prefab==null || _ufle12jhs77_f_Prefab.IsDeleted) _ufle12jhs77_f_Prefab=(BansheeGz.BGDatabase.BGFieldUnityObject) MetaDefault.GetField(new BGId(5042412784670426887UL,3798303333898769295UL));
			return _ufle12jhs77_f_Prefab;
		}
	}
	private static BansheeGz.BGDatabase.BGFieldRelationMultiple _ufle12jhs77_f_Objects;
	public static BansheeGz.BGDatabase.BGFieldRelationMultiple _f_Objects
	{
		get
		{
			if(_ufle12jhs77_f_Objects==null || _ufle12jhs77_f_Objects.IsDeleted) _ufle12jhs77_f_Objects=(BansheeGz.BGDatabase.BGFieldRelationMultiple) MetaDefault.GetField(new BGId(5414509257987170800UL,16375924262376720830UL));
			return _ufle12jhs77_f_Objects;
		}
	}
	private static BansheeGz.BGDatabase.BGFieldRelationSingle _ufle12jhs77_f_Dialogues;
	public static BansheeGz.BGDatabase.BGFieldRelationSingle _f_Dialogues
	{
		get
		{
			if(_ufle12jhs77_f_Dialogues==null || _ufle12jhs77_f_Dialogues.IsDeleted) _ufle12jhs77_f_Dialogues=(BansheeGz.BGDatabase.BGFieldRelationSingle) MetaDefault.GetField(new BGId(5043863872193162925UL,15580842669602972338UL));
			return _ufle12jhs77_f_Dialogues;
		}
	}
	private static BansheeGz.BGDatabase.BGFieldUnityObject _ufle12jhs77_f_SpawnPrefab;
	public static BansheeGz.BGDatabase.BGFieldUnityObject _f_SpawnPrefab
	{
		get
		{
			if(_ufle12jhs77_f_SpawnPrefab==null || _ufle12jhs77_f_SpawnPrefab.IsDeleted) _ufle12jhs77_f_SpawnPrefab=(BansheeGz.BGDatabase.BGFieldUnityObject) MetaDefault.GetField(new BGId(5584655967112634227UL,13267101346744214414UL));
			return _ufle12jhs77_f_SpawnPrefab;
		}
	}
	private static BansheeGz.BGDatabase.BGFieldVector3 _ufle12jhs77_f_DialogueRotation;
	public static BansheeGz.BGDatabase.BGFieldVector3 _f_DialogueRotation
	{
		get
		{
			if(_ufle12jhs77_f_DialogueRotation==null || _ufle12jhs77_f_DialogueRotation.IsDeleted) _ufle12jhs77_f_DialogueRotation=(BansheeGz.BGDatabase.BGFieldVector3) MetaDefault.GetField(new BGId(5760607302971462463UL,3672824699726006442UL));
			return _ufle12jhs77_f_DialogueRotation;
		}
	}
	private static BansheeGz.BGDatabase.BGFieldVector2 _ufle12jhs77_f_DialogueLightPitchYaw;
	public static BansheeGz.BGDatabase.BGFieldVector2 _f_DialogueLightPitchYaw
	{
		get
		{
			if(_ufle12jhs77_f_DialogueLightPitchYaw==null || _ufle12jhs77_f_DialogueLightPitchYaw.IsDeleted) _ufle12jhs77_f_DialogueLightPitchYaw=(BansheeGz.BGDatabase.BGFieldVector2) MetaDefault.GetField(new BGId(5395289116548682697UL,15975294921309799602UL));
			return _ufle12jhs77_f_DialogueLightPitchYaw;
		}
	}
	private static BansheeGz.BGDatabase.BGFieldRelationSingle _ufle12jhs77_f_GameplayData;
	public static BansheeGz.BGDatabase.BGFieldRelationSingle _f_GameplayData
	{
		get
		{
			if(_ufle12jhs77_f_GameplayData==null || _ufle12jhs77_f_GameplayData.IsDeleted) _ufle12jhs77_f_GameplayData=(BansheeGz.BGDatabase.BGFieldRelationSingle) MetaDefault.GetField(new BGId(4909705211094579299UL,13210900775542928543UL));
			return _ufle12jhs77_f_GameplayData;
		}
	}
	private static readonly List<BGEntity> _tugjbyuhfv_reusableList = new List<BGEntity>();
	public List<E_Dialogues> RelatedDialoguesListUsingSegmentRelation
	{
		get
		{
			var _private_related_list = Alias_rifegrt_Dialogues._f_Segment.GetRelatedIn(Id, _tugjbyuhfv_reusableList);
			if (_private_related_list.Count == 0) return null;
			var _private_result_list = new List<E_Dialogues>(_private_related_list.Count);
			for (var i = 0; i < _private_related_list.Count; i++) _private_result_list.Add((E_Dialogues) _private_related_list[i]);
			_tugjbyuhfv_reusableList.Clear();
			return _private_result_list;
		}
	}
	public List<E_SegmentsGameplayData> RelatedSegmentsGameplayDataListUsingSegmentRelation
	{
		get
		{
			var _private_related_list = Alias_rifegrt_SegmentsGameplayData._f_Segment.GetRelatedIn(Id, _tugjbyuhfv_reusableList);
			if (_private_related_list.Count == 0) return null;
			var _private_result_list = new List<E_SegmentsGameplayData>(_private_related_list.Count);
			for (var i = 0; i < _private_related_list.Count; i++) _private_result_list.Add((E_SegmentsGameplayData) _private_related_list[i]);
			_tugjbyuhfv_reusableList.Clear();
			return _private_result_list;
		}
	}
	public List<E_Objects> RelatedObjectsListUsingOwnerRelation
	{
		get
		{
			var _private_related_list = Alias_rifegrt_Objects._f_Owner.GetRelatedIn(Id, _tugjbyuhfv_reusableList);
			if (_private_related_list.Count == 0) return null;
			var _private_result_list = new List<E_Objects>(_private_related_list.Count);
			for (var i = 0; i < _private_related_list.Count; i++) _private_result_list.Add((E_Objects) _private_related_list[i]);
			_tugjbyuhfv_reusableList.Clear();
			return _private_result_list;
		}
	}
	private static readonly E_LevelData.Factory _factory0_PFS = new E_LevelData.Factory();
	private static readonly E_Biome.Factory _factory1_PFS = new E_Biome.Factory();
	private static readonly E_Pin.Factory _factory2_PFS = new E_Pin.Factory();
	private static readonly E_LevelGameplayData.Factory _factory3_PFS = new E_LevelGameplayData.Factory();
	private static readonly E_MapWalls.Factory _factory4_PFS = new E_MapWalls.Factory();
	private static readonly E_BiomeGameplayData.Factory _factory5_PFS = new E_BiomeGameplayData.Factory();
	private static readonly E_BiomeIdentifier.Factory _factory6_PFS = new E_BiomeIdentifier.Factory();
	private static readonly E_Dialogues.Factory _factory7_PFS = new E_Dialogues.Factory();
	private static readonly E_Segments.Factory _factory8_PFS = new E_Segments.Factory();
	private static readonly E_QuestDialogues.Factory _factory9_PFS = new E_QuestDialogues.Factory();
	private static readonly E_ReturnDialogues.Factory _factory10_PFS = new E_ReturnDialogues.Factory();
	private static readonly E_QuestWaitingDialogues.Factory _factory11_PFS = new E_QuestWaitingDialogues.Factory();
	private static readonly E_SegmentsGameplayData.Factory _factory12_PFS = new E_SegmentsGameplayData.Factory();
	private static readonly E_Objects.Factory _factory13_PFS = new E_Objects.Factory();
	private static readonly E_ObjectsGameplayData.Factory _factory14_PFS = new E_ObjectsGameplayData.Factory();
	private static readonly E_BiomeMaterials.Factory _factory15_PFS = new E_BiomeMaterials.Factory();
	private static readonly E_AltReturnDialogues.Factory _factory16_PFS = new E_AltReturnDialogues.Factory();
	private static readonly E_FluffDialogues.Factory _factory17_PFS = new E_FluffDialogues.Factory();
	private static readonly E_FluffDialogueGameplayData.Factory _factory18_PFS = new E_FluffDialogueGameplayData.Factory();
	private E_Segments() : base(MetaDefault)
	{
	}
	private E_Segments(BGId id) : base(MetaDefault, id)
	{
	}
	private E_Segments(BGMetaEntity meta) : base(meta)
	{
	}
	private E_Segments(BGMetaEntity meta, BGId id) : base(meta, id)
	{
	}
	public static E_Segments FindEntity(Predicate<E_Segments> filter)
	{
		return MetaDefault.FindEntity(entity => filter==null || filter((E_Segments) entity)) as E_Segments;
	}
	public static List<E_Segments> FindEntities(Predicate<E_Segments> filter, List<E_Segments> result=null, Comparison<E_Segments> sort=null)
	{
		result = result ?? new List<E_Segments>();
		_find_Entities_Result.Clear();
		MetaDefault.FindEntities(filter == null ? (Predicate<BGEntity>) null: e => filter((E_Segments) e), _find_Entities_Result, sort == null ? (Comparison<BGEntity>) null : (e1, e2) => sort((E_Segments) e1, (E_Segments) e2));
		if (_find_Entities_Result.Count != 0)
		{
			for (var i = 0; i < _find_Entities_Result.Count; i++) result.Add((E_Segments) _find_Entities_Result[i]);
			_find_Entities_Result.Clear();
		}
		return result;
	}
	public static void ForEachEntity(Action<E_Segments> action, Predicate<E_Segments> filter=null, Comparison<E_Segments> sort=null)
	{
		MetaDefault.ForEachEntity(entity => action((E_Segments) entity), filter == null ? null : (Predicate<BGEntity>) (entity => filter((E_Segments) entity)), sort==null?(Comparison<BGEntity>) null:(e1,e2) => sort((E_Segments)e1,(E_Segments)e2));
	}
	public static E_Segments GetEntity(BGId entityId)
	{
		return (E_Segments) MetaDefault.GetEntity(entityId);
	}
	public static E_Segments GetEntity(int index)
	{
		return (E_Segments) MetaDefault[index];
	}
	public static E_Segments GetEntity(string entityName)
	{
		return (E_Segments) MetaDefault.GetEntity(entityName);
	}
	public static E_Segments NewEntity()
	{
		return (E_Segments) MetaDefault.NewEntity();
	}
	public void f_Objects_Add(E_Objects related)
	{
		if(related == null) throw new Exception("Can not add a related entity, cause value is null");
		var val = _f_Objects[Index];
		if(val == null) val = new List<BGEntity>{related};
		else val.Add(related);
		_f_Objects[Index] = val;
	}
	public void f_Objects_Remove(E_Objects related)
	{
		if(related == null) throw new Exception("Can not remove a related entity, cause value is null");
		var val = _f_Objects[Index];
		if(val != null)
		{
			val.RemoveAll(e => Equals(e, related));
			_f_Objects[Index] = val.Count == 0 ? null : val;
		}
	}
}

//=============================================================
//||                   Generated by BansheeGz Code Generator ||
//=============================================================

public partial class E_QuestDialogues : BGEntity
{

	//=============================================================
	//||                   Generated by BansheeGz Code Generator ||
	//=============================================================

	public class Factory : BGEntity.EntityFactory
	{
		public BGEntity NewEntity(BGMetaEntity meta)
		{
			return new E_QuestDialogues(meta);
		}
		public BGEntity NewEntity(BGMetaEntity meta, BGId id)
		{
			return new E_QuestDialogues(meta, id);
		}
	}
	private static BansheeGz.BGDatabase.BGMetaNested _metaDefault;
	public static BansheeGz.BGDatabase.BGMetaNested MetaDefault
	{
		get
		{
			if(_metaDefault==null || _metaDefault.IsDeleted) _metaDefault=BGRepo.I.GetMeta<BansheeGz.BGDatabase.BGMetaNested>(new BGId(4808130919358401807UL,52346600882199431UL));
			return _metaDefault;
		}
	}
	public static BansheeGz.BGDatabase.BGRepoEvents Events
	{
		get
		{
			return BGRepo.I.Events;
		}
	}
	private static readonly List<BGEntity> _find_Entities_Result = new List<BGEntity>();
	public static int CountEntities
	{
		get
		{
			return MetaDefault.CountEntities;
		}
	}
	public System.String f_name
	{
		get
		{
			return _f_name[Index];
		}
		set
		{
			_f_name[Index] = value;
		}
	}
	public E_Dialogues f_Dialogues
	{
		get
		{
			return (E_Dialogues) _f_Dialogues[Index];
		}
		set
		{
			_f_Dialogues[Index] = value;
		}
	}
	public UnityEngine.ScriptableObject f_QuestDialogue
	{
		get
		{
			return _f_QuestDialogue[Index];
		}
	}
	public E_Objects f_ForObject
	{
		get
		{
			return (E_Objects) _f_ForObject[Index];
		}
		set
		{
			_f_ForObject[Index] = value;
		}
	}
	private static BansheeGz.BGDatabase.BGFieldEntityName _ufle12jhs77_f_name;
	public static BansheeGz.BGDatabase.BGFieldEntityName _f_name
	{
		get
		{
			if(_ufle12jhs77_f_name==null || _ufle12jhs77_f_name.IsDeleted) _ufle12jhs77_f_name=(BansheeGz.BGDatabase.BGFieldEntityName) MetaDefault.GetField(new BGId(5266780885273243854UL,4959441787887254671UL));
			return _ufle12jhs77_f_name;
		}
	}
	private static BansheeGz.BGDatabase.BGFieldRelationSingle _ufle12jhs77_f_Dialogues;
	public static BansheeGz.BGDatabase.BGFieldRelationSingle _f_Dialogues
	{
		get
		{
			if(_ufle12jhs77_f_Dialogues==null || _ufle12jhs77_f_Dialogues.IsDeleted) _ufle12jhs77_f_Dialogues=(BansheeGz.BGDatabase.BGFieldRelationSingle) MetaDefault.GetField(new BGId(5321635391406516302UL,10948997418535215012UL));
			return _ufle12jhs77_f_Dialogues;
		}
	}
	private static BansheeGz.BGDatabase.BGFieldUnityScriptableObject _ufle12jhs77_f_QuestDialogue;
	public static BansheeGz.BGDatabase.BGFieldUnityScriptableObject _f_QuestDialogue
	{
		get
		{
			if(_ufle12jhs77_f_QuestDialogue==null || _ufle12jhs77_f_QuestDialogue.IsDeleted) _ufle12jhs77_f_QuestDialogue=(BansheeGz.BGDatabase.BGFieldUnityScriptableObject) MetaDefault.GetField(new BGId(5688831178092183995UL,10495045604489321390UL));
			return _ufle12jhs77_f_QuestDialogue;
		}
	}
	private static BansheeGz.BGDatabase.BGFieldRelationSingle _ufle12jhs77_f_ForObject;
	public static BansheeGz.BGDatabase.BGFieldRelationSingle _f_ForObject
	{
		get
		{
			if(_ufle12jhs77_f_ForObject==null || _ufle12jhs77_f_ForObject.IsDeleted) _ufle12jhs77_f_ForObject=(BansheeGz.BGDatabase.BGFieldRelationSingle) MetaDefault.GetField(new BGId(5004266668345210568UL,9845439169215335097UL));
			return _ufle12jhs77_f_ForObject;
		}
	}
	private static readonly E_LevelData.Factory _factory0_PFS = new E_LevelData.Factory();
	private static readonly E_Biome.Factory _factory1_PFS = new E_Biome.Factory();
	private static readonly E_Pin.Factory _factory2_PFS = new E_Pin.Factory();
	private static readonly E_LevelGameplayData.Factory _factory3_PFS = new E_LevelGameplayData.Factory();
	private static readonly E_MapWalls.Factory _factory4_PFS = new E_MapWalls.Factory();
	private static readonly E_BiomeGameplayData.Factory _factory5_PFS = new E_BiomeGameplayData.Factory();
	private static readonly E_BiomeIdentifier.Factory _factory6_PFS = new E_BiomeIdentifier.Factory();
	private static readonly E_Dialogues.Factory _factory7_PFS = new E_Dialogues.Factory();
	private static readonly E_Segments.Factory _factory8_PFS = new E_Segments.Factory();
	private static readonly E_QuestDialogues.Factory _factory9_PFS = new E_QuestDialogues.Factory();
	private static readonly E_ReturnDialogues.Factory _factory10_PFS = new E_ReturnDialogues.Factory();
	private static readonly E_QuestWaitingDialogues.Factory _factory11_PFS = new E_QuestWaitingDialogues.Factory();
	private static readonly E_SegmentsGameplayData.Factory _factory12_PFS = new E_SegmentsGameplayData.Factory();
	private static readonly E_Objects.Factory _factory13_PFS = new E_Objects.Factory();
	private static readonly E_ObjectsGameplayData.Factory _factory14_PFS = new E_ObjectsGameplayData.Factory();
	private static readonly E_BiomeMaterials.Factory _factory15_PFS = new E_BiomeMaterials.Factory();
	private static readonly E_AltReturnDialogues.Factory _factory16_PFS = new E_AltReturnDialogues.Factory();
	private static readonly E_FluffDialogues.Factory _factory17_PFS = new E_FluffDialogues.Factory();
	private static readonly E_FluffDialogueGameplayData.Factory _factory18_PFS = new E_FluffDialogueGameplayData.Factory();
	private E_QuestDialogues() : base(MetaDefault)
	{
	}
	private E_QuestDialogues(BGId id) : base(MetaDefault, id)
	{
	}
	private E_QuestDialogues(BGMetaEntity meta) : base(meta)
	{
	}
	private E_QuestDialogues(BGMetaEntity meta, BGId id) : base(meta, id)
	{
	}
	public static E_QuestDialogues FindEntity(Predicate<E_QuestDialogues> filter)
	{
		return MetaDefault.FindEntity(entity => filter==null || filter((E_QuestDialogues) entity)) as E_QuestDialogues;
	}
	public static List<E_QuestDialogues> FindEntities(Predicate<E_QuestDialogues> filter, List<E_QuestDialogues> result=null, Comparison<E_QuestDialogues> sort=null)
	{
		result = result ?? new List<E_QuestDialogues>();
		_find_Entities_Result.Clear();
		MetaDefault.FindEntities(filter == null ? (Predicate<BGEntity>) null: e => filter((E_QuestDialogues) e), _find_Entities_Result, sort == null ? (Comparison<BGEntity>) null : (e1, e2) => sort((E_QuestDialogues) e1, (E_QuestDialogues) e2));
		if (_find_Entities_Result.Count != 0)
		{
			for (var i = 0; i < _find_Entities_Result.Count; i++) result.Add((E_QuestDialogues) _find_Entities_Result[i]);
			_find_Entities_Result.Clear();
		}
		return result;
	}
	public static void ForEachEntity(Action<E_QuestDialogues> action, Predicate<E_QuestDialogues> filter=null, Comparison<E_QuestDialogues> sort=null)
	{
		MetaDefault.ForEachEntity(entity => action((E_QuestDialogues) entity), filter == null ? null : (Predicate<BGEntity>) (entity => filter((E_QuestDialogues) entity)), sort==null?(Comparison<BGEntity>) null:(e1,e2) => sort((E_QuestDialogues)e1,(E_QuestDialogues)e2));
	}
	public static E_QuestDialogues GetEntity(BGId entityId)
	{
		return (E_QuestDialogues) MetaDefault.GetEntity(entityId);
	}
	public static E_QuestDialogues GetEntity(int index)
	{
		return (E_QuestDialogues) MetaDefault[index];
	}
	public static E_QuestDialogues GetEntity(string entityName)
	{
		return (E_QuestDialogues) MetaDefault.GetEntity(entityName);
	}
	public static E_QuestDialogues NewEntity()
	{
		return (E_QuestDialogues) MetaDefault.NewEntity();
	}
	public static E_QuestDialogues NewEntity(E_Dialogues owner)
	{
		return (E_QuestDialogues) MetaDefault.NewEntity(owner);
	}
}

//=============================================================
//||                   Generated by BansheeGz Code Generator ||
//=============================================================

public partial class E_ReturnDialogues : BGEntity
{

	//=============================================================
	//||                   Generated by BansheeGz Code Generator ||
	//=============================================================

	public class Factory : BGEntity.EntityFactory
	{
		public BGEntity NewEntity(BGMetaEntity meta)
		{
			return new E_ReturnDialogues(meta);
		}
		public BGEntity NewEntity(BGMetaEntity meta, BGId id)
		{
			return new E_ReturnDialogues(meta, id);
		}
	}
	private static BansheeGz.BGDatabase.BGMetaNested _metaDefault;
	public static BansheeGz.BGDatabase.BGMetaNested MetaDefault
	{
		get
		{
			if(_metaDefault==null || _metaDefault.IsDeleted) _metaDefault=BGRepo.I.GetMeta<BansheeGz.BGDatabase.BGMetaNested>(new BGId(4870647987258873166UL,7601789944337567620UL));
			return _metaDefault;
		}
	}
	public static BansheeGz.BGDatabase.BGRepoEvents Events
	{
		get
		{
			return BGRepo.I.Events;
		}
	}
	private static readonly List<BGEntity> _find_Entities_Result = new List<BGEntity>();
	public static int CountEntities
	{
		get
		{
			return MetaDefault.CountEntities;
		}
	}
	public System.String f_name
	{
		get
		{
			return _f_name[Index];
		}
		set
		{
			_f_name[Index] = value;
		}
	}
	public E_Dialogues f_Dialogues
	{
		get
		{
			return (E_Dialogues) _f_Dialogues[Index];
		}
		set
		{
			_f_Dialogues[Index] = value;
		}
	}
	public UnityEngine.ScriptableObject f_ReturnDialogue
	{
		get
		{
			return _f_ReturnDialogue[Index];
		}
	}
	public E_Objects f_ForObject
	{
		get
		{
			return (E_Objects) _f_ForObject[Index];
		}
		set
		{
			_f_ForObject[Index] = value;
		}
	}
	private static BansheeGz.BGDatabase.BGFieldEntityName _ufle12jhs77_f_name;
	public static BansheeGz.BGDatabase.BGFieldEntityName _f_name
	{
		get
		{
			if(_ufle12jhs77_f_name==null || _ufle12jhs77_f_name.IsDeleted) _ufle12jhs77_f_name=(BansheeGz.BGDatabase.BGFieldEntityName) MetaDefault.GetField(new BGId(5266760306252603425UL,5886380830954584228UL));
			return _ufle12jhs77_f_name;
		}
	}
	private static BansheeGz.BGDatabase.BGFieldRelationSingle _ufle12jhs77_f_Dialogues;
	public static BansheeGz.BGDatabase.BGFieldRelationSingle _f_Dialogues
	{
		get
		{
			if(_ufle12jhs77_f_Dialogues==null || _ufle12jhs77_f_Dialogues.IsDeleted) _ufle12jhs77_f_Dialogues=(BansheeGz.BGDatabase.BGFieldRelationSingle) MetaDefault.GetField(new BGId(5616062900662357611UL,16901702900459328912UL));
			return _ufle12jhs77_f_Dialogues;
		}
	}
	private static BansheeGz.BGDatabase.BGFieldUnityScriptableObject _ufle12jhs77_f_ReturnDialogue;
	public static BansheeGz.BGDatabase.BGFieldUnityScriptableObject _f_ReturnDialogue
	{
		get
		{
			if(_ufle12jhs77_f_ReturnDialogue==null || _ufle12jhs77_f_ReturnDialogue.IsDeleted) _ufle12jhs77_f_ReturnDialogue=(BansheeGz.BGDatabase.BGFieldUnityScriptableObject) MetaDefault.GetField(new BGId(5561073307789242631UL,2750474124636255876UL));
			return _ufle12jhs77_f_ReturnDialogue;
		}
	}
	private static BansheeGz.BGDatabase.BGFieldRelationSingle _ufle12jhs77_f_ForObject;
	public static BansheeGz.BGDatabase.BGFieldRelationSingle _f_ForObject
	{
		get
		{
			if(_ufle12jhs77_f_ForObject==null || _ufle12jhs77_f_ForObject.IsDeleted) _ufle12jhs77_f_ForObject=(BansheeGz.BGDatabase.BGFieldRelationSingle) MetaDefault.GetField(new BGId(5205356440346579593UL,8967285530539706020UL));
			return _ufle12jhs77_f_ForObject;
		}
	}
	private static readonly E_LevelData.Factory _factory0_PFS = new E_LevelData.Factory();
	private static readonly E_Biome.Factory _factory1_PFS = new E_Biome.Factory();
	private static readonly E_Pin.Factory _factory2_PFS = new E_Pin.Factory();
	private static readonly E_LevelGameplayData.Factory _factory3_PFS = new E_LevelGameplayData.Factory();
	private static readonly E_MapWalls.Factory _factory4_PFS = new E_MapWalls.Factory();
	private static readonly E_BiomeGameplayData.Factory _factory5_PFS = new E_BiomeGameplayData.Factory();
	private static readonly E_BiomeIdentifier.Factory _factory6_PFS = new E_BiomeIdentifier.Factory();
	private static readonly E_Dialogues.Factory _factory7_PFS = new E_Dialogues.Factory();
	private static readonly E_Segments.Factory _factory8_PFS = new E_Segments.Factory();
	private static readonly E_QuestDialogues.Factory _factory9_PFS = new E_QuestDialogues.Factory();
	private static readonly E_ReturnDialogues.Factory _factory10_PFS = new E_ReturnDialogues.Factory();
	private static readonly E_QuestWaitingDialogues.Factory _factory11_PFS = new E_QuestWaitingDialogues.Factory();
	private static readonly E_SegmentsGameplayData.Factory _factory12_PFS = new E_SegmentsGameplayData.Factory();
	private static readonly E_Objects.Factory _factory13_PFS = new E_Objects.Factory();
	private static readonly E_ObjectsGameplayData.Factory _factory14_PFS = new E_ObjectsGameplayData.Factory();
	private static readonly E_BiomeMaterials.Factory _factory15_PFS = new E_BiomeMaterials.Factory();
	private static readonly E_AltReturnDialogues.Factory _factory16_PFS = new E_AltReturnDialogues.Factory();
	private static readonly E_FluffDialogues.Factory _factory17_PFS = new E_FluffDialogues.Factory();
	private static readonly E_FluffDialogueGameplayData.Factory _factory18_PFS = new E_FluffDialogueGameplayData.Factory();
	private E_ReturnDialogues() : base(MetaDefault)
	{
	}
	private E_ReturnDialogues(BGId id) : base(MetaDefault, id)
	{
	}
	private E_ReturnDialogues(BGMetaEntity meta) : base(meta)
	{
	}
	private E_ReturnDialogues(BGMetaEntity meta, BGId id) : base(meta, id)
	{
	}
	public static E_ReturnDialogues FindEntity(Predicate<E_ReturnDialogues> filter)
	{
		return MetaDefault.FindEntity(entity => filter==null || filter((E_ReturnDialogues) entity)) as E_ReturnDialogues;
	}
	public static List<E_ReturnDialogues> FindEntities(Predicate<E_ReturnDialogues> filter, List<E_ReturnDialogues> result=null, Comparison<E_ReturnDialogues> sort=null)
	{
		result = result ?? new List<E_ReturnDialogues>();
		_find_Entities_Result.Clear();
		MetaDefault.FindEntities(filter == null ? (Predicate<BGEntity>) null: e => filter((E_ReturnDialogues) e), _find_Entities_Result, sort == null ? (Comparison<BGEntity>) null : (e1, e2) => sort((E_ReturnDialogues) e1, (E_ReturnDialogues) e2));
		if (_find_Entities_Result.Count != 0)
		{
			for (var i = 0; i < _find_Entities_Result.Count; i++) result.Add((E_ReturnDialogues) _find_Entities_Result[i]);
			_find_Entities_Result.Clear();
		}
		return result;
	}
	public static void ForEachEntity(Action<E_ReturnDialogues> action, Predicate<E_ReturnDialogues> filter=null, Comparison<E_ReturnDialogues> sort=null)
	{
		MetaDefault.ForEachEntity(entity => action((E_ReturnDialogues) entity), filter == null ? null : (Predicate<BGEntity>) (entity => filter((E_ReturnDialogues) entity)), sort==null?(Comparison<BGEntity>) null:(e1,e2) => sort((E_ReturnDialogues)e1,(E_ReturnDialogues)e2));
	}
	public static E_ReturnDialogues GetEntity(BGId entityId)
	{
		return (E_ReturnDialogues) MetaDefault.GetEntity(entityId);
	}
	public static E_ReturnDialogues GetEntity(int index)
	{
		return (E_ReturnDialogues) MetaDefault[index];
	}
	public static E_ReturnDialogues GetEntity(string entityName)
	{
		return (E_ReturnDialogues) MetaDefault.GetEntity(entityName);
	}
	public static E_ReturnDialogues NewEntity()
	{
		return (E_ReturnDialogues) MetaDefault.NewEntity();
	}
	public static E_ReturnDialogues NewEntity(E_Dialogues owner)
	{
		return (E_ReturnDialogues) MetaDefault.NewEntity(owner);
	}
}

//=============================================================
//||                   Generated by BansheeGz Code Generator ||
//=============================================================

public partial class E_QuestWaitingDialogues : BGEntity
{

	//=============================================================
	//||                   Generated by BansheeGz Code Generator ||
	//=============================================================

	public class Factory : BGEntity.EntityFactory
	{
		public BGEntity NewEntity(BGMetaEntity meta)
		{
			return new E_QuestWaitingDialogues(meta);
		}
		public BGEntity NewEntity(BGMetaEntity meta, BGId id)
		{
			return new E_QuestWaitingDialogues(meta, id);
		}
	}
	private static BansheeGz.BGDatabase.BGMetaNested _metaDefault;
	public static BansheeGz.BGDatabase.BGMetaNested MetaDefault
	{
		get
		{
			if(_metaDefault==null || _metaDefault.IsDeleted) _metaDefault=BGRepo.I.GetMeta<BansheeGz.BGDatabase.BGMetaNested>(new BGId(5004842750203547889UL,14256004012873493661UL));
			return _metaDefault;
		}
	}
	public static BansheeGz.BGDatabase.BGRepoEvents Events
	{
		get
		{
			return BGRepo.I.Events;
		}
	}
	private static readonly List<BGEntity> _find_Entities_Result = new List<BGEntity>();
	public static int CountEntities
	{
		get
		{
			return MetaDefault.CountEntities;
		}
	}
	public System.String f_name
	{
		get
		{
			return _f_name[Index];
		}
		set
		{
			_f_name[Index] = value;
		}
	}
	public E_Dialogues f_Dialogues
	{
		get
		{
			return (E_Dialogues) _f_Dialogues[Index];
		}
		set
		{
			_f_Dialogues[Index] = value;
		}
	}
	public UnityEngine.ScriptableObject f_WaitingDialogue
	{
		get
		{
			return _f_WaitingDialogue[Index];
		}
	}
	public E_Objects f_ForObject
	{
		get
		{
			return (E_Objects) _f_ForObject[Index];
		}
		set
		{
			_f_ForObject[Index] = value;
		}
	}
	private static BansheeGz.BGDatabase.BGFieldEntityName _ufle12jhs77_f_name;
	public static BansheeGz.BGDatabase.BGFieldEntityName _f_name
	{
		get
		{
			if(_ufle12jhs77_f_name==null || _ufle12jhs77_f_name.IsDeleted) _ufle12jhs77_f_name=(BansheeGz.BGDatabase.BGFieldEntityName) MetaDefault.GetField(new BGId(4789571189893784818UL,13042627285573052349UL));
			return _ufle12jhs77_f_name;
		}
	}
	private static BansheeGz.BGDatabase.BGFieldRelationSingle _ufle12jhs77_f_Dialogues;
	public static BansheeGz.BGDatabase.BGFieldRelationSingle _f_Dialogues
	{
		get
		{
			if(_ufle12jhs77_f_Dialogues==null || _ufle12jhs77_f_Dialogues.IsDeleted) _ufle12jhs77_f_Dialogues=(BansheeGz.BGDatabase.BGFieldRelationSingle) MetaDefault.GetField(new BGId(4632842694941744361UL,16499129772787124644UL));
			return _ufle12jhs77_f_Dialogues;
		}
	}
	private static BansheeGz.BGDatabase.BGFieldUnityScriptableObject _ufle12jhs77_f_WaitingDialogue;
	public static BansheeGz.BGDatabase.BGFieldUnityScriptableObject _f_WaitingDialogue
	{
		get
		{
			if(_ufle12jhs77_f_WaitingDialogue==null || _ufle12jhs77_f_WaitingDialogue.IsDeleted) _ufle12jhs77_f_WaitingDialogue=(BansheeGz.BGDatabase.BGFieldUnityScriptableObject) MetaDefault.GetField(new BGId(5075957454151973099UL,8866328356865390467UL));
			return _ufle12jhs77_f_WaitingDialogue;
		}
	}
	private static BansheeGz.BGDatabase.BGFieldRelationSingle _ufle12jhs77_f_ForObject;
	public static BansheeGz.BGDatabase.BGFieldRelationSingle _f_ForObject
	{
		get
		{
			if(_ufle12jhs77_f_ForObject==null || _ufle12jhs77_f_ForObject.IsDeleted) _ufle12jhs77_f_ForObject=(BansheeGz.BGDatabase.BGFieldRelationSingle) MetaDefault.GetField(new BGId(4892145133406715386UL,8464972153410059912UL));
			return _ufle12jhs77_f_ForObject;
		}
	}
	private static readonly E_LevelData.Factory _factory0_PFS = new E_LevelData.Factory();
	private static readonly E_Biome.Factory _factory1_PFS = new E_Biome.Factory();
	private static readonly E_Pin.Factory _factory2_PFS = new E_Pin.Factory();
	private static readonly E_LevelGameplayData.Factory _factory3_PFS = new E_LevelGameplayData.Factory();
	private static readonly E_MapWalls.Factory _factory4_PFS = new E_MapWalls.Factory();
	private static readonly E_BiomeGameplayData.Factory _factory5_PFS = new E_BiomeGameplayData.Factory();
	private static readonly E_BiomeIdentifier.Factory _factory6_PFS = new E_BiomeIdentifier.Factory();
	private static readonly E_Dialogues.Factory _factory7_PFS = new E_Dialogues.Factory();
	private static readonly E_Segments.Factory _factory8_PFS = new E_Segments.Factory();
	private static readonly E_QuestDialogues.Factory _factory9_PFS = new E_QuestDialogues.Factory();
	private static readonly E_ReturnDialogues.Factory _factory10_PFS = new E_ReturnDialogues.Factory();
	private static readonly E_QuestWaitingDialogues.Factory _factory11_PFS = new E_QuestWaitingDialogues.Factory();
	private static readonly E_SegmentsGameplayData.Factory _factory12_PFS = new E_SegmentsGameplayData.Factory();
	private static readonly E_Objects.Factory _factory13_PFS = new E_Objects.Factory();
	private static readonly E_ObjectsGameplayData.Factory _factory14_PFS = new E_ObjectsGameplayData.Factory();
	private static readonly E_BiomeMaterials.Factory _factory15_PFS = new E_BiomeMaterials.Factory();
	private static readonly E_AltReturnDialogues.Factory _factory16_PFS = new E_AltReturnDialogues.Factory();
	private static readonly E_FluffDialogues.Factory _factory17_PFS = new E_FluffDialogues.Factory();
	private static readonly E_FluffDialogueGameplayData.Factory _factory18_PFS = new E_FluffDialogueGameplayData.Factory();
	private E_QuestWaitingDialogues() : base(MetaDefault)
	{
	}
	private E_QuestWaitingDialogues(BGId id) : base(MetaDefault, id)
	{
	}
	private E_QuestWaitingDialogues(BGMetaEntity meta) : base(meta)
	{
	}
	private E_QuestWaitingDialogues(BGMetaEntity meta, BGId id) : base(meta, id)
	{
	}
	public static E_QuestWaitingDialogues FindEntity(Predicate<E_QuestWaitingDialogues> filter)
	{
		return MetaDefault.FindEntity(entity => filter==null || filter((E_QuestWaitingDialogues) entity)) as E_QuestWaitingDialogues;
	}
	public static List<E_QuestWaitingDialogues> FindEntities(Predicate<E_QuestWaitingDialogues> filter, List<E_QuestWaitingDialogues> result=null, Comparison<E_QuestWaitingDialogues> sort=null)
	{
		result = result ?? new List<E_QuestWaitingDialogues>();
		_find_Entities_Result.Clear();
		MetaDefault.FindEntities(filter == null ? (Predicate<BGEntity>) null: e => filter((E_QuestWaitingDialogues) e), _find_Entities_Result, sort == null ? (Comparison<BGEntity>) null : (e1, e2) => sort((E_QuestWaitingDialogues) e1, (E_QuestWaitingDialogues) e2));
		if (_find_Entities_Result.Count != 0)
		{
			for (var i = 0; i < _find_Entities_Result.Count; i++) result.Add((E_QuestWaitingDialogues) _find_Entities_Result[i]);
			_find_Entities_Result.Clear();
		}
		return result;
	}
	public static void ForEachEntity(Action<E_QuestWaitingDialogues> action, Predicate<E_QuestWaitingDialogues> filter=null, Comparison<E_QuestWaitingDialogues> sort=null)
	{
		MetaDefault.ForEachEntity(entity => action((E_QuestWaitingDialogues) entity), filter == null ? null : (Predicate<BGEntity>) (entity => filter((E_QuestWaitingDialogues) entity)), sort==null?(Comparison<BGEntity>) null:(e1,e2) => sort((E_QuestWaitingDialogues)e1,(E_QuestWaitingDialogues)e2));
	}
	public static E_QuestWaitingDialogues GetEntity(BGId entityId)
	{
		return (E_QuestWaitingDialogues) MetaDefault.GetEntity(entityId);
	}
	public static E_QuestWaitingDialogues GetEntity(int index)
	{
		return (E_QuestWaitingDialogues) MetaDefault[index];
	}
	public static E_QuestWaitingDialogues GetEntity(string entityName)
	{
		return (E_QuestWaitingDialogues) MetaDefault.GetEntity(entityName);
	}
	public static E_QuestWaitingDialogues NewEntity()
	{
		return (E_QuestWaitingDialogues) MetaDefault.NewEntity();
	}
	public static E_QuestWaitingDialogues NewEntity(E_Dialogues owner)
	{
		return (E_QuestWaitingDialogues) MetaDefault.NewEntity(owner);
	}
}

//=============================================================
//||                   Generated by BansheeGz Code Generator ||
//=============================================================

public partial class E_SegmentsGameplayData : BGEntity
{

	//=============================================================
	//||                   Generated by BansheeGz Code Generator ||
	//=============================================================

	public class Factory : BGEntity.EntityFactory
	{
		public BGEntity NewEntity(BGMetaEntity meta)
		{
			return new E_SegmentsGameplayData(meta);
		}
		public BGEntity NewEntity(BGMetaEntity meta, BGId id)
		{
			return new E_SegmentsGameplayData(meta, id);
		}
	}
	private static BansheeGz.BGDatabase.BGMetaRow _metaDefault;
	public static BansheeGz.BGDatabase.BGMetaRow MetaDefault
	{
		get
		{
			if(_metaDefault==null || _metaDefault.IsDeleted) _metaDefault=BGRepo.I.GetMeta<BansheeGz.BGDatabase.BGMetaRow>(new BGId(4989130159753333157UL,7118120055729332661UL));
			return _metaDefault;
		}
	}
	public static BansheeGz.BGDatabase.BGRepoEvents Events
	{
		get
		{
			return BGRepo.I.Events;
		}
	}
	private static readonly List<BGEntity> _find_Entities_Result = new List<BGEntity>();
	public static int CountEntities
	{
		get
		{
			return MetaDefault.CountEntities;
		}
	}
	public System.String f_name
	{
		get
		{
			return _f_name[Index];
		}
		set
		{
			_f_name[Index] = value;
		}
	}
	public E_Segments f_Segment
	{
		get
		{
			return (E_Segments) _f_Segment[Index];
		}
		set
		{
			_f_Segment[Index] = value;
		}
	}
	public System.Boolean f_Rescued
	{
		get
		{
			return _f_Rescued[Index];
		}
		set
		{
			_f_Rescued[Index] = value;
		}
	}
	public System.Boolean f_AddedToSerpScreen
	{
		get
		{
			return _f_AddedToSerpScreen[Index];
		}
		set
		{
			_f_AddedToSerpScreen[Index] = value;
		}
	}
	public List<E_FluffDialogueGameplayData> f_FluffDialogueGameplayData
	{
		get
		{
			var val = _f_FluffDialogueGameplayData[Index];
			if(val==null || val.Count==0) return null;
			var _ufle12jhs_FluffDialogueGameplayData = new List<E_FluffDialogueGameplayData>();
			for (var i = 0; i < val.Count; i++) _ufle12jhs_FluffDialogueGameplayData.Add((E_FluffDialogueGameplayData) val[i]);
			return _ufle12jhs_FluffDialogueGameplayData;
		}
	}
	private static BansheeGz.BGDatabase.BGFieldEntityName _ufle12jhs77_f_name;
	public static BansheeGz.BGDatabase.BGFieldEntityName _f_name
	{
		get
		{
			if(_ufle12jhs77_f_name==null || _ufle12jhs77_f_name.IsDeleted) _ufle12jhs77_f_name=(BansheeGz.BGDatabase.BGFieldEntityName) MetaDefault.GetField(new BGId(5330384241163026195UL,12595475573590950033UL));
			return _ufle12jhs77_f_name;
		}
	}
	private static BansheeGz.BGDatabase.BGFieldRelationSingle _ufle12jhs77_f_Segment;
	public static BansheeGz.BGDatabase.BGFieldRelationSingle _f_Segment
	{
		get
		{
			if(_ufle12jhs77_f_Segment==null || _ufle12jhs77_f_Segment.IsDeleted) _ufle12jhs77_f_Segment=(BansheeGz.BGDatabase.BGFieldRelationSingle) MetaDefault.GetField(new BGId(5163421334888915869UL,10163773687724329907UL));
			return _ufle12jhs77_f_Segment;
		}
	}
	private static BansheeGz.BGDatabase.BGFieldBool _ufle12jhs77_f_Rescued;
	public static BansheeGz.BGDatabase.BGFieldBool _f_Rescued
	{
		get
		{
			if(_ufle12jhs77_f_Rescued==null || _ufle12jhs77_f_Rescued.IsDeleted) _ufle12jhs77_f_Rescued=(BansheeGz.BGDatabase.BGFieldBool) MetaDefault.GetField(new BGId(4897271965161504167UL,2768130027215449236UL));
			return _ufle12jhs77_f_Rescued;
		}
	}
	private static BansheeGz.BGDatabase.BGFieldBool _ufle12jhs77_f_AddedToSerpScreen;
	public static BansheeGz.BGDatabase.BGFieldBool _f_AddedToSerpScreen
	{
		get
		{
			if(_ufle12jhs77_f_AddedToSerpScreen==null || _ufle12jhs77_f_AddedToSerpScreen.IsDeleted) _ufle12jhs77_f_AddedToSerpScreen=(BansheeGz.BGDatabase.BGFieldBool) MetaDefault.GetField(new BGId(5472508438153550995UL,3271020857625076629UL));
			return _ufle12jhs77_f_AddedToSerpScreen;
		}
	}
	private static BansheeGz.BGDatabase.BGFieldNested _ufle12jhs77_f_FluffDialogueGameplayData;
	public static BansheeGz.BGDatabase.BGFieldNested _f_FluffDialogueGameplayData
	{
		get
		{
			if(_ufle12jhs77_f_FluffDialogueGameplayData==null || _ufle12jhs77_f_FluffDialogueGameplayData.IsDeleted) _ufle12jhs77_f_FluffDialogueGameplayData=(BansheeGz.BGDatabase.BGFieldNested) MetaDefault.GetField(new BGId(5289789315245825160UL,11581812223873279893UL));
			return _ufle12jhs77_f_FluffDialogueGameplayData;
		}
	}
	private static readonly List<BGEntity> _tugjbyuhfv_reusableList = new List<BGEntity>();
	public List<E_Segments> RelatedSegmentsListUsingGameplayDataRelation
	{
		get
		{
			var _private_related_list = Alias_rifegrt_Segments._f_GameplayData.GetRelatedIn(Id, _tugjbyuhfv_reusableList);
			if (_private_related_list.Count == 0) return null;
			var _private_result_list = new List<E_Segments>(_private_related_list.Count);
			for (var i = 0; i < _private_related_list.Count; i++) _private_result_list.Add((E_Segments) _private_related_list[i]);
			_tugjbyuhfv_reusableList.Clear();
			return _private_result_list;
		}
	}
	private static readonly E_LevelData.Factory _factory0_PFS = new E_LevelData.Factory();
	private static readonly E_Biome.Factory _factory1_PFS = new E_Biome.Factory();
	private static readonly E_Pin.Factory _factory2_PFS = new E_Pin.Factory();
	private static readonly E_LevelGameplayData.Factory _factory3_PFS = new E_LevelGameplayData.Factory();
	private static readonly E_MapWalls.Factory _factory4_PFS = new E_MapWalls.Factory();
	private static readonly E_BiomeGameplayData.Factory _factory5_PFS = new E_BiomeGameplayData.Factory();
	private static readonly E_BiomeIdentifier.Factory _factory6_PFS = new E_BiomeIdentifier.Factory();
	private static readonly E_Dialogues.Factory _factory7_PFS = new E_Dialogues.Factory();
	private static readonly E_Segments.Factory _factory8_PFS = new E_Segments.Factory();
	private static readonly E_QuestDialogues.Factory _factory9_PFS = new E_QuestDialogues.Factory();
	private static readonly E_ReturnDialogues.Factory _factory10_PFS = new E_ReturnDialogues.Factory();
	private static readonly E_QuestWaitingDialogues.Factory _factory11_PFS = new E_QuestWaitingDialogues.Factory();
	private static readonly E_SegmentsGameplayData.Factory _factory12_PFS = new E_SegmentsGameplayData.Factory();
	private static readonly E_Objects.Factory _factory13_PFS = new E_Objects.Factory();
	private static readonly E_ObjectsGameplayData.Factory _factory14_PFS = new E_ObjectsGameplayData.Factory();
	private static readonly E_BiomeMaterials.Factory _factory15_PFS = new E_BiomeMaterials.Factory();
	private static readonly E_AltReturnDialogues.Factory _factory16_PFS = new E_AltReturnDialogues.Factory();
	private static readonly E_FluffDialogues.Factory _factory17_PFS = new E_FluffDialogues.Factory();
	private static readonly E_FluffDialogueGameplayData.Factory _factory18_PFS = new E_FluffDialogueGameplayData.Factory();
	private E_SegmentsGameplayData() : base(MetaDefault)
	{
	}
	private E_SegmentsGameplayData(BGId id) : base(MetaDefault, id)
	{
	}
	private E_SegmentsGameplayData(BGMetaEntity meta) : base(meta)
	{
	}
	private E_SegmentsGameplayData(BGMetaEntity meta, BGId id) : base(meta, id)
	{
	}
	public static E_SegmentsGameplayData FindEntity(Predicate<E_SegmentsGameplayData> filter)
	{
		return MetaDefault.FindEntity(entity => filter==null || filter((E_SegmentsGameplayData) entity)) as E_SegmentsGameplayData;
	}
	public static List<E_SegmentsGameplayData> FindEntities(Predicate<E_SegmentsGameplayData> filter, List<E_SegmentsGameplayData> result=null, Comparison<E_SegmentsGameplayData> sort=null)
	{
		result = result ?? new List<E_SegmentsGameplayData>();
		_find_Entities_Result.Clear();
		MetaDefault.FindEntities(filter == null ? (Predicate<BGEntity>) null: e => filter((E_SegmentsGameplayData) e), _find_Entities_Result, sort == null ? (Comparison<BGEntity>) null : (e1, e2) => sort((E_SegmentsGameplayData) e1, (E_SegmentsGameplayData) e2));
		if (_find_Entities_Result.Count != 0)
		{
			for (var i = 0; i < _find_Entities_Result.Count; i++) result.Add((E_SegmentsGameplayData) _find_Entities_Result[i]);
			_find_Entities_Result.Clear();
		}
		return result;
	}
	public static void ForEachEntity(Action<E_SegmentsGameplayData> action, Predicate<E_SegmentsGameplayData> filter=null, Comparison<E_SegmentsGameplayData> sort=null)
	{
		MetaDefault.ForEachEntity(entity => action((E_SegmentsGameplayData) entity), filter == null ? null : (Predicate<BGEntity>) (entity => filter((E_SegmentsGameplayData) entity)), sort==null?(Comparison<BGEntity>) null:(e1,e2) => sort((E_SegmentsGameplayData)e1,(E_SegmentsGameplayData)e2));
	}
	public static E_SegmentsGameplayData GetEntity(BGId entityId)
	{
		return (E_SegmentsGameplayData) MetaDefault.GetEntity(entityId);
	}
	public static E_SegmentsGameplayData GetEntity(int index)
	{
		return (E_SegmentsGameplayData) MetaDefault[index];
	}
	public static E_SegmentsGameplayData GetEntity(string entityName)
	{
		return (E_SegmentsGameplayData) MetaDefault.GetEntity(entityName);
	}
	public static E_SegmentsGameplayData NewEntity()
	{
		return (E_SegmentsGameplayData) MetaDefault.NewEntity();
	}
}

//=============================================================
//||                   Generated by BansheeGz Code Generator ||
//=============================================================

public partial class E_Objects : BGEntity
{

	//=============================================================
	//||                   Generated by BansheeGz Code Generator ||
	//=============================================================

	public class Factory : BGEntity.EntityFactory
	{
		public BGEntity NewEntity(BGMetaEntity meta)
		{
			return new E_Objects(meta);
		}
		public BGEntity NewEntity(BGMetaEntity meta, BGId id)
		{
			return new E_Objects(meta, id);
		}
	}
	private static BansheeGz.BGDatabase.BGMetaRow _metaDefault;
	public static BansheeGz.BGDatabase.BGMetaRow MetaDefault
	{
		get
		{
			if(_metaDefault==null || _metaDefault.IsDeleted) _metaDefault=BGRepo.I.GetMeta<BansheeGz.BGDatabase.BGMetaRow>(new BGId(4871657982410721797UL,750137968299760546UL));
			return _metaDefault;
		}
	}
	public static BansheeGz.BGDatabase.BGRepoEvents Events
	{
		get
		{
			return BGRepo.I.Events;
		}
	}
	private static readonly List<BGEntity> _find_Entities_Result = new List<BGEntity>();
	public static int CountEntities
	{
		get
		{
			return MetaDefault.CountEntities;
		}
	}
	public System.String f_name
	{
		get
		{
			return _f_name[Index];
		}
		set
		{
			_f_name[Index] = value;
		}
	}
	public System.String f_ObjectTitle
	{
		get
		{
			return _f_ObjectTitle[Index];
		}
		set
		{
			_f_ObjectTitle[Index] = value;
		}
	}
	public System.String f_ObjectSubText
	{
		get
		{
			return _f_ObjectSubText[Index];
		}
		set
		{
			_f_ObjectSubText[Index] = value;
		}
	}
	public UnityEngine.GameObject f_Prefab
	{
		get
		{
			return _f_Prefab[Index];
		}
	}
	public E_Segments f_Owner
	{
		get
		{
			return (E_Segments) _f_Owner[Index];
		}
		set
		{
			_f_Owner[Index] = value;
		}
	}
	public E_ObjectsGameplayData f_GameplayData
	{
		get
		{
			return (E_ObjectsGameplayData) _f_GameplayData[Index];
		}
		set
		{
			_f_GameplayData[Index] = value;
		}
	}
	private static BansheeGz.BGDatabase.BGFieldEntityName _ufle12jhs77_f_name;
	public static BansheeGz.BGDatabase.BGFieldEntityName _f_name
	{
		get
		{
			if(_ufle12jhs77_f_name==null || _ufle12jhs77_f_name.IsDeleted) _ufle12jhs77_f_name=(BansheeGz.BGDatabase.BGFieldEntityName) MetaDefault.GetField(new BGId(5270256987534184595UL,7271033944239394211UL));
			return _ufle12jhs77_f_name;
		}
	}
	private static BansheeGz.BGDatabase.BGFieldString _ufle12jhs77_f_ObjectTitle;
	public static BansheeGz.BGDatabase.BGFieldString _f_ObjectTitle
	{
		get
		{
			if(_ufle12jhs77_f_ObjectTitle==null || _ufle12jhs77_f_ObjectTitle.IsDeleted) _ufle12jhs77_f_ObjectTitle=(BansheeGz.BGDatabase.BGFieldString) MetaDefault.GetField(new BGId(5394372170959802640UL,9009507287611560632UL));
			return _ufle12jhs77_f_ObjectTitle;
		}
	}
	private static BansheeGz.BGDatabase.BGFieldString _ufle12jhs77_f_ObjectSubText;
	public static BansheeGz.BGDatabase.BGFieldString _f_ObjectSubText
	{
		get
		{
			if(_ufle12jhs77_f_ObjectSubText==null || _ufle12jhs77_f_ObjectSubText.IsDeleted) _ufle12jhs77_f_ObjectSubText=(BansheeGz.BGDatabase.BGFieldString) MetaDefault.GetField(new BGId(5594065245607900864UL,6912274191189485987UL));
			return _ufle12jhs77_f_ObjectSubText;
		}
	}
	private static BansheeGz.BGDatabase.BGFieldUnityPrefab _ufle12jhs77_f_Prefab;
	public static BansheeGz.BGDatabase.BGFieldUnityPrefab _f_Prefab
	{
		get
		{
			if(_ufle12jhs77_f_Prefab==null || _ufle12jhs77_f_Prefab.IsDeleted) _ufle12jhs77_f_Prefab=(BansheeGz.BGDatabase.BGFieldUnityPrefab) MetaDefault.GetField(new BGId(4702383594286821901UL,9980623028393390773UL));
			return _ufle12jhs77_f_Prefab;
		}
	}
	private static BansheeGz.BGDatabase.BGFieldRelationSingle _ufle12jhs77_f_Owner;
	public static BansheeGz.BGDatabase.BGFieldRelationSingle _f_Owner
	{
		get
		{
			if(_ufle12jhs77_f_Owner==null || _ufle12jhs77_f_Owner.IsDeleted) _ufle12jhs77_f_Owner=(BansheeGz.BGDatabase.BGFieldRelationSingle) MetaDefault.GetField(new BGId(5020747016533988793UL,12419271386286385327UL));
			return _ufle12jhs77_f_Owner;
		}
	}
	private static BansheeGz.BGDatabase.BGFieldRelationSingle _ufle12jhs77_f_GameplayData;
	public static BansheeGz.BGDatabase.BGFieldRelationSingle _f_GameplayData
	{
		get
		{
			if(_ufle12jhs77_f_GameplayData==null || _ufle12jhs77_f_GameplayData.IsDeleted) _ufle12jhs77_f_GameplayData=(BansheeGz.BGDatabase.BGFieldRelationSingle) MetaDefault.GetField(new BGId(5680102043031229158UL,4949064207623274920UL));
			return _ufle12jhs77_f_GameplayData;
		}
	}
	private static readonly List<BGEntity> _tugjbyuhfv_reusableList = new List<BGEntity>();
	public List<E_Segments> RelatedSegmentsListUsingObjectsRelation
	{
		get
		{
			var _private_related_list = Alias_rifegrt_Segments._f_Objects.GetRelatedIn(Id, _tugjbyuhfv_reusableList);
			if (_private_related_list.Count == 0) return null;
			var _private_result_list = new List<E_Segments>(_private_related_list.Count);
			for (var i = 0; i < _private_related_list.Count; i++) _private_result_list.Add((E_Segments) _private_related_list[i]);
			_tugjbyuhfv_reusableList.Clear();
			return _private_result_list;
		}
	}
	public List<E_QuestDialogues> RelatedQuestDialoguesListUsingForObjectRelation
	{
		get
		{
			var _private_related_list = Alias_rifegrt_QuestDialogues._f_ForObject.GetRelatedIn(Id, _tugjbyuhfv_reusableList);
			if (_private_related_list.Count == 0) return null;
			var _private_result_list = new List<E_QuestDialogues>(_private_related_list.Count);
			for (var i = 0; i < _private_related_list.Count; i++) _private_result_list.Add((E_QuestDialogues) _private_related_list[i]);
			_tugjbyuhfv_reusableList.Clear();
			return _private_result_list;
		}
	}
	public List<E_ReturnDialogues> RelatedReturnDialoguesListUsingForObjectRelation
	{
		get
		{
			var _private_related_list = Alias_rifegrt_ReturnDialogues._f_ForObject.GetRelatedIn(Id, _tugjbyuhfv_reusableList);
			if (_private_related_list.Count == 0) return null;
			var _private_result_list = new List<E_ReturnDialogues>(_private_related_list.Count);
			for (var i = 0; i < _private_related_list.Count; i++) _private_result_list.Add((E_ReturnDialogues) _private_related_list[i]);
			_tugjbyuhfv_reusableList.Clear();
			return _private_result_list;
		}
	}
	public List<E_QuestWaitingDialogues> RelatedQuestWaitingDialoguesListUsingForObjectRelation
	{
		get
		{
			var _private_related_list = Alias_rifegrt_QuestWaitingDialogues._f_ForObject.GetRelatedIn(Id, _tugjbyuhfv_reusableList);
			if (_private_related_list.Count == 0) return null;
			var _private_result_list = new List<E_QuestWaitingDialogues>(_private_related_list.Count);
			for (var i = 0; i < _private_related_list.Count; i++) _private_result_list.Add((E_QuestWaitingDialogues) _private_related_list[i]);
			_tugjbyuhfv_reusableList.Clear();
			return _private_result_list;
		}
	}
	public List<E_ObjectsGameplayData> RelatedObjectsGameplayDataListUsingObjectRelation
	{
		get
		{
			var _private_related_list = Alias_rifegrt_ObjectsGameplayData._f_Object.GetRelatedIn(Id, _tugjbyuhfv_reusableList);
			if (_private_related_list.Count == 0) return null;
			var _private_result_list = new List<E_ObjectsGameplayData>(_private_related_list.Count);
			for (var i = 0; i < _private_related_list.Count; i++) _private_result_list.Add((E_ObjectsGameplayData) _private_related_list[i]);
			_tugjbyuhfv_reusableList.Clear();
			return _private_result_list;
		}
	}
	public List<E_AltReturnDialogues> RelatedAltReturnDialoguesListUsingForObjectRelation
	{
		get
		{
			var _private_related_list = Alias_rifegrt_AltReturnDialogues._f_ForObject.GetRelatedIn(Id, _tugjbyuhfv_reusableList);
			if (_private_related_list.Count == 0) return null;
			var _private_result_list = new List<E_AltReturnDialogues>(_private_related_list.Count);
			for (var i = 0; i < _private_related_list.Count; i++) _private_result_list.Add((E_AltReturnDialogues) _private_related_list[i]);
			_tugjbyuhfv_reusableList.Clear();
			return _private_result_list;
		}
	}
	private static readonly E_LevelData.Factory _factory0_PFS = new E_LevelData.Factory();
	private static readonly E_Biome.Factory _factory1_PFS = new E_Biome.Factory();
	private static readonly E_Pin.Factory _factory2_PFS = new E_Pin.Factory();
	private static readonly E_LevelGameplayData.Factory _factory3_PFS = new E_LevelGameplayData.Factory();
	private static readonly E_MapWalls.Factory _factory4_PFS = new E_MapWalls.Factory();
	private static readonly E_BiomeGameplayData.Factory _factory5_PFS = new E_BiomeGameplayData.Factory();
	private static readonly E_BiomeIdentifier.Factory _factory6_PFS = new E_BiomeIdentifier.Factory();
	private static readonly E_Dialogues.Factory _factory7_PFS = new E_Dialogues.Factory();
	private static readonly E_Segments.Factory _factory8_PFS = new E_Segments.Factory();
	private static readonly E_QuestDialogues.Factory _factory9_PFS = new E_QuestDialogues.Factory();
	private static readonly E_ReturnDialogues.Factory _factory10_PFS = new E_ReturnDialogues.Factory();
	private static readonly E_QuestWaitingDialogues.Factory _factory11_PFS = new E_QuestWaitingDialogues.Factory();
	private static readonly E_SegmentsGameplayData.Factory _factory12_PFS = new E_SegmentsGameplayData.Factory();
	private static readonly E_Objects.Factory _factory13_PFS = new E_Objects.Factory();
	private static readonly E_ObjectsGameplayData.Factory _factory14_PFS = new E_ObjectsGameplayData.Factory();
	private static readonly E_BiomeMaterials.Factory _factory15_PFS = new E_BiomeMaterials.Factory();
	private static readonly E_AltReturnDialogues.Factory _factory16_PFS = new E_AltReturnDialogues.Factory();
	private static readonly E_FluffDialogues.Factory _factory17_PFS = new E_FluffDialogues.Factory();
	private static readonly E_FluffDialogueGameplayData.Factory _factory18_PFS = new E_FluffDialogueGameplayData.Factory();
	private E_Objects() : base(MetaDefault)
	{
	}
	private E_Objects(BGId id) : base(MetaDefault, id)
	{
	}
	private E_Objects(BGMetaEntity meta) : base(meta)
	{
	}
	private E_Objects(BGMetaEntity meta, BGId id) : base(meta, id)
	{
	}
	public static E_Objects FindEntity(Predicate<E_Objects> filter)
	{
		return MetaDefault.FindEntity(entity => filter==null || filter((E_Objects) entity)) as E_Objects;
	}
	public static List<E_Objects> FindEntities(Predicate<E_Objects> filter, List<E_Objects> result=null, Comparison<E_Objects> sort=null)
	{
		result = result ?? new List<E_Objects>();
		_find_Entities_Result.Clear();
		MetaDefault.FindEntities(filter == null ? (Predicate<BGEntity>) null: e => filter((E_Objects) e), _find_Entities_Result, sort == null ? (Comparison<BGEntity>) null : (e1, e2) => sort((E_Objects) e1, (E_Objects) e2));
		if (_find_Entities_Result.Count != 0)
		{
			for (var i = 0; i < _find_Entities_Result.Count; i++) result.Add((E_Objects) _find_Entities_Result[i]);
			_find_Entities_Result.Clear();
		}
		return result;
	}
	public static void ForEachEntity(Action<E_Objects> action, Predicate<E_Objects> filter=null, Comparison<E_Objects> sort=null)
	{
		MetaDefault.ForEachEntity(entity => action((E_Objects) entity), filter == null ? null : (Predicate<BGEntity>) (entity => filter((E_Objects) entity)), sort==null?(Comparison<BGEntity>) null:(e1,e2) => sort((E_Objects)e1,(E_Objects)e2));
	}
	public static E_Objects GetEntity(BGId entityId)
	{
		return (E_Objects) MetaDefault.GetEntity(entityId);
	}
	public static E_Objects GetEntity(int index)
	{
		return (E_Objects) MetaDefault[index];
	}
	public static E_Objects GetEntity(string entityName)
	{
		return (E_Objects) MetaDefault.GetEntity(entityName);
	}
	public static E_Objects NewEntity()
	{
		return (E_Objects) MetaDefault.NewEntity();
	}
}

//=============================================================
//||                   Generated by BansheeGz Code Generator ||
//=============================================================

public partial class E_ObjectsGameplayData : BGEntity
{

	//=============================================================
	//||                   Generated by BansheeGz Code Generator ||
	//=============================================================

	public class Factory : BGEntity.EntityFactory
	{
		public BGEntity NewEntity(BGMetaEntity meta)
		{
			return new E_ObjectsGameplayData(meta);
		}
		public BGEntity NewEntity(BGMetaEntity meta, BGId id)
		{
			return new E_ObjectsGameplayData(meta, id);
		}
	}
	private static BansheeGz.BGDatabase.BGMetaRow _metaDefault;
	public static BansheeGz.BGDatabase.BGMetaRow MetaDefault
	{
		get
		{
			if(_metaDefault==null || _metaDefault.IsDeleted) _metaDefault=BGRepo.I.GetMeta<BansheeGz.BGDatabase.BGMetaRow>(new BGId(4658376294490806110UL,6950373328361257866UL));
			return _metaDefault;
		}
	}
	public static BansheeGz.BGDatabase.BGRepoEvents Events
	{
		get
		{
			return BGRepo.I.Events;
		}
	}
	private static readonly List<BGEntity> _find_Entities_Result = new List<BGEntity>();
	public static int CountEntities
	{
		get
		{
			return MetaDefault.CountEntities;
		}
	}
	public System.String f_name
	{
		get
		{
			return _f_name[Index];
		}
		set
		{
			_f_name[Index] = value;
		}
	}
	public E_Objects f_Object
	{
		get
		{
			return (E_Objects) _f_Object[Index];
		}
		set
		{
			_f_Object[Index] = value;
		}
	}
	public System.Boolean f_QuestMarkerShown
	{
		get
		{
			return _f_QuestMarkerShown[Index];
		}
		set
		{
			_f_QuestMarkerShown[Index] = value;
		}
	}
	public System.Boolean f_ObjectQuestGiven
	{
		get
		{
			return _f_ObjectQuestGiven[Index];
		}
		set
		{
			_f_ObjectQuestGiven[Index] = value;
		}
	}
	public System.Boolean f_ObjectFound
	{
		get
		{
			return _f_ObjectFound[Index];
		}
		set
		{
			_f_ObjectFound[Index] = value;
		}
	}
	public System.Boolean f_ObjectReturned
	{
		get
		{
			return _f_ObjectReturned[Index];
		}
		set
		{
			_f_ObjectReturned[Index] = value;
		}
	}
	private static BansheeGz.BGDatabase.BGFieldEntityName _ufle12jhs77_f_name;
	public static BansheeGz.BGDatabase.BGFieldEntityName _f_name
	{
		get
		{
			if(_ufle12jhs77_f_name==null || _ufle12jhs77_f_name.IsDeleted) _ufle12jhs77_f_name=(BansheeGz.BGDatabase.BGFieldEntityName) MetaDefault.GetField(new BGId(4704137733006346466UL,6507642195071752856UL));
			return _ufle12jhs77_f_name;
		}
	}
	private static BansheeGz.BGDatabase.BGFieldRelationSingle _ufle12jhs77_f_Object;
	public static BansheeGz.BGDatabase.BGFieldRelationSingle _f_Object
	{
		get
		{
			if(_ufle12jhs77_f_Object==null || _ufle12jhs77_f_Object.IsDeleted) _ufle12jhs77_f_Object=(BansheeGz.BGDatabase.BGFieldRelationSingle) MetaDefault.GetField(new BGId(5575310436151618600UL,1591952302039477673UL));
			return _ufle12jhs77_f_Object;
		}
	}
	private static BansheeGz.BGDatabase.BGFieldBool _ufle12jhs77_f_QuestMarkerShown;
	public static BansheeGz.BGDatabase.BGFieldBool _f_QuestMarkerShown
	{
		get
		{
			if(_ufle12jhs77_f_QuestMarkerShown==null || _ufle12jhs77_f_QuestMarkerShown.IsDeleted) _ufle12jhs77_f_QuestMarkerShown=(BansheeGz.BGDatabase.BGFieldBool) MetaDefault.GetField(new BGId(5441579611133312618UL,5205218947404216211UL));
			return _ufle12jhs77_f_QuestMarkerShown;
		}
	}
	private static BansheeGz.BGDatabase.BGFieldBool _ufle12jhs77_f_ObjectQuestGiven;
	public static BansheeGz.BGDatabase.BGFieldBool _f_ObjectQuestGiven
	{
		get
		{
			if(_ufle12jhs77_f_ObjectQuestGiven==null || _ufle12jhs77_f_ObjectQuestGiven.IsDeleted) _ufle12jhs77_f_ObjectQuestGiven=(BansheeGz.BGDatabase.BGFieldBool) MetaDefault.GetField(new BGId(4691334056568724199UL,3732333455379869369UL));
			return _ufle12jhs77_f_ObjectQuestGiven;
		}
	}
	private static BansheeGz.BGDatabase.BGFieldBool _ufle12jhs77_f_ObjectFound;
	public static BansheeGz.BGDatabase.BGFieldBool _f_ObjectFound
	{
		get
		{
			if(_ufle12jhs77_f_ObjectFound==null || _ufle12jhs77_f_ObjectFound.IsDeleted) _ufle12jhs77_f_ObjectFound=(BansheeGz.BGDatabase.BGFieldBool) MetaDefault.GetField(new BGId(5418712494444133144UL,10507902628022803586UL));
			return _ufle12jhs77_f_ObjectFound;
		}
	}
	private static BansheeGz.BGDatabase.BGFieldBool _ufle12jhs77_f_ObjectReturned;
	public static BansheeGz.BGDatabase.BGFieldBool _f_ObjectReturned
	{
		get
		{
			if(_ufle12jhs77_f_ObjectReturned==null || _ufle12jhs77_f_ObjectReturned.IsDeleted) _ufle12jhs77_f_ObjectReturned=(BansheeGz.BGDatabase.BGFieldBool) MetaDefault.GetField(new BGId(4762361548636797324UL,11593070393711443599UL));
			return _ufle12jhs77_f_ObjectReturned;
		}
	}
	private static readonly List<BGEntity> _tugjbyuhfv_reusableList = new List<BGEntity>();
	public List<E_Objects> RelatedObjectsListUsingGameplayDataRelation
	{
		get
		{
			var _private_related_list = Alias_rifegrt_Objects._f_GameplayData.GetRelatedIn(Id, _tugjbyuhfv_reusableList);
			if (_private_related_list.Count == 0) return null;
			var _private_result_list = new List<E_Objects>(_private_related_list.Count);
			for (var i = 0; i < _private_related_list.Count; i++) _private_result_list.Add((E_Objects) _private_related_list[i]);
			_tugjbyuhfv_reusableList.Clear();
			return _private_result_list;
		}
	}
	private static readonly E_LevelData.Factory _factory0_PFS = new E_LevelData.Factory();
	private static readonly E_Biome.Factory _factory1_PFS = new E_Biome.Factory();
	private static readonly E_Pin.Factory _factory2_PFS = new E_Pin.Factory();
	private static readonly E_LevelGameplayData.Factory _factory3_PFS = new E_LevelGameplayData.Factory();
	private static readonly E_MapWalls.Factory _factory4_PFS = new E_MapWalls.Factory();
	private static readonly E_BiomeGameplayData.Factory _factory5_PFS = new E_BiomeGameplayData.Factory();
	private static readonly E_BiomeIdentifier.Factory _factory6_PFS = new E_BiomeIdentifier.Factory();
	private static readonly E_Dialogues.Factory _factory7_PFS = new E_Dialogues.Factory();
	private static readonly E_Segments.Factory _factory8_PFS = new E_Segments.Factory();
	private static readonly E_QuestDialogues.Factory _factory9_PFS = new E_QuestDialogues.Factory();
	private static readonly E_ReturnDialogues.Factory _factory10_PFS = new E_ReturnDialogues.Factory();
	private static readonly E_QuestWaitingDialogues.Factory _factory11_PFS = new E_QuestWaitingDialogues.Factory();
	private static readonly E_SegmentsGameplayData.Factory _factory12_PFS = new E_SegmentsGameplayData.Factory();
	private static readonly E_Objects.Factory _factory13_PFS = new E_Objects.Factory();
	private static readonly E_ObjectsGameplayData.Factory _factory14_PFS = new E_ObjectsGameplayData.Factory();
	private static readonly E_BiomeMaterials.Factory _factory15_PFS = new E_BiomeMaterials.Factory();
	private static readonly E_AltReturnDialogues.Factory _factory16_PFS = new E_AltReturnDialogues.Factory();
	private static readonly E_FluffDialogues.Factory _factory17_PFS = new E_FluffDialogues.Factory();
	private static readonly E_FluffDialogueGameplayData.Factory _factory18_PFS = new E_FluffDialogueGameplayData.Factory();
	private E_ObjectsGameplayData() : base(MetaDefault)
	{
	}
	private E_ObjectsGameplayData(BGId id) : base(MetaDefault, id)
	{
	}
	private E_ObjectsGameplayData(BGMetaEntity meta) : base(meta)
	{
	}
	private E_ObjectsGameplayData(BGMetaEntity meta, BGId id) : base(meta, id)
	{
	}
	public static E_ObjectsGameplayData FindEntity(Predicate<E_ObjectsGameplayData> filter)
	{
		return MetaDefault.FindEntity(entity => filter==null || filter((E_ObjectsGameplayData) entity)) as E_ObjectsGameplayData;
	}
	public static List<E_ObjectsGameplayData> FindEntities(Predicate<E_ObjectsGameplayData> filter, List<E_ObjectsGameplayData> result=null, Comparison<E_ObjectsGameplayData> sort=null)
	{
		result = result ?? new List<E_ObjectsGameplayData>();
		_find_Entities_Result.Clear();
		MetaDefault.FindEntities(filter == null ? (Predicate<BGEntity>) null: e => filter((E_ObjectsGameplayData) e), _find_Entities_Result, sort == null ? (Comparison<BGEntity>) null : (e1, e2) => sort((E_ObjectsGameplayData) e1, (E_ObjectsGameplayData) e2));
		if (_find_Entities_Result.Count != 0)
		{
			for (var i = 0; i < _find_Entities_Result.Count; i++) result.Add((E_ObjectsGameplayData) _find_Entities_Result[i]);
			_find_Entities_Result.Clear();
		}
		return result;
	}
	public static void ForEachEntity(Action<E_ObjectsGameplayData> action, Predicate<E_ObjectsGameplayData> filter=null, Comparison<E_ObjectsGameplayData> sort=null)
	{
		MetaDefault.ForEachEntity(entity => action((E_ObjectsGameplayData) entity), filter == null ? null : (Predicate<BGEntity>) (entity => filter((E_ObjectsGameplayData) entity)), sort==null?(Comparison<BGEntity>) null:(e1,e2) => sort((E_ObjectsGameplayData)e1,(E_ObjectsGameplayData)e2));
	}
	public static E_ObjectsGameplayData GetEntity(BGId entityId)
	{
		return (E_ObjectsGameplayData) MetaDefault.GetEntity(entityId);
	}
	public static E_ObjectsGameplayData GetEntity(int index)
	{
		return (E_ObjectsGameplayData) MetaDefault[index];
	}
	public static E_ObjectsGameplayData GetEntity(string entityName)
	{
		return (E_ObjectsGameplayData) MetaDefault.GetEntity(entityName);
	}
	public static E_ObjectsGameplayData NewEntity()
	{
		return (E_ObjectsGameplayData) MetaDefault.NewEntity();
	}
}

//=============================================================
//||                   Generated by BansheeGz Code Generator ||
//=============================================================

public partial class E_BiomeMaterials : BGEntity
{

	//=============================================================
	//||                   Generated by BansheeGz Code Generator ||
	//=============================================================

	public class Factory : BGEntity.EntityFactory
	{
		public BGEntity NewEntity(BGMetaEntity meta)
		{
			return new E_BiomeMaterials(meta);
		}
		public BGEntity NewEntity(BGMetaEntity meta, BGId id)
		{
			return new E_BiomeMaterials(meta, id);
		}
	}
	private static BansheeGz.BGDatabase.BGMetaRow _metaDefault;
	public static BansheeGz.BGDatabase.BGMetaRow MetaDefault
	{
		get
		{
			if(_metaDefault==null || _metaDefault.IsDeleted) _metaDefault=BGRepo.I.GetMeta<BansheeGz.BGDatabase.BGMetaRow>(new BGId(4649947552330352983UL,13530387805308431750UL));
			return _metaDefault;
		}
	}
	public static BansheeGz.BGDatabase.BGRepoEvents Events
	{
		get
		{
			return BGRepo.I.Events;
		}
	}
	private static readonly List<BGEntity> _find_Entities_Result = new List<BGEntity>();
	public static int CountEntities
	{
		get
		{
			return MetaDefault.CountEntities;
		}
	}
	public System.String f_name
	{
		get
		{
			return _f_name[Index];
		}
		set
		{
			_f_name[Index] = value;
		}
	}
	public UnityEngine.Material f_BaseMat
	{
		get
		{
			return _f_BaseMat[Index];
		}
	}
	public UnityEngine.ScriptableObject f_BiomeMatData
	{
		get
		{
			return _f_BiomeMatData[Index];
		}
	}
	private static BansheeGz.BGDatabase.BGFieldEntityName _ufle12jhs77_f_name;
	public static BansheeGz.BGDatabase.BGFieldEntityName _f_name
	{
		get
		{
			if(_ufle12jhs77_f_name==null || _ufle12jhs77_f_name.IsDeleted) _ufle12jhs77_f_name=(BansheeGz.BGDatabase.BGFieldEntityName) MetaDefault.GetField(new BGId(4978891958627373064UL,9403543406811406215UL));
			return _ufle12jhs77_f_name;
		}
	}
	private static BansheeGz.BGDatabase.BGFieldUnityMaterial _ufle12jhs77_f_BaseMat;
	public static BansheeGz.BGDatabase.BGFieldUnityMaterial _f_BaseMat
	{
		get
		{
			if(_ufle12jhs77_f_BaseMat==null || _ufle12jhs77_f_BaseMat.IsDeleted) _ufle12jhs77_f_BaseMat=(BansheeGz.BGDatabase.BGFieldUnityMaterial) MetaDefault.GetField(new BGId(5644313148071272613UL,4942721971229058439UL));
			return _ufle12jhs77_f_BaseMat;
		}
	}
	private static BansheeGz.BGDatabase.BGFieldUnityScriptableObject _ufle12jhs77_f_BiomeMatData;
	public static BansheeGz.BGDatabase.BGFieldUnityScriptableObject _f_BiomeMatData
	{
		get
		{
			if(_ufle12jhs77_f_BiomeMatData==null || _ufle12jhs77_f_BiomeMatData.IsDeleted) _ufle12jhs77_f_BiomeMatData=(BansheeGz.BGDatabase.BGFieldUnityScriptableObject) MetaDefault.GetField(new BGId(5687714982544646833UL,9757857676103977126UL));
			return _ufle12jhs77_f_BiomeMatData;
		}
	}
	private static readonly E_LevelData.Factory _factory0_PFS = new E_LevelData.Factory();
	private static readonly E_Biome.Factory _factory1_PFS = new E_Biome.Factory();
	private static readonly E_Pin.Factory _factory2_PFS = new E_Pin.Factory();
	private static readonly E_LevelGameplayData.Factory _factory3_PFS = new E_LevelGameplayData.Factory();
	private static readonly E_MapWalls.Factory _factory4_PFS = new E_MapWalls.Factory();
	private static readonly E_BiomeGameplayData.Factory _factory5_PFS = new E_BiomeGameplayData.Factory();
	private static readonly E_BiomeIdentifier.Factory _factory6_PFS = new E_BiomeIdentifier.Factory();
	private static readonly E_Dialogues.Factory _factory7_PFS = new E_Dialogues.Factory();
	private static readonly E_Segments.Factory _factory8_PFS = new E_Segments.Factory();
	private static readonly E_QuestDialogues.Factory _factory9_PFS = new E_QuestDialogues.Factory();
	private static readonly E_ReturnDialogues.Factory _factory10_PFS = new E_ReturnDialogues.Factory();
	private static readonly E_QuestWaitingDialogues.Factory _factory11_PFS = new E_QuestWaitingDialogues.Factory();
	private static readonly E_SegmentsGameplayData.Factory _factory12_PFS = new E_SegmentsGameplayData.Factory();
	private static readonly E_Objects.Factory _factory13_PFS = new E_Objects.Factory();
	private static readonly E_ObjectsGameplayData.Factory _factory14_PFS = new E_ObjectsGameplayData.Factory();
	private static readonly E_BiomeMaterials.Factory _factory15_PFS = new E_BiomeMaterials.Factory();
	private static readonly E_AltReturnDialogues.Factory _factory16_PFS = new E_AltReturnDialogues.Factory();
	private static readonly E_FluffDialogues.Factory _factory17_PFS = new E_FluffDialogues.Factory();
	private static readonly E_FluffDialogueGameplayData.Factory _factory18_PFS = new E_FluffDialogueGameplayData.Factory();
	private E_BiomeMaterials() : base(MetaDefault)
	{
	}
	private E_BiomeMaterials(BGId id) : base(MetaDefault, id)
	{
	}
	private E_BiomeMaterials(BGMetaEntity meta) : base(meta)
	{
	}
	private E_BiomeMaterials(BGMetaEntity meta, BGId id) : base(meta, id)
	{
	}
	public static E_BiomeMaterials FindEntity(Predicate<E_BiomeMaterials> filter)
	{
		return MetaDefault.FindEntity(entity => filter==null || filter((E_BiomeMaterials) entity)) as E_BiomeMaterials;
	}
	public static List<E_BiomeMaterials> FindEntities(Predicate<E_BiomeMaterials> filter, List<E_BiomeMaterials> result=null, Comparison<E_BiomeMaterials> sort=null)
	{
		result = result ?? new List<E_BiomeMaterials>();
		_find_Entities_Result.Clear();
		MetaDefault.FindEntities(filter == null ? (Predicate<BGEntity>) null: e => filter((E_BiomeMaterials) e), _find_Entities_Result, sort == null ? (Comparison<BGEntity>) null : (e1, e2) => sort((E_BiomeMaterials) e1, (E_BiomeMaterials) e2));
		if (_find_Entities_Result.Count != 0)
		{
			for (var i = 0; i < _find_Entities_Result.Count; i++) result.Add((E_BiomeMaterials) _find_Entities_Result[i]);
			_find_Entities_Result.Clear();
		}
		return result;
	}
	public static void ForEachEntity(Action<E_BiomeMaterials> action, Predicate<E_BiomeMaterials> filter=null, Comparison<E_BiomeMaterials> sort=null)
	{
		MetaDefault.ForEachEntity(entity => action((E_BiomeMaterials) entity), filter == null ? null : (Predicate<BGEntity>) (entity => filter((E_BiomeMaterials) entity)), sort==null?(Comparison<BGEntity>) null:(e1,e2) => sort((E_BiomeMaterials)e1,(E_BiomeMaterials)e2));
	}
	public static E_BiomeMaterials GetEntity(BGId entityId)
	{
		return (E_BiomeMaterials) MetaDefault.GetEntity(entityId);
	}
	public static E_BiomeMaterials GetEntity(int index)
	{
		return (E_BiomeMaterials) MetaDefault[index];
	}
	public static E_BiomeMaterials GetEntity(string entityName)
	{
		return (E_BiomeMaterials) MetaDefault.GetEntity(entityName);
	}
	public static E_BiomeMaterials NewEntity()
	{
		return (E_BiomeMaterials) MetaDefault.NewEntity();
	}
}

//=============================================================
//||                   Generated by BansheeGz Code Generator ||
//=============================================================

public partial class E_AltReturnDialogues : BGEntity
{

	//=============================================================
	//||                   Generated by BansheeGz Code Generator ||
	//=============================================================

	public class Factory : BGEntity.EntityFactory
	{
		public BGEntity NewEntity(BGMetaEntity meta)
		{
			return new E_AltReturnDialogues(meta);
		}
		public BGEntity NewEntity(BGMetaEntity meta, BGId id)
		{
			return new E_AltReturnDialogues(meta, id);
		}
	}
	private static BansheeGz.BGDatabase.BGMetaNested _metaDefault;
	public static BansheeGz.BGDatabase.BGMetaNested MetaDefault
	{
		get
		{
			if(_metaDefault==null || _metaDefault.IsDeleted) _metaDefault=BGRepo.I.GetMeta<BansheeGz.BGDatabase.BGMetaNested>(new BGId(5116211647076336472UL,1029247132276741789UL));
			return _metaDefault;
		}
	}
	public static BansheeGz.BGDatabase.BGRepoEvents Events
	{
		get
		{
			return BGRepo.I.Events;
		}
	}
	private static readonly List<BGEntity> _find_Entities_Result = new List<BGEntity>();
	public static int CountEntities
	{
		get
		{
			return MetaDefault.CountEntities;
		}
	}
	public System.String f_name
	{
		get
		{
			return _f_name[Index];
		}
		set
		{
			_f_name[Index] = value;
		}
	}
	public E_Dialogues f_Dialogues
	{
		get
		{
			return (E_Dialogues) _f_Dialogues[Index];
		}
		set
		{
			_f_Dialogues[Index] = value;
		}
	}
	public UnityEngine.ScriptableObject f_AltReturnDialogue
	{
		get
		{
			return _f_AltReturnDialogue[Index];
		}
	}
	public E_Objects f_ForObject
	{
		get
		{
			return (E_Objects) _f_ForObject[Index];
		}
		set
		{
			_f_ForObject[Index] = value;
		}
	}
	private static BansheeGz.BGDatabase.BGFieldEntityName _ufle12jhs77_f_name;
	public static BansheeGz.BGDatabase.BGFieldEntityName _f_name
	{
		get
		{
			if(_ufle12jhs77_f_name==null || _ufle12jhs77_f_name.IsDeleted) _ufle12jhs77_f_name=(BansheeGz.BGDatabase.BGFieldEntityName) MetaDefault.GetField(new BGId(5630188164082248730UL,3653813906008458128UL));
			return _ufle12jhs77_f_name;
		}
	}
	private static BansheeGz.BGDatabase.BGFieldRelationSingle _ufle12jhs77_f_Dialogues;
	public static BansheeGz.BGDatabase.BGFieldRelationSingle _f_Dialogues
	{
		get
		{
			if(_ufle12jhs77_f_Dialogues==null || _ufle12jhs77_f_Dialogues.IsDeleted) _ufle12jhs77_f_Dialogues=(BansheeGz.BGDatabase.BGFieldRelationSingle) MetaDefault.GetField(new BGId(4903345113090519767UL,5243101848848291474UL));
			return _ufle12jhs77_f_Dialogues;
		}
	}
	private static BansheeGz.BGDatabase.BGFieldUnityScriptableObject _ufle12jhs77_f_AltReturnDialogue;
	public static BansheeGz.BGDatabase.BGFieldUnityScriptableObject _f_AltReturnDialogue
	{
		get
		{
			if(_ufle12jhs77_f_AltReturnDialogue==null || _ufle12jhs77_f_AltReturnDialogue.IsDeleted) _ufle12jhs77_f_AltReturnDialogue=(BansheeGz.BGDatabase.BGFieldUnityScriptableObject) MetaDefault.GetField(new BGId(4789403982547808403UL,11727554669750760104UL));
			return _ufle12jhs77_f_AltReturnDialogue;
		}
	}
	private static BansheeGz.BGDatabase.BGFieldRelationSingle _ufle12jhs77_f_ForObject;
	public static BansheeGz.BGDatabase.BGFieldRelationSingle _f_ForObject
	{
		get
		{
			if(_ufle12jhs77_f_ForObject==null || _ufle12jhs77_f_ForObject.IsDeleted) _ufle12jhs77_f_ForObject=(BansheeGz.BGDatabase.BGFieldRelationSingle) MetaDefault.GetField(new BGId(5443773460688572763UL,4573129114968502200UL));
			return _ufle12jhs77_f_ForObject;
		}
	}
	private static readonly E_LevelData.Factory _factory0_PFS = new E_LevelData.Factory();
	private static readonly E_Biome.Factory _factory1_PFS = new E_Biome.Factory();
	private static readonly E_Pin.Factory _factory2_PFS = new E_Pin.Factory();
	private static readonly E_LevelGameplayData.Factory _factory3_PFS = new E_LevelGameplayData.Factory();
	private static readonly E_MapWalls.Factory _factory4_PFS = new E_MapWalls.Factory();
	private static readonly E_BiomeGameplayData.Factory _factory5_PFS = new E_BiomeGameplayData.Factory();
	private static readonly E_BiomeIdentifier.Factory _factory6_PFS = new E_BiomeIdentifier.Factory();
	private static readonly E_Dialogues.Factory _factory7_PFS = new E_Dialogues.Factory();
	private static readonly E_Segments.Factory _factory8_PFS = new E_Segments.Factory();
	private static readonly E_QuestDialogues.Factory _factory9_PFS = new E_QuestDialogues.Factory();
	private static readonly E_ReturnDialogues.Factory _factory10_PFS = new E_ReturnDialogues.Factory();
	private static readonly E_QuestWaitingDialogues.Factory _factory11_PFS = new E_QuestWaitingDialogues.Factory();
	private static readonly E_SegmentsGameplayData.Factory _factory12_PFS = new E_SegmentsGameplayData.Factory();
	private static readonly E_Objects.Factory _factory13_PFS = new E_Objects.Factory();
	private static readonly E_ObjectsGameplayData.Factory _factory14_PFS = new E_ObjectsGameplayData.Factory();
	private static readonly E_BiomeMaterials.Factory _factory15_PFS = new E_BiomeMaterials.Factory();
	private static readonly E_AltReturnDialogues.Factory _factory16_PFS = new E_AltReturnDialogues.Factory();
	private static readonly E_FluffDialogues.Factory _factory17_PFS = new E_FluffDialogues.Factory();
	private static readonly E_FluffDialogueGameplayData.Factory _factory18_PFS = new E_FluffDialogueGameplayData.Factory();
	private E_AltReturnDialogues() : base(MetaDefault)
	{
	}
	private E_AltReturnDialogues(BGId id) : base(MetaDefault, id)
	{
	}
	private E_AltReturnDialogues(BGMetaEntity meta) : base(meta)
	{
	}
	private E_AltReturnDialogues(BGMetaEntity meta, BGId id) : base(meta, id)
	{
	}
	public static E_AltReturnDialogues FindEntity(Predicate<E_AltReturnDialogues> filter)
	{
		return MetaDefault.FindEntity(entity => filter==null || filter((E_AltReturnDialogues) entity)) as E_AltReturnDialogues;
	}
	public static List<E_AltReturnDialogues> FindEntities(Predicate<E_AltReturnDialogues> filter, List<E_AltReturnDialogues> result=null, Comparison<E_AltReturnDialogues> sort=null)
	{
		result = result ?? new List<E_AltReturnDialogues>();
		_find_Entities_Result.Clear();
		MetaDefault.FindEntities(filter == null ? (Predicate<BGEntity>) null: e => filter((E_AltReturnDialogues) e), _find_Entities_Result, sort == null ? (Comparison<BGEntity>) null : (e1, e2) => sort((E_AltReturnDialogues) e1, (E_AltReturnDialogues) e2));
		if (_find_Entities_Result.Count != 0)
		{
			for (var i = 0; i < _find_Entities_Result.Count; i++) result.Add((E_AltReturnDialogues) _find_Entities_Result[i]);
			_find_Entities_Result.Clear();
		}
		return result;
	}
	public static void ForEachEntity(Action<E_AltReturnDialogues> action, Predicate<E_AltReturnDialogues> filter=null, Comparison<E_AltReturnDialogues> sort=null)
	{
		MetaDefault.ForEachEntity(entity => action((E_AltReturnDialogues) entity), filter == null ? null : (Predicate<BGEntity>) (entity => filter((E_AltReturnDialogues) entity)), sort==null?(Comparison<BGEntity>) null:(e1,e2) => sort((E_AltReturnDialogues)e1,(E_AltReturnDialogues)e2));
	}
	public static E_AltReturnDialogues GetEntity(BGId entityId)
	{
		return (E_AltReturnDialogues) MetaDefault.GetEntity(entityId);
	}
	public static E_AltReturnDialogues GetEntity(int index)
	{
		return (E_AltReturnDialogues) MetaDefault[index];
	}
	public static E_AltReturnDialogues GetEntity(string entityName)
	{
		return (E_AltReturnDialogues) MetaDefault.GetEntity(entityName);
	}
	public static E_AltReturnDialogues NewEntity()
	{
		return (E_AltReturnDialogues) MetaDefault.NewEntity();
	}
	public static E_AltReturnDialogues NewEntity(E_Dialogues owner)
	{
		return (E_AltReturnDialogues) MetaDefault.NewEntity(owner);
	}
}

//=============================================================
//||                   Generated by BansheeGz Code Generator ||
//=============================================================

public partial class E_FluffDialogues : BGEntity
{

	//=============================================================
	//||                   Generated by BansheeGz Code Generator ||
	//=============================================================

	public class Factory : BGEntity.EntityFactory
	{
		public BGEntity NewEntity(BGMetaEntity meta)
		{
			return new E_FluffDialogues(meta);
		}
		public BGEntity NewEntity(BGMetaEntity meta, BGId id)
		{
			return new E_FluffDialogues(meta, id);
		}
	}
	private static BansheeGz.BGDatabase.BGMetaNested _metaDefault;
	public static BansheeGz.BGDatabase.BGMetaNested MetaDefault
	{
		get
		{
			if(_metaDefault==null || _metaDefault.IsDeleted) _metaDefault=BGRepo.I.GetMeta<BansheeGz.BGDatabase.BGMetaNested>(new BGId(5501167370060631032UL,10787851089245723537UL));
			return _metaDefault;
		}
	}
	public static BansheeGz.BGDatabase.BGRepoEvents Events
	{
		get
		{
			return BGRepo.I.Events;
		}
	}
	private static readonly List<BGEntity> _find_Entities_Result = new List<BGEntity>();
	public static int CountEntities
	{
		get
		{
			return MetaDefault.CountEntities;
		}
	}
	public System.String f_name
	{
		get
		{
			return _f_name[Index];
		}
		set
		{
			_f_name[Index] = value;
		}
	}
	public E_Dialogues f_Dialogues
	{
		get
		{
			return (E_Dialogues) _f_Dialogues[Index];
		}
		set
		{
			_f_Dialogues[Index] = value;
		}
	}
	public UnityEngine.ScriptableObject f_FluffDialogue
	{
		get
		{
			return _f_FluffDialogue[Index];
		}
	}
	public E_FluffDialogueGameplayData f_GameplayData
	{
		get
		{
			return (E_FluffDialogueGameplayData) _f_GameplayData[Index];
		}
		set
		{
			_f_GameplayData[Index] = value;
		}
	}
	private static BansheeGz.BGDatabase.BGFieldEntityName _ufle12jhs77_f_name;
	public static BansheeGz.BGDatabase.BGFieldEntityName _f_name
	{
		get
		{
			if(_ufle12jhs77_f_name==null || _ufle12jhs77_f_name.IsDeleted) _ufle12jhs77_f_name=(BansheeGz.BGDatabase.BGFieldEntityName) MetaDefault.GetField(new BGId(4678961077541721324UL,18130792169655123106UL));
			return _ufle12jhs77_f_name;
		}
	}
	private static BansheeGz.BGDatabase.BGFieldRelationSingle _ufle12jhs77_f_Dialogues;
	public static BansheeGz.BGDatabase.BGFieldRelationSingle _f_Dialogues
	{
		get
		{
			if(_ufle12jhs77_f_Dialogues==null || _ufle12jhs77_f_Dialogues.IsDeleted) _ufle12jhs77_f_Dialogues=(BansheeGz.BGDatabase.BGFieldRelationSingle) MetaDefault.GetField(new BGId(5025612804227916872UL,6154068310714723463UL));
			return _ufle12jhs77_f_Dialogues;
		}
	}
	private static BansheeGz.BGDatabase.BGFieldUnityScriptableObject _ufle12jhs77_f_FluffDialogue;
	public static BansheeGz.BGDatabase.BGFieldUnityScriptableObject _f_FluffDialogue
	{
		get
		{
			if(_ufle12jhs77_f_FluffDialogue==null || _ufle12jhs77_f_FluffDialogue.IsDeleted) _ufle12jhs77_f_FluffDialogue=(BansheeGz.BGDatabase.BGFieldUnityScriptableObject) MetaDefault.GetField(new BGId(5022444791640245293UL,3339558332882937501UL));
			return _ufle12jhs77_f_FluffDialogue;
		}
	}
	private static BansheeGz.BGDatabase.BGFieldRelationSingle _ufle12jhs77_f_GameplayData;
	public static BansheeGz.BGDatabase.BGFieldRelationSingle _f_GameplayData
	{
		get
		{
			if(_ufle12jhs77_f_GameplayData==null || _ufle12jhs77_f_GameplayData.IsDeleted) _ufle12jhs77_f_GameplayData=(BansheeGz.BGDatabase.BGFieldRelationSingle) MetaDefault.GetField(new BGId(5366881371379425601UL,3453028088459494838UL));
			return _ufle12jhs77_f_GameplayData;
		}
	}
	private static readonly E_LevelData.Factory _factory0_PFS = new E_LevelData.Factory();
	private static readonly E_Biome.Factory _factory1_PFS = new E_Biome.Factory();
	private static readonly E_Pin.Factory _factory2_PFS = new E_Pin.Factory();
	private static readonly E_LevelGameplayData.Factory _factory3_PFS = new E_LevelGameplayData.Factory();
	private static readonly E_MapWalls.Factory _factory4_PFS = new E_MapWalls.Factory();
	private static readonly E_BiomeGameplayData.Factory _factory5_PFS = new E_BiomeGameplayData.Factory();
	private static readonly E_BiomeIdentifier.Factory _factory6_PFS = new E_BiomeIdentifier.Factory();
	private static readonly E_Dialogues.Factory _factory7_PFS = new E_Dialogues.Factory();
	private static readonly E_Segments.Factory _factory8_PFS = new E_Segments.Factory();
	private static readonly E_QuestDialogues.Factory _factory9_PFS = new E_QuestDialogues.Factory();
	private static readonly E_ReturnDialogues.Factory _factory10_PFS = new E_ReturnDialogues.Factory();
	private static readonly E_QuestWaitingDialogues.Factory _factory11_PFS = new E_QuestWaitingDialogues.Factory();
	private static readonly E_SegmentsGameplayData.Factory _factory12_PFS = new E_SegmentsGameplayData.Factory();
	private static readonly E_Objects.Factory _factory13_PFS = new E_Objects.Factory();
	private static readonly E_ObjectsGameplayData.Factory _factory14_PFS = new E_ObjectsGameplayData.Factory();
	private static readonly E_BiomeMaterials.Factory _factory15_PFS = new E_BiomeMaterials.Factory();
	private static readonly E_AltReturnDialogues.Factory _factory16_PFS = new E_AltReturnDialogues.Factory();
	private static readonly E_FluffDialogues.Factory _factory17_PFS = new E_FluffDialogues.Factory();
	private static readonly E_FluffDialogueGameplayData.Factory _factory18_PFS = new E_FluffDialogueGameplayData.Factory();
	private E_FluffDialogues() : base(MetaDefault)
	{
	}
	private E_FluffDialogues(BGId id) : base(MetaDefault, id)
	{
	}
	private E_FluffDialogues(BGMetaEntity meta) : base(meta)
	{
	}
	private E_FluffDialogues(BGMetaEntity meta, BGId id) : base(meta, id)
	{
	}
	public static E_FluffDialogues FindEntity(Predicate<E_FluffDialogues> filter)
	{
		return MetaDefault.FindEntity(entity => filter==null || filter((E_FluffDialogues) entity)) as E_FluffDialogues;
	}
	public static List<E_FluffDialogues> FindEntities(Predicate<E_FluffDialogues> filter, List<E_FluffDialogues> result=null, Comparison<E_FluffDialogues> sort=null)
	{
		result = result ?? new List<E_FluffDialogues>();
		_find_Entities_Result.Clear();
		MetaDefault.FindEntities(filter == null ? (Predicate<BGEntity>) null: e => filter((E_FluffDialogues) e), _find_Entities_Result, sort == null ? (Comparison<BGEntity>) null : (e1, e2) => sort((E_FluffDialogues) e1, (E_FluffDialogues) e2));
		if (_find_Entities_Result.Count != 0)
		{
			for (var i = 0; i < _find_Entities_Result.Count; i++) result.Add((E_FluffDialogues) _find_Entities_Result[i]);
			_find_Entities_Result.Clear();
		}
		return result;
	}
	public static void ForEachEntity(Action<E_FluffDialogues> action, Predicate<E_FluffDialogues> filter=null, Comparison<E_FluffDialogues> sort=null)
	{
		MetaDefault.ForEachEntity(entity => action((E_FluffDialogues) entity), filter == null ? null : (Predicate<BGEntity>) (entity => filter((E_FluffDialogues) entity)), sort==null?(Comparison<BGEntity>) null:(e1,e2) => sort((E_FluffDialogues)e1,(E_FluffDialogues)e2));
	}
	public static E_FluffDialogues GetEntity(BGId entityId)
	{
		return (E_FluffDialogues) MetaDefault.GetEntity(entityId);
	}
	public static E_FluffDialogues GetEntity(int index)
	{
		return (E_FluffDialogues) MetaDefault[index];
	}
	public static E_FluffDialogues GetEntity(string entityName)
	{
		return (E_FluffDialogues) MetaDefault.GetEntity(entityName);
	}
	public static E_FluffDialogues NewEntity()
	{
		return (E_FluffDialogues) MetaDefault.NewEntity();
	}
	public static E_FluffDialogues NewEntity(E_Dialogues owner)
	{
		return (E_FluffDialogues) MetaDefault.NewEntity(owner);
	}
}

//=============================================================
//||                   Generated by BansheeGz Code Generator ||
//=============================================================

public partial class E_FluffDialogueGameplayData : BGEntity
{

	//=============================================================
	//||                   Generated by BansheeGz Code Generator ||
	//=============================================================

	public class Factory : BGEntity.EntityFactory
	{
		public BGEntity NewEntity(BGMetaEntity meta)
		{
			return new E_FluffDialogueGameplayData(meta);
		}
		public BGEntity NewEntity(BGMetaEntity meta, BGId id)
		{
			return new E_FluffDialogueGameplayData(meta, id);
		}
	}
	private static BansheeGz.BGDatabase.BGMetaNested _metaDefault;
	public static BansheeGz.BGDatabase.BGMetaNested MetaDefault
	{
		get
		{
			if(_metaDefault==null || _metaDefault.IsDeleted) _metaDefault=BGRepo.I.GetMeta<BansheeGz.BGDatabase.BGMetaNested>(new BGId(5635743854043088856UL,17727459658554333612UL));
			return _metaDefault;
		}
	}
	public static BansheeGz.BGDatabase.BGRepoEvents Events
	{
		get
		{
			return BGRepo.I.Events;
		}
	}
	private static readonly List<BGEntity> _find_Entities_Result = new List<BGEntity>();
	public static int CountEntities
	{
		get
		{
			return MetaDefault.CountEntities;
		}
	}
	public System.String f_name
	{
		get
		{
			return _f_name[Index];
		}
		set
		{
			_f_name[Index] = value;
		}
	}
	public E_SegmentsGameplayData f_SegmentsGameplayData
	{
		get
		{
			return (E_SegmentsGameplayData) _f_SegmentsGameplayData[Index];
		}
		set
		{
			_f_SegmentsGameplayData[Index] = value;
		}
	}
	private static BansheeGz.BGDatabase.BGFieldEntityName _ufle12jhs77_f_name;
	public static BansheeGz.BGDatabase.BGFieldEntityName _f_name
	{
		get
		{
			if(_ufle12jhs77_f_name==null || _ufle12jhs77_f_name.IsDeleted) _ufle12jhs77_f_name=(BansheeGz.BGDatabase.BGFieldEntityName) MetaDefault.GetField(new BGId(5084205847461478916UL,6488143047621156767UL));
			return _ufle12jhs77_f_name;
		}
	}
	private static BansheeGz.BGDatabase.BGFieldRelationSingle _ufle12jhs77_f_SegmentsGameplayData;
	public static BansheeGz.BGDatabase.BGFieldRelationSingle _f_SegmentsGameplayData
	{
		get
		{
			if(_ufle12jhs77_f_SegmentsGameplayData==null || _ufle12jhs77_f_SegmentsGameplayData.IsDeleted) _ufle12jhs77_f_SegmentsGameplayData=(BansheeGz.BGDatabase.BGFieldRelationSingle) MetaDefault.GetField(new BGId(5633271626414292479UL,9592474805348906911UL));
			return _ufle12jhs77_f_SegmentsGameplayData;
		}
	}
	private static readonly List<BGEntity> _tugjbyuhfv_reusableList = new List<BGEntity>();
	public List<E_FluffDialogues> RelatedFluffDialoguesListUsingGameplayDataRelation
	{
		get
		{
			var _private_related_list = Alias_rifegrt_FluffDialogues._f_GameplayData.GetRelatedIn(Id, _tugjbyuhfv_reusableList);
			if (_private_related_list.Count == 0) return null;
			var _private_result_list = new List<E_FluffDialogues>(_private_related_list.Count);
			for (var i = 0; i < _private_related_list.Count; i++) _private_result_list.Add((E_FluffDialogues) _private_related_list[i]);
			_tugjbyuhfv_reusableList.Clear();
			return _private_result_list;
		}
	}
	private static readonly E_LevelData.Factory _factory0_PFS = new E_LevelData.Factory();
	private static readonly E_Biome.Factory _factory1_PFS = new E_Biome.Factory();
	private static readonly E_Pin.Factory _factory2_PFS = new E_Pin.Factory();
	private static readonly E_LevelGameplayData.Factory _factory3_PFS = new E_LevelGameplayData.Factory();
	private static readonly E_MapWalls.Factory _factory4_PFS = new E_MapWalls.Factory();
	private static readonly E_BiomeGameplayData.Factory _factory5_PFS = new E_BiomeGameplayData.Factory();
	private static readonly E_BiomeIdentifier.Factory _factory6_PFS = new E_BiomeIdentifier.Factory();
	private static readonly E_Dialogues.Factory _factory7_PFS = new E_Dialogues.Factory();
	private static readonly E_Segments.Factory _factory8_PFS = new E_Segments.Factory();
	private static readonly E_QuestDialogues.Factory _factory9_PFS = new E_QuestDialogues.Factory();
	private static readonly E_ReturnDialogues.Factory _factory10_PFS = new E_ReturnDialogues.Factory();
	private static readonly E_QuestWaitingDialogues.Factory _factory11_PFS = new E_QuestWaitingDialogues.Factory();
	private static readonly E_SegmentsGameplayData.Factory _factory12_PFS = new E_SegmentsGameplayData.Factory();
	private static readonly E_Objects.Factory _factory13_PFS = new E_Objects.Factory();
	private static readonly E_ObjectsGameplayData.Factory _factory14_PFS = new E_ObjectsGameplayData.Factory();
	private static readonly E_BiomeMaterials.Factory _factory15_PFS = new E_BiomeMaterials.Factory();
	private static readonly E_AltReturnDialogues.Factory _factory16_PFS = new E_AltReturnDialogues.Factory();
	private static readonly E_FluffDialogues.Factory _factory17_PFS = new E_FluffDialogues.Factory();
	private static readonly E_FluffDialogueGameplayData.Factory _factory18_PFS = new E_FluffDialogueGameplayData.Factory();
	private E_FluffDialogueGameplayData() : base(MetaDefault)
	{
	}
	private E_FluffDialogueGameplayData(BGId id) : base(MetaDefault, id)
	{
	}
	private E_FluffDialogueGameplayData(BGMetaEntity meta) : base(meta)
	{
	}
	private E_FluffDialogueGameplayData(BGMetaEntity meta, BGId id) : base(meta, id)
	{
	}
	public static E_FluffDialogueGameplayData FindEntity(Predicate<E_FluffDialogueGameplayData> filter)
	{
		return MetaDefault.FindEntity(entity => filter==null || filter((E_FluffDialogueGameplayData) entity)) as E_FluffDialogueGameplayData;
	}
	public static List<E_FluffDialogueGameplayData> FindEntities(Predicate<E_FluffDialogueGameplayData> filter, List<E_FluffDialogueGameplayData> result=null, Comparison<E_FluffDialogueGameplayData> sort=null)
	{
		result = result ?? new List<E_FluffDialogueGameplayData>();
		_find_Entities_Result.Clear();
		MetaDefault.FindEntities(filter == null ? (Predicate<BGEntity>) null: e => filter((E_FluffDialogueGameplayData) e), _find_Entities_Result, sort == null ? (Comparison<BGEntity>) null : (e1, e2) => sort((E_FluffDialogueGameplayData) e1, (E_FluffDialogueGameplayData) e2));
		if (_find_Entities_Result.Count != 0)
		{
			for (var i = 0; i < _find_Entities_Result.Count; i++) result.Add((E_FluffDialogueGameplayData) _find_Entities_Result[i]);
			_find_Entities_Result.Clear();
		}
		return result;
	}
	public static void ForEachEntity(Action<E_FluffDialogueGameplayData> action, Predicate<E_FluffDialogueGameplayData> filter=null, Comparison<E_FluffDialogueGameplayData> sort=null)
	{
		MetaDefault.ForEachEntity(entity => action((E_FluffDialogueGameplayData) entity), filter == null ? null : (Predicate<BGEntity>) (entity => filter((E_FluffDialogueGameplayData) entity)), sort==null?(Comparison<BGEntity>) null:(e1,e2) => sort((E_FluffDialogueGameplayData)e1,(E_FluffDialogueGameplayData)e2));
	}
	public static E_FluffDialogueGameplayData GetEntity(BGId entityId)
	{
		return (E_FluffDialogueGameplayData) MetaDefault.GetEntity(entityId);
	}
	public static E_FluffDialogueGameplayData GetEntity(int index)
	{
		return (E_FluffDialogueGameplayData) MetaDefault[index];
	}
	public static E_FluffDialogueGameplayData GetEntity(string entityName)
	{
		return (E_FluffDialogueGameplayData) MetaDefault.GetEntity(entityName);
	}
	public static E_FluffDialogueGameplayData NewEntity()
	{
		return (E_FluffDialogueGameplayData) MetaDefault.NewEntity();
	}
	public static E_FluffDialogueGameplayData NewEntity(E_SegmentsGameplayData owner)
	{
		return (E_FluffDialogueGameplayData) MetaDefault.NewEntity(owner);
	}
}
#pragma warning restore 414
