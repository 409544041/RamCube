using System;
using System.Collections.Generic;
using UnityEngine;
using BansheeGz.BGDatabase;

//=============================================================
//||                   Generated by BansheeGz Code Generator ||
//=============================================================

[AddComponentMenu("BansheeGz/Generated/LevelData")]
public partial class LevelData : BGEntityGo
{
	public override BGMetaEntity MetaConstraint
	{
		get
		{
			return MetaDefault;
		}
	}
	private static BansheeGz.BGDatabase.BGMetaRow _metaDefault;
	public static BansheeGz.BGDatabase.BGMetaRow MetaDefault
	{
		get
		{
			if(_metaDefault==null || _metaDefault.IsDeleted) _metaDefault=BGRepo.I.GetMeta<BansheeGz.BGDatabase.BGMetaRow>(new BGId(4612244309294333557UL,1881374458602735547UL));
			return _metaDefault;
		}
	}
	public static BansheeGz.BGDatabase.BGRepoEvents Events
	{
		get
		{
			return BGRepo.I.Events;
		}
	}
	public new System.String name
	{
		get
		{
			return _name[Entity.Index];
		}
		set
		{
			_name[Entity.Index] = value;
		}
	}
	public System.String Pin
	{
		get
		{
			return _Pin[Entity.Index];
		}
		set
		{
			_Pin[Entity.Index] = value;
		}
	}
	public System.String Biome
	{
		get
		{
			return _Biome[Entity.Index];
		}
		set
		{
			_Biome[Entity.Index] = value;
		}
	}
	public System.Int32 SceneIndex
	{
		get
		{
			return _SceneIndex[Entity.Index];
		}
		set
		{
			_SceneIndex[Entity.Index] = value;
		}
	}
	public System.String Level
	{
		get
		{
			return _Level[Entity.Index];
		}
		set
		{
			_Level[Entity.Index] = value;
		}
	}
	public System.Collections.Generic.List<System.String> UnlocksPins
	{
		get
		{
			return _UnlocksPins[Entity.Index];
		}
		set
		{
			_UnlocksPins[Entity.Index] = value;
		}
	}
	public System.Int32 LocksAmount
	{
		get
		{
			return _LocksAmount[Entity.Index];
		}
		set
		{
			_LocksAmount[Entity.Index] = value;
		}
	}
	public System.Boolean SegmentPresent
	{
		get
		{
			return _SegmentPresent[Entity.Index];
		}
		set
		{
			_SegmentPresent[Entity.Index] = value;
		}
	}
	public System.Int32 PinTextUI
	{
		get
		{
			return _PinTextUI[Entity.Index];
		}
		set
		{
			_PinTextUI[Entity.Index] = value;
		}
	}
	private static BansheeGz.BGDatabase.BGFieldEntityName __name;
	public static BansheeGz.BGDatabase.BGFieldEntityName _name
	{
		get
		{
			if(__name==null || __name.IsDeleted) __name=(BansheeGz.BGDatabase.BGFieldEntityName) MetaDefault.GetField(new BGId(4740419652275606489UL,16281884087163071164UL));
			return __name;
		}
	}
	private static BansheeGz.BGDatabase.BGFieldString __Pin;
	public static BansheeGz.BGDatabase.BGFieldString _Pin
	{
		get
		{
			if(__Pin==null || __Pin.IsDeleted) __Pin=(BansheeGz.BGDatabase.BGFieldString) MetaDefault.GetField(new BGId(5682167220749758013UL,4951703566532017813UL));
			return __Pin;
		}
	}
	private static BansheeGz.BGDatabase.BGFieldString __Biome;
	public static BansheeGz.BGDatabase.BGFieldString _Biome
	{
		get
		{
			if(__Biome==null || __Biome.IsDeleted) __Biome=(BansheeGz.BGDatabase.BGFieldString) MetaDefault.GetField(new BGId(5181998854119660587UL,4328844572943806389UL));
			return __Biome;
		}
	}
	private static BansheeGz.BGDatabase.BGFieldInt __SceneIndex;
	public static BansheeGz.BGDatabase.BGFieldInt _SceneIndex
	{
		get
		{
			if(__SceneIndex==null || __SceneIndex.IsDeleted) __SceneIndex=(BansheeGz.BGDatabase.BGFieldInt) MetaDefault.GetField(new BGId(5654346686901757335UL,3485210673166935936UL));
			return __SceneIndex;
		}
	}
	private static BansheeGz.BGDatabase.BGFieldString __Level;
	public static BansheeGz.BGDatabase.BGFieldString _Level
	{
		get
		{
			if(__Level==null || __Level.IsDeleted) __Level=(BansheeGz.BGDatabase.BGFieldString) MetaDefault.GetField(new BGId(4793347658190675977UL,5994557562632312988UL));
			return __Level;
		}
	}
	private static BansheeGz.BGDatabase.BGFieldListString __UnlocksPins;
	public static BansheeGz.BGDatabase.BGFieldListString _UnlocksPins
	{
		get
		{
			if(__UnlocksPins==null || __UnlocksPins.IsDeleted) __UnlocksPins=(BansheeGz.BGDatabase.BGFieldListString) MetaDefault.GetField(new BGId(4805642874922064827UL,1960175709770092955UL));
			return __UnlocksPins;
		}
	}
	private static BansheeGz.BGDatabase.BGFieldInt __LocksAmount;
	public static BansheeGz.BGDatabase.BGFieldInt _LocksAmount
	{
		get
		{
			if(__LocksAmount==null || __LocksAmount.IsDeleted) __LocksAmount=(BansheeGz.BGDatabase.BGFieldInt) MetaDefault.GetField(new BGId(5389772333846653446UL,11461131677490296486UL));
			return __LocksAmount;
		}
	}
	private static BansheeGz.BGDatabase.BGFieldBool __SegmentPresent;
	public static BansheeGz.BGDatabase.BGFieldBool _SegmentPresent
	{
		get
		{
			if(__SegmentPresent==null || __SegmentPresent.IsDeleted) __SegmentPresent=(BansheeGz.BGDatabase.BGFieldBool) MetaDefault.GetField(new BGId(5708768082108931619UL,17251627778783522965UL));
			return __SegmentPresent;
		}
	}
	private static BansheeGz.BGDatabase.BGFieldInt __PinTextUI;
	public static BansheeGz.BGDatabase.BGFieldInt _PinTextUI
	{
		get
		{
			if(__PinTextUI==null || __PinTextUI.IsDeleted) __PinTextUI=(BansheeGz.BGDatabase.BGFieldInt) MetaDefault.GetField(new BGId(5447454200109153741UL,10343940833932085641UL));
			return __PinTextUI;
		}
	}
}
