using System;
using System.Collections.Generic;
using UnityEngine;
using BansheeGz.BGDatabase;

//=============================================================
//||                   Generated by BansheeGz Code Generator ||
//=============================================================

[AddComponentMenu("BansheeGz/Generated/M_BiomeGameplayData")]
public partial class M_BiomeGameplayData : BGEntityGo
{
	public override BGMetaEntity MetaConstraint
	{
		get
		{
			return MetaDefault;
		}
	}
	private static BansheeGz.BGDatabase.BGMetaRow _metaDefault;
	public static BansheeGz.BGDatabase.BGMetaRow MetaDefault
	{
		get
		{
			if(_metaDefault==null || _metaDefault.IsDeleted) _metaDefault=BGRepo.I.GetMeta<BansheeGz.BGDatabase.BGMetaRow>(new BGId(5034592254073446088UL,14588748882179863990UL));
			return _metaDefault;
		}
	}
	public static BansheeGz.BGDatabase.BGRepoEvents Events
	{
		get
		{
			return BGRepo.I.Events;
		}
	}
	public System.String f_name
	{
		get
		{
			return _f_name[Entity.Index];
		}
		set
		{
			_f_name[Entity.Index] = value;
		}
	}
	public E_Biome f_Biome
	{
		get
		{
			return (E_Biome) _f_Biome[Entity.Index];
		}
		set
		{
			_f_Biome[Entity.Index] = value;
		}
	}
	public System.Boolean f_Unlocked
	{
		get
		{
			return _f_Unlocked[Entity.Index];
		}
		set
		{
			_f_Unlocked[Entity.Index] = value;
		}
	}
	private static BansheeGz.BGDatabase.BGFieldEntityName __f_name;
	public static BansheeGz.BGDatabase.BGFieldEntityName _f_name
	{
		get
		{
			if(__f_name==null || __f_name.IsDeleted) __f_name=(BansheeGz.BGDatabase.BGFieldEntityName) MetaDefault.GetField(new BGId(5375708437064997645UL,9652014909083819964UL));
			return __f_name;
		}
	}
	private static BansheeGz.BGDatabase.BGFieldRelationSingle __f_Biome;
	public static BansheeGz.BGDatabase.BGFieldRelationSingle _f_Biome
	{
		get
		{
			if(__f_Biome==null || __f_Biome.IsDeleted) __f_Biome=(BansheeGz.BGDatabase.BGFieldRelationSingle) MetaDefault.GetField(new BGId(4879000758735367296UL,1226467751643001504UL));
			return __f_Biome;
		}
	}
	private static BansheeGz.BGDatabase.BGFieldBool __f_Unlocked;
	public static BansheeGz.BGDatabase.BGFieldBool _f_Unlocked
	{
		get
		{
			if(__f_Unlocked==null || __f_Unlocked.IsDeleted) __f_Unlocked=(BansheeGz.BGDatabase.BGFieldBool) MetaDefault.GetField(new BGId(5632769683042661348UL,10279484367158860964UL));
			return __f_Unlocked;
		}
	}
}
