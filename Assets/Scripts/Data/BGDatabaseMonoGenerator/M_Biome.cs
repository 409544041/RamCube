using System;
using System.Collections.Generic;
using UnityEngine;
using BansheeGz.BGDatabase;
using Alias_rifegrt_Pin = E_Pin;
using Alias_rifegrt_BiomeGameplayData = E_BiomeGameplayData;

//=============================================================
//||                   Generated by BansheeGz Code Generator ||
//=============================================================

[AddComponentMenu("BansheeGz/Generated/M_Biome")]
public partial class M_Biome : BGEntityGo
{
	public override BGMetaEntity MetaConstraint => MetaDefault;
	private static BansheeGz.BGDatabase.BGMetaRow _metaDefault;
	public static BansheeGz.BGDatabase.BGMetaRow MetaDefault => _metaDefault ?? (_metaDefault = BGCodeGenUtils.GetMeta<BansheeGz.BGDatabase.BGMetaRow>(new BGId(5318121685371950766UL,2942031341061376408UL), () => _metaDefault = null));
	public static BansheeGz.BGDatabase.BGRepoEvents Events => BGRepo.I.Events;
	public System.String f_name
	{
		get => _f_name[Entity.Index];
		set => _f_name[Entity.Index] = value;
	}
	public UnityEngine.Vector2 f_MinMaxX
	{
		get => _f_MinMaxX[Entity.Index];
		set => _f_MinMaxX[Entity.Index] = value;
	}
	public UnityEngine.Vector2 f_MinMaxZ
	{
		get => _f_MinMaxZ[Entity.Index];
		set => _f_MinMaxZ[Entity.Index] = value;
	}
	public Biomes f_BiomeEnum
	{
		get => (Biomes) _f_BiomeEnum[Entity.Index];
		set => _f_BiomeEnum[Entity.Index] = value;
	}
	private static BansheeGz.BGDatabase.BGFieldEntityName _ufle12jhs77_f_name;
	public static BansheeGz.BGDatabase.BGFieldEntityName _f_name => _ufle12jhs77_f_name ?? (_ufle12jhs77_f_name = BGCodeGenUtils.GetField<BansheeGz.BGDatabase.BGFieldEntityName>(MetaDefault, new BGId(4811910356762317652UL, 6316590992709792654UL), () => _ufle12jhs77_f_name = null));
	private static BansheeGz.BGDatabase.BGFieldVector2 _ufle12jhs77_f_MinMaxX;
	public static BansheeGz.BGDatabase.BGFieldVector2 _f_MinMaxX => _ufle12jhs77_f_MinMaxX ?? (_ufle12jhs77_f_MinMaxX = BGCodeGenUtils.GetField<BansheeGz.BGDatabase.BGFieldVector2>(MetaDefault, new BGId(5540830184506237896UL, 8565432699577718708UL), () => _ufle12jhs77_f_MinMaxX = null));
	private static BansheeGz.BGDatabase.BGFieldVector2 _ufle12jhs77_f_MinMaxZ;
	public static BansheeGz.BGDatabase.BGFieldVector2 _f_MinMaxZ => _ufle12jhs77_f_MinMaxZ ?? (_ufle12jhs77_f_MinMaxZ = BGCodeGenUtils.GetField<BansheeGz.BGDatabase.BGFieldVector2>(MetaDefault, new BGId(5028550124850018592UL, 7548933405663777956UL), () => _ufle12jhs77_f_MinMaxZ = null));
	private static BansheeGz.BGDatabase.BGFieldEnum _ufle12jhs77_f_BiomeEnum;
	public static BansheeGz.BGDatabase.BGFieldEnum _f_BiomeEnum => _ufle12jhs77_f_BiomeEnum ?? (_ufle12jhs77_f_BiomeEnum = BGCodeGenUtils.GetField<BansheeGz.BGDatabase.BGFieldEnum>(MetaDefault, new BGId(5459334516898714152UL, 14924872184031788952UL), () => _ufle12jhs77_f_BiomeEnum = null));
	public List<Alias_rifegrt_Pin> RelatedPinListUsingBiomeRelation => BGCodeGenUtils.GetRelatedInbound<Alias_rifegrt_Pin>(Alias_rifegrt_Pin._f_Biome, Entity.Id);
	public List<Alias_rifegrt_BiomeGameplayData> RelatedBiomeGameplayDataListUsingBiomeRelation => BGCodeGenUtils.GetRelatedInbound<Alias_rifegrt_BiomeGameplayData>(Alias_rifegrt_BiomeGameplayData._f_Biome, Entity.Id);
}
